
;	CPU : MC68000 ( �� = 9.87 MHz )

;		  	    <<<< ���������� >>>>
;������������������������������������������������������������������������������
;�� ���ݒ�			SCSPBIN_top_def		Driver_work_BASE     ��
;�� Memory_map			SCSPBIN_Voice		Driver_work_top      ��
;�� System_IF_table		SCSPBIN_Layer		Driver_work_MIDI     ��
;�� Sound_Tool_IF_work		SCSPBIN_VL		Driver_work_DVA_Layer��
;�� System_Info			SCSPBIN_absolute	Driver_work_slot     ��
;�� Host_IF_work					D_Filter_work	     ��
;�� Sound_Area_Map		SCSP_Timer		Dip_Switch           ��
;�� Memory_size			SCSP_Reg		LED_on_off_speed     ��
;�� Work_RAM_in_Program		SCSP_INTERRUPT                               ��
;�� DSP_Linker_offset							     ��
;�� YM3802_Reg			MIDI_data		TEST_MAP             ��
;�� macro_def								     ��
;������������������������������������������������������������������������������

off		equ	0
on		equ	.not.off

;
;
;		<<<<<< ���ݒ� >>>>>>>
;
;

ENGN		equ	off	; �G���W������ ---> see ENGINE.DOC

SCSI_vctr_chg	equ	off
SW_TITAN	equ	off	; for �`�l �^�C�^��
sw_MODEL_M	equ	off	; on/off = M-board/Model-S(���@)

	if	sw_MODEL_M
SCSI_RAM_chk	equ	off	; SCSI access S-RAM R/W check
	else
SCSI_RAM_chk	equ	off	; don't toutch
	endif

nao_chg		equ	on	; SEQ �� rewrite by ��܂���
;
;
;		<<<<<< absolute value set >>>>>>>
;
;
default_volume		.equ	$7f		; MIDI volume Default �l

;
;
;		<<<<<< Hard-ware Memory Map >>>>>>>
;
;

IO_DRAM		equ	$000000
DRAM_size	equ	$100000		; 8Mbit
IO_SCSP		equ	$100000
	if	sw_MODEL_M
IO_EXP		equ	$200000	; �J���{�[�h�̂� �g���pI/O
IO_DMA		equ	$400000	;	//	 DMA controller
IO_ROM		equ	$600000	;	//	 ROM
IO_EMU		equ	$800000	;	//	 Emulation
IO_SCSI		equ	$a00000	;	//	 SCSI
IO_LED		equ	$c00000	;	//	 LED
IO_MIDI1	equ	$d00000	;	//	 MIDI
IO_MIDI2	equ	$d80000	;	//	 MIDI
IO_SRAM1	equ	$e00000	;	//	 S-RAM
IO_SRAM2	equ	$f00000	;	//	 S-RAM
SRAM1_size	equ	$40000		; 1Mbit �~ 2��
SRAM2_size	equ	$40000		; 1Mbit �~ 2��
	endif
	if	SW_TITAN
IO_PORT_C	equ	$600000	; bit0 coin1
				; bit1 coin2
				; bit2 JAMMA 25
				; bit3 JAMMA C
				; bit4 JAMMA 26
				; bit5 JAMMA D
	endif

SCSP_slot_unit	equ	$20	; slot unit size
SCSP_SLOT_SIZE  equ	SCSP_slot_unit
;
;
;		<<<<<<<<< D-RAM Map base def. >>>>>>>>>
;
sz_SIFTB	equ	 40H	; system interface table size
sz_SINFO	equ	 40H	; system information table size
sz_SIFWK	equ	 80H	; system interface work size
sz_AMAPC	equ	100H	; sound area map CRNT work size
sz_TIFWK	equ	 80H	; tool interface work size
sz_MONTR	equ	 80H	; monitor work size
sz_HIFWK	equ	100H	; host interface work size

bs_SIFTB	equ	$0400	; System I/F table
bs_SINFO	equ	$0440	; System Information table
bs_SIFWK	equ	$0480	; System I/F work top
bs_AMAPC	equ	$0500	; area map current work top addr
bs_TIFWK	equ	$0600	; TOOL I/F work top
bs_MONTR	equ	$0680	; Monitor buffer top
bs_HIFWK	equ	$0700	; HOST I/F work top
bs_CMDHS	equ	$0800	; HOST Command History Buffer top
bs_PRGTP	equ	$1000	; 68K Prg top address
sz_PRG		equ	$6000			;
bs_PWKTP	equ	bs_PRGTP+sz_PRG		; 68K work top address
sz_Prg_wk	equ	$3000			; 68k work size
bs_SSP		equ	bs_PWKTP+sz_Prg_wk	; stack pointer initial
bs_AREAM	equ	bs_SSP
sz_AREAM	equ	$1000
;
;
; 400H�`	<<<<<<<<< System I/F table def. >>>>>>>>>
;
;
Mem_SYINFO_PTR	equ     bs_SIFTB+$00	; system I/F table top addr
Mem_HOSTIF_PTR	equ	bs_SIFTB+$04	; Host interface work pointer
Mem_MAPCRNT_PTR	equ	bs_SIFTB+$08	; Map CRNT work pointer
Mem_TOOLIF_PTR	equ	bs_SIFTB+$0c	; Tool interface work pointer
Mem_DSP_FLG	equ	bs_SIFTB+$10	; work
Mem_DRV_FLG	equ	bs_SIFTB+$11	; Sound driver load flag
Mem_IFWK_PTR	equ	bs_SIFTB+$12	; System I/F work pointer
Mem_DRVERR_FLG	equ	bs_SIFTB+$16	; word
;ERRa15		equ	7	; = 0
ERRa14		equ	6
ERRa13		equ	5
ERRa12		equ	4
ERRa11		equ	3
ERRa10		equ	2	; Poly Mode key-off ���ׂ� key-on��slot�����݂��Ȃ�
ERRa_9		equ	1	; MIDI ch 10H�`1FH input
ERRa_8		equ	0	; Mono Mode key-off ���ׂ� key-on��slot�����݂��Ȃ�
;ERRa_7		equ	7	; = 0
ERRa_6		equ	6	; ����������32���𒴉�
ERRa_5		equ	5	; ���FBANK����Layer�����s��
ERRa_4		equ	4	; MIDI F0H�`FFH input
ERRa_3		equ	3	; MIDI channel pressure
ERRa_2		equ	2	; MIDI Polyphonic Key pressure
ERRa_1		equ	1	; ����` Level#6 ����
ERRa_0		equ	0	; ����` Level#5 ����
Mem_HD_chk	equ	bs_SIFTB+$18	; word
Mem_CMDHS_pt	equ	bs_SIFTB+$1A	;(word) HOST Commnd bufferring point
Mem_err_bit	equ	bs_SIFTB+$20	; long 94/10/31
;ERRb31		equ	7	; = 0
ERRb30		equ	6	; CPU buss error
ERRb29		equ	5	; CPU ��O����
ERRb28		equ	4	; CPU address error
ERRb27		equ	3	; Receive MIDI Buffer over flow
ERRb26		equ	2	; �s�� MIDI EXCL Receive
ERRb25		equ	1
ERRb24		equ	0
;ERRb23		equ	7	; = 0
ERRb22		equ	6	; Effect change No. > 0FH
ERRb21		equ	5
ERRb20		equ	4	; SDDRVS.TSK �� Media�Ԃł̕����~�X
ERRb19		equ	3	; R/W size > $20040
ERRb18		equ	2	; cannot find �Y�� SEQ Song#
ERRb17		equ	1	; note-on �� not ready [k_BANK_adr]
ERRb16		equ	0	; note-on �� �Y���kayer nothing
;ERRb15		equ	7	; = 0
ERRb14		equ	6	; �s�� Control change# input
ERRb13		equ	5	; Memory �s��
ERRb12		equ	4	; DSP access area unit is 2000H
ERRb11		equ	3	; cannot find DSP-RAM-ID
ERRb10		equ	2	; not DSP-Prg down load
ERRb_9		equ	1	; cannot find DSP-Prg-ID
ERRb_8		equ	0	; cannot down load SEQ data
;ERRb_7		equ	7	; = 0
ERRb_6		equ	6	; cannot find �Y�� SEQ Bank#
ERRb_5		equ	5	; Voice# too large
ERRb_4		equ	4	; not ready Tone-Bank
ERRb_3		equ	3	; not ready SCSPBIN address
ERRb_2		equ	2	; not ready data down load
ERRb_1		equ	1	; not find MAP
ERRb_0		equ	0	; not find Mixer

;
;
; 440H�`	<<<<<<<<< System Information table def. >>>>>>>>>
;
;
Mem_bs_PRGTP	equ	bs_SINFO+$00	; 68K Program   top
Mem_sz_PRG	equ	bs_SINFO+$04	;      //       size
Mem_bs_AREAM	equ	bs_SINFO+$08	; Area Map area top
Mem_sz_AREAM	equ	bs_SINFO+$0C	;      //       size
Mem_bs_PWKTP	equ	bs_SINFO+$10	; 68K Prg work  top
Mem_sz_Prg_wk	equ	bs_SINFO+$14	;      //       size
;
;
; 480H�`	<<<<<<<<< System Interface work def. >>>>>>>>>
;
;
OF_IPT_CTRL	equ	$00		; Interrupt control word
OF_IPT_MODE	equ	$01		; Interrupt mode
OF_PCM_PLAYNUM  equ	$02		; PCM play number
OF_MONO_FLAG	equ	$03		; TV MONO/STEREO      flag
OF_3D_FLAG	equ	$04		; 3D sound control flag
OF_QCOEF_PTR	equ	$05		; Q  sound COEF  pointer
OF_3DCOEF_PTR   equ	$06		; 3D sound COEF  pointer
OF_3DADRS_PTR   equ	$07		; 3D sound MADRS pointer
OF_3DCH1_WORK   equ	$08	;08	; 3D sound ch1     work
OF_3DCH2_WORK   equ	$18	;24	; 3D sound ch2     work
OF_3DPRG_WORK   equ	$28	;40	; 3D sound program work
OF_HNDSHK_EN	equ	$60		; HOST I/F Hand-shake EN/DI
OF_HNDSHK_flg	equ	$61	; D7 = H : HOST I/F Hand-shake on
				; D6 = H : MIDI���� MIDI data out
				; D5 = H : HOST input Command MIDI out
				; D4 = H : SCSP MIDI input Control
OF_EXTMIDI_No	equ	$62		; EXT MIDI �����Ǘ��ԍ�

TTN_SW_DRAM	equ	bs_SIFWK+$70	; <<<<<<<< for TITAN >>>>>>>>
TTN_flag68	equ	$0		;
TTN_old_sw	equ	$1		;    		��
TTN_coin_sw_md	equ	$2		;		��
TTN_execute	equ	$3		; 94/12/28	��
TTN_off_count	equ	$4		;		�^
TTN_coin_1	equ	TTN_off_count+0	;		�C
TTN_coin_2	equ	TTN_off_count+1	;		�^
TTN_coin_3	equ	TTN_off_count+2	;		��
TTN_coin_4	equ	TTN_off_count+3	;		�p
;		equ	$8		; reserve	��
;		equ	$9		; reserve	��
;		equ	$a		; reserve	
;		equ	$b		; reserve	
;		equ	$c		; reserve	
;		equ	$d		; reserve	
;		equ	$e		; reserve	
;		equ	$f		; reserve	
;
;
; 600H�`	<<<<<<<<< Tool Interface work def. >>>>>>>>>
;
;
OF_WAVE_SDRS	equ	$04	 ; wave area top address
OF_WAVE_SIZE	equ	$08	 ; wave area size
OF_TONE_ADRS	equ	$0e	 ; tone area top address
OF_TONE_SIZE	equ	$12	 ; tone area size
OF_DSP_PRGADRS  equ	$18	 ; DSP program address
OF_DSP_PRGSIZE  equ	$1c	 ; DSP program size
OF_DSP_NAME	equ	$20	 ; DSP file name
OF_DSP_RAMSIZE  equ	$40	 ; DSP work ram size
OF_DSP_RBL	equ	$44	 ; DSP RBL
OF_DSP_ELMADRS  equ	$46	 ; DSP element address
OF_DSP_ELMSIZE  equ	$4a	 ; DSP element size
OF_DSP_ELMNUM   equ	$4e	 ; DSP element number

D_1CH_BITPOS	equ	7	; 3D 1ch mode
D_2CH_BITPOS	equ	6	; 3D 2ch mode
Q_4CH_BITPOS	equ	5	; Q  4ch mode
Q_8CH_BITPOS	equ	4	; Q  8ch mode
;
;
; 680H�`	<<<<<<<<< Editor Monitor buffer def. >>>>>>>>>
;
;
Mem_MVC		equ	0	; Voice#
Mem_MNT		equ	1	; Note#
Mem_MVL		equ	2	; Velocity value
;
;
; 700H�`	<<<<<<<<< HOST Interface work def. >>>>>>>>>
;
;
OF_HI_CB1	equ	$00	 ; command block 1
OF_HI_CB2	equ	$10	 ; command block 2
OF_HI_CB3	equ	$20	 ; command block 3
OF_HI_CB4	equ	$30	 ; command block 4
OF_HI_CB5	equ	$40	 ; command block 5
OF_HI_CB6	equ	$50	 ; command block 6
OF_HI_CB7	equ	$60	 ; command block 7
OF_HI_CB8	equ	$70	 ; command block 8
OF_HI_STAT1	equ	$80	 ; status 1
OF_HI_STAT2	equ	$82	 ; status 2
OF_HI_STAT3	equ	$84	 ; status 3
OF_HI_STAT4	equ	$86	 ; status 4
OF_HI_STAT5	equ	$88	 ; status 5
OF_HI_STAT6	equ	$8a	 ; status 6
OF_HI_STAT7	equ	$8c	 ; status 7
OF_HI_STAT8	equ	$8e	 ; status 8
OF_HI_TVOLL	equ	$90	 ; total volume Lch
OF_HI_TVOLR	equ	$92	 ; total volume Rch
OF_HI_HVOLL	equ	$94	 ; high  volume Lch
OF_HI_HVOLR	equ	$96	 ; high  volume Rch
OF_HI_MVOLL	equ	$98	 ; mid   volume Lch
OF_HI_MVOLR	equ	$9a	 ; mid   volume Rch
OF_HI_LVOLL	equ	$9c	 ; low   volume Lch
OF_HI_LVOLR	equ	$9e	 ; low   volume Rch
OF_HI_PCM0	equ	$a0	 ; PCM 0 play address
OF_HI_PCM1	equ	$a2	 ; PCM 1 play address
OF_HI_PCM2	equ	$a4	 ; PCM 2 play address
OF_HI_PCM3	equ	$a6	 ; PCM 3 play address
OF_HI_PCM4	equ	$a8	 ; PCM 4 play address
OF_HI_PCM5	equ	$aa	 ; PCM 5 play address
OF_HI_PCM6	equ	$ac	 ; PCM 6 play address
OF_HI_PCM7	equ	$ae	 ; PCM 7 play address
OF_HI_SEQ0	equ	$b0	 ; Sequence 0 play position
OF_HI_SEQ1	equ	$b2	 ; Sequence 1 play position
OF_HI_SEQ2	equ	$b4	 ; Sequence 2 play position
OF_HI_SEQ3	equ	$b6	 ; Sequence 3 play position
OF_HI_SEQ4	equ	$b8	 ; Sequence 4 play position
OF_HI_SEQ5	equ	$ba	 ; Sequence 5 play position
OF_HI_SEQ6	equ	$bc	 ; Sequence 6 play position
OF_HI_SEQ7	equ	$be	 ; Sequence 7 play position


;
;	�`�q�d�` �l�`�o �J�����g ( 258 byte ) : Sound_Area_Map
;
Mem_map_ID	equ	$00	; byte
Mem_map_start	equ	$01	; 3byte
;		equ	$04	; byte : reserved
Mem_map_size	equ	$05	; 3byte
;	simile �~ 32
Mem_map_end	equ	$100	; word

DATA_ID		equ	0
BANK_ID		equ	0
SEQ_ID		equ	1
DSP_PRG_ID	equ	2
DSP_RAM_ID	equ	3
INDX_ID		equ	0

MAP_SIZE	    equ     8	   ; size of 1 map
MAP_END_BITPOS      equ     7	   ; end bit position
MAP_LOAD_BITPOS     equ     7	   ; load flag bit position
MAP_ADRS_MASK       equ     $0fffff     ; map start address MAX mask
MAP_SIZE_MASK       equ     $0fffff     ; map size MAX mask

MAP_ID_TONEBANK     equ     $00	 ; tone bank
MAP_ID_SEQBANK      equ     $10	 ; sequens bank
MAP_ID_DSPPROG      equ     $20	 ; DSP program
MAP_ID_DSPWORK      equ     $30	 ; DSP work RAM
MAP_ID_END	  equ     $ff	 ; map data end code

;--------------------
;   sound area map
;--------------------
MAP_DATA_ID	 equ     0	   ; EDbit + DataID data offset
MAP_DATA_START      equ     1	   ; Start address  data offset
MAP_DATA_LBIT       equ     4	   ; reserve	data offset
MAP_DATA_SIZE       equ     5	   ; Area size      data offset

; ������������������������������������������������
; ��	Work_RAM_in_Program offset def.		��
; ������������������������������������������������
;	 ////// offset from DVA_top: ( 96 byte ) ///////
;@DVA_voice	equ	$00	; 32byte; MIDI ch#xx voice# ( 1 �` 80H )
;@key_History	equ	$20	; 64 byte
				; bit15     = H : key on ��
KH_MRK	equ	14		; bit14     = H : marking key-on ����
				; bit13�`11 = no care
				; bit10�` 6 = slot#*slot_unit
				; bit 5     = no care
				; bit 4�` 0 = MIDI#
HOPM	equ	111110B		; History offset point Masking ( SCSP )
; ������������������������������������������������
; ��		SCSPBIN_absolute value		��
; ������������������������������������������������
LY_max_sz	equ	$100		; Layer�� �ő�l
LY_unit		equ	$20		; Layer Unit size
; ������������������������������������������������
; ��	SCSPBIN_top_def. offset addr		��
; ������������������������������������������������
BIN_MIX		equ	$00
BIN_VL		equ	$02
BIN_PEG		equ	$04
BIN_PLFO	equ	$06
BIN_VOICE	equ	$08
; ������������������������������������������������
; ��     SCSPBIN_Voice data offset addr def.	��
; ������������������������������������������������
V_PM_BR		equ	0	; play mode & bend range
V_PRT_time	equ	1	; portament time
V_layer_sz	equ	2	; layer size - 1
V_vol_bias	equ	3	; volume bias
V_Layer		equ	4	; layer top addr

; ������������������������������������������������
; ��DSP_Linker_offset def. �c�r�o�����J�쐬 data��
; ������������������������������������������������
DL_name		equ	$00	; Effect file nname
DL_RBL		equ	$20	; 0,1,2,3
DL_NCT		equ	$21	; number of co-eff table
DL_NEL		equ	$22	; number of Element
;------- edit by Y.Kashima 01/02/95 ------------;
DL_3DM		equ	$23	; Include 3D module
DL_3DC		equ	$24	; 3D coef top
DL_3DA		equ	$25	; 3D address top
;-----------------------------------------------;
DL_CEF		equ	$40	; COEF data
DL_MADR		equ	$C0	; MADRS data
DL_MPRO		equ	$140	; MPRO data
DL_CT		equ	$540	; co-eff table data
; ������������������������������������������������
; ��      SCSPBIN_Layer DATA offset def.	��
; ������������������������������������������������
LY_SNT		equ	$00		; start MIDI note
LY_ENT		equ	$01		; end   MIDI note
LY_SA		equ	$02		; [PEON]�`[SA]
FMCB			equ	5	; 	FM carria bit
PLON			equ	6	;	PLFO execute 
PEON			equ	7	;	PEG  execute 
LY_LSA		equ	$06
LY_D2R		equ	$0A
LY_SISD		equ	$0E
LY_MWH			equ	7	; hard ware Modulation
LY_MWE			equ	6	; soft ware PEG
LY_MWL			equ	5	; soft ware PLFO
LY_TL		equ	$0F		; [TL]
LY_MDL		equ	$10
LY_RELFO	equ	$14
LY_LFOS		equ	$15
LY_ISEL		equ	$16
LY_ISLMX	equ	$17		; [ISEL],[IMXL]
LY_DSDPN	equ	$18		; [DISDL],[DIPAN]
LY_base_note	equ	$19		; base note ( key-transpose )
LY_fine_tune	equ	$1A	; fine tune
LY_FM		equ	$1B	; FM ����
LY_VLNO		equ	$1D		; [VLNO]
;@LY_VL_NO	equ	LY_VLNO
LY_PEG_NO	equ	$1E	; PEG �ԍ�
LY_PLFO_NO	equ	$1F	; LFO �ԍ�
LY_FM1		equ	$1B
LY_FM2		equ	$1C
; ������������������������������������������������
; ��	  	SCSPBIN_VL data def.		��
; ������������������������������������������������
VL_K0		equ	0
VL_V0		equ	1
VL_L0		equ	2
VL_K1		equ	3
VL_V1		equ	4
VL_L1		equ	5
VL_K2		equ	6
VL_V2		equ	7
VL_L2		equ	8
VL_K3		equ	9
; ������������������������������������������������
; ��	      Driver_work_BASE �q�`�l def.	��
; ������������������������������������������������
kanri_wk	equ	$0000	; 1000H
slot_work	equ	$1000	;  800H
common_wk	equ	$1800	;   6EH
mixer_wk_edt	equ	$186C	;   12H	Tone Editor �ɂ��ύX���O�̂lixer data
mixer_wk_SCSP	equ	$187E	;   12H	���ۂ̂r�b�r�o��ւ̏����ςlixer data
Pcm_Strm	equ	$1890	;   10H PCM stream Playing SCSP slot#
MIDIA_wk	equ	$18A0	;   10H
;@MIDIB_wk	equ	$18B0	;   10H
_KEYHISTB	equ	$18C0	;   40H
_DVA_layer	equ	$1900	;  100H
_MIDI_RCV_BF	equ	$1A00	;  400H	;100H 4byte �P��
_DFL_ELMNT_wk	equ	$1E00	;  100H
;.........	equ	$1F00	;  100H
_MIDI_OUT_BF	equ	$2000	;  400H	95/07/12
_EXCL_RCV_BF	equ	$2400	;  180H
;.........	equ	$2580	;  280H
DEC_WORK_OFFSET	equ	$2800	; SEQ �� work offset value 95/07/28

;	<<<< kanri_wk >>>>
knr_unit	equ	$20

knr_PROG_no	equ	$00	; byte
knr_MIDI_PAN	equ	$01	; byte	D7 = H : Layer Pan off
				; 	D6 = H : SEQ Pan on
;		equ	$02	; byte
knr_MIDI_flg	equ	$03	; byte
knr_mono	equ	7	;	D7 = H : MONO mode
knr_DMPR	equ	6	;      	D6 = H : Damper mode
knr_MW		equ	5	;	D5 = H : SCSP Modulation Wheel on
knr_BANK_adr	equ	$04	; long
knr_PBend_BF	equ	$08	; word
knr_MONO_NT0	equ	$0A	; byte
knr_MONO_NT1	equ	$0B	; byte
knr_MONO_NT2	equ	$0C	; byte
knr_MONO_VOL	equ	$0D	; byte
knr_vol_bias	equ	$0E	; byte
;			$0F	; byte

; A.Miyazawa	{
midi_master_volume	.equ		$10
midi_volume		.equ		$12
midi_expression		.equ		$14
noteon_master_volume	.equ		$18
total_volume		.equ		$1a
management		.equ		$1c
;		}

;	<<<< slot_work >>>>

slot_size	equ	32	; for SCSP
slot_wk_unit	equ	40H	; �P�X���b�g������� work size
KHMSK		equ	$7C0	; Key_History Masking data $00,$40,$80,...,$7C0

sl_flag1	equ	$00
	if	ENGN
ENGN_flg	equ	7	;	 D7	= H : Engine busy
	endif
PEON_flg	equ	6	; 	 D6     = H : PEG  ON
PLON_flg	equ	5	; 	 D5     = H : PLFO ON
				;	 D4�`D0 = SCSP slot# ( 0 �` 1FH )
sl_MIDI		equ	$01	; byte	 D7�`D4 = 0 ( don't use )
				;	 D3�`D0 = MIDI ch# (0�`0FH)
sl_note		equ	$02	; byte	 D7     = 0 ( don't use )
				;	 D6�`D0 = MIDI Note# (0�`7FH)
sl_velo		equ	$03	; byte	 D7     = 0 ( don't use )
				;	 D6�`D0 = MIDI Velo# (0�`7FH)
sl_DISDLPAN	equ	$04	; byte
sl_flag2	equ	$05	; byte
flg_non		equ	3	;    D3 : H = Note on  / L = Note off
flg_FNSX	equ	2	;    D2 : [FNSX]
flg_KON		equ	1	;    D1 : H = key-on�� / L = key-off��
flg_FMCR	equ	0	;    D0 : FM Carria
_sl_kanri	equ	$06	; word	; �����Ǘ��ԍ��~200H
sl_layer_adr	equ	$08	; long
PLFO_cent	equ	$0C	; long   100 0000H = 100�Z���g
PLFO_FRQR_bs	equ	$10	; long   100 0000H = 100�Z���g
PLFO_FRQR_wk	equ	$14	; long   100 0000H = 100�Z���g
PLFO_Delay	equ	$18	; word ; delay counter base ( 2msec �P�� )
PLFO_HTCNT_bs	equ	$1A	; word
PLFO_HTCNT_wk	equ	$1C	; word
PLFO_FDCNT	equ	$1E	; word
PEG_cent	equ	$20	; long   100 0000H = 100�Z���g
PEG_RATE	equ	$24	; long  
PEG_level	equ	$28	; long	; Segment ���B level ( +6000H )
PEG_dly_cnt	equ	$2C	; word	; delay counter
PEG_SEG		equ	$2E	; byte 	; segment# ( 0 �` 6 )
EG_Value	equ	$2F	; byte
PEG_addr	equ	$30	; long	
PSPN		equ	$34	; byte	; PCM Stream Play Number
PCM_flg		equ	7	;	 D7	= H : PCM�Đ� mode
sl_temp_IMXL	equ	$35	; for DSP MPRO ����

; A.Miyazawa	{
;sl_VL		equ	$36	; word  ; 0000H �` 7E81H(Max) 
slot_velocity		equ	$36
;		}

sl_tune		equ	$38	; word

;	<<<< common_wk >>>>

_tmp_kanri	equ	common_wk+$00	; word	; �����Ǘ��ԍ��~200H
_tmp_MIDI_ch	equ	common_wk+$02	; word	; $0000 �` $001F
DFL_INST_addr	equ	common_wk+$04	; long	; �u���l�����݃A�h���X
stack_RBLP	equ	common_wk+$08	; word	;
knr_kanri_ofst	equ	common_wk+$0A	; word
CMWK1		equ	common_wk+$0C	; long	work
OVER_count	equ	common_wk+$10	; long
;		equ	common_wk+$14	; byte  
PM_flag		equ	common_wk+$15	; byte	; Play mode flag �c6,5,4
legart		equ	5		;
LED8_cnt_wk	equ	common_wk+$16	; word	; YM3438 timer control data
LED_status	equ	common_wk+$18	; byte	; �c7 : MIDI_A ��M
					;	  �c6 : MIDI_B ��M
					;	  �c5 : �r�b�r�h��M
					;	  �c2 : cannot execute key-on
					;	  �c1 : CPU �������x over Timer�l
					;	  �c0 : CPU normal
CTO_LED_cnt	equ	common_wk+$19	; byte	; CPU ���� over Time counter
SEQ_LED_cnt	equ	common_wk+$1A	; word	; 
RCVA_LED_cnt	equ	common_wk+$1C	; byte	; MIDI-A receive counter
RCVB_LED_cnt	equ	common_wk+$1D	; byte	; MIDI-B	//
HISTMP		equ	common_wk+$1E	; word	; History data temporaly stack

HIS_on_pt	equ	common_wk+$20	; word  ; HIS on point offset  
					;			: 0,2,4 �` 3EH
HIS_off_pt	equ	common_wk+$22	; word  ; HIS off point offset 
					;			: 0,2,4 �` 3EH
DVA_lyr_cnt	equ	common_wk+$24	; word	; for DVA Note_on
flag0		equ	common_wk+$26	; byte	�c7=H : 
BIG_timer	equ	common_wk+$27	; byte	; �ꏊ���ړ�����ȁI
DVA_lyr_cntx	equ	common_wk+$28	; word	; for DVA Note_on
off_slot_cnt	equ	common_wk+$2A	; word	; �񔭉���slot�� ( 0 �` 32 )
DFL_ELMNT_addr	equ	common_wk+$2C	; long
DFL_ELMNT_NO	equ	common_wk+$30	; byte	; �G�������g��
SND_OUT_ST	equ	common_wk+$31	; byte	; sound out status
EFCT_CHG_CNT	equ	common_wk+$32	; byte  : �� 0 --> Effect chg exe mode
;		equ	common_wk+$33	; byte
;tmp_HIF_wk	equ	common_wk+$34	; long
COMHIS_cnt	equ	common_wk+$38	; word	HOST Command HISTORY counter
COMHIS_offset	equ	common_wk+$3A	; word	HOST Command HISTORY
FE_count	equ	common_wk+$3C	; word  
FE_countH	equ	FE_count	;
EXCL_pt		equ	common_wk+$3E	; byte 00�`FFH
;				  $3F
_MIDI_RCV_WRPT	equ	common_wk+$40	; byte
;		equ	common_wk+$41	; byte
_MIDI_RCV_RDPT	equ	common_wk+$42	; byte
;		equ	common_wk+$43	; byte
FUKA_cnt	equ	common_wk+$44	; word
_activ_MIX_NO	equ	common_wk+$48	; word	activ Mixer# 0�`7F
work_temp	equ	common_wk+$4A	; word
_activ_MIX_BNK	equ	common_wk+$4C	; long	activ Mixer SCSPBIN top
DSP_RW_top	equ	common_wk+$50	; long
DSP_RW_sz	equ	common_wk+$54	; long
DSP_PRG_top	equ	common_wk+$58	; long
CPU_CAPA_cnt	equ	common_wk+$5C	; word
;		equ	common_wk+$5E	; byte
;		equ	common_wk+$5F	; byte
ENGN_wk_cmn	equ	common_wk+$60	; 8byte
_MIDI_OUT_WRPT	equ	common_wk+$68	; word : 0�`7FF
_MIDI_OUT_RDPT	equ	common_wk+$6A	; word : 0�`7FF

; don't use +$6C �`

;	<<<< MIDIA_wk / MIDIB_wk >>>>

MIDI_flg	equ	$00	; byte
MCSAorB		equ	7	; �c7     L=YM3802-A , H=YM3802-B
MCS2nd		equ	4	; �c4=H : MIDI ch. mess. 1st Received

MIDI_1st	equ	$02	; byte
MIDI_2nd	equ	$03	; byte
MIDI_3rd	equ	$04	; byte
;EXCL_flag	equ	$05	; byte  D7 = EXCL data mode
;					;	D6 = EXCL error mode
;			$06	; word
;			$08	; long
MIDIJPBF	equ	$0C	; long

;	<<<< DVA_layer >>>>

DVALY_unit	equ	8

DVALY_addr	equ	$00	; long : layer address
DVALY_slofst	equ	$04	; word : slot offset ( $00,$40,....,$7C0 )
;		equ	$06	; = 00H
DVALY_NO	equ	$07	; byte : Layer�ԍ� ( 0 �` 7FH )

;	<<<< DFL_ELMNT_wk >>>>

DFL_wk_MSFC	equ	$00	; byte
DFL_wk_AMP	equ	$01	; byte  for LFO 
DFL_add_wk	equ	$02	; word  for LFO & EG ���p
DFL_add_bs	equ	$04	; word  for LFO & EG ���p
DFL_EG_seg	equ	$06	; byte  for EG  = segment# 0�`7
				;		0 : ready time
				;		1 : Hold time
				;		2 : Attack
				;		3 : Decay
				;		4 : Slope
				;		5 : hold
				;		6 ; Rerease
				;		7 : hold
DFL_dst_addr	equ	$08	; long
DFL_hold_time	equ	$0C	; word
DFL_level	equ	$0E	; word ( hold time ���p )
;
;
;		////////// SEQ �� work def. //////////////
;
;
IPT_COUNT_BASE	equ	2000*256	; 2ms: 2000x256=512000

SY_VANWAIT_CNT	equ	8		; volume analize WAIT counter(2x8=16ms)
SY_PCMWAIT_CNT	equ	8		; PCM play adrs  WAIT counter(2x8=16ms)
SY_MIXWAIT_CNT	equ	5		; MIXER enable   WAIT counter(2x5=10ms)
SQ_FD_WAIT	equ	50-1		; fade control wait(2x50=100ms)
SQ_PTR_WAIT	equ	50-1		; sequence pointer wait(2x50=100ms)

;------------------
;   decoder work
;------------------
SY_TOP		equ	$0000		; area top offset
SQ_TOP		equ	$0100		;
NC_TOP		equ	$0400		;
SY_NUM		equ	1		; system control block number
SY_SIZ		equ	64		;                      size
SY_MAX		equ	SY_SIZ*SY_NUM	;                      area size
SQ_NUM		equ	8		; sequence control block number
SQ_SIZ		equ	96		; �e�`���l�����Ƃ̃��[�N�G���A�̑傫���A96����ύX���Ă͂Ȃ�܂���B
SQ_MAX		equ	SQ_SIZ*SQ_NUM	;                        area size
NC_NUM		equ	32		; note on cue data number
NC_SIZ		equ	12		;             data size
NC_MAX		equ	NC_SIZ*NC_NUM	;             area size
;------------------
;   SCSP control
;------------------
RG_SLOT_MASK		equ	$1f	; slot number mask(0-31)
RG_CA_MASK		equ	$0f	; play address mask(0-15)
;--------------------------
;   system control block
;--------------------------
;nao	SY_BUSY_BITPOS		equ	7	; 2ms busy Bit Position
SY_VANCTL_BITPOS	equ	7	; volume analize control bit position
;----------------------------
;   sequence control block
;----------------------------
SQ_MODE_STOP		equ	0	; stop
SQ_MODE_PLAY		equ	1	; play
SQ_MODE_FADE		equ	2	; fade
SQ_MODE_PLAYPAUSE	equ	3	; play
SQ_MODE_FADEPAUSE	equ	4	; fade pause

SQ_CTL_BITPOS		equ	7	; control  Bit Position
SQ_PAUSE_BITPOS		equ	6	; pause    Bit position
SQ_MUTE_BITPOS		equ	5	; mute     Bit position
SQ_FADE_BITPOS		equ	4	; fade     Bit position
SQ_EMPTY_BITPOS		equ	0	; empty    Bit position

SQ_SQNUM_MASK		equ	00000111b   ; sequence play number(0-7) mask
SQ_PRLEV_MASK		equ	00011111b   ; sequence priority(0-31)   mask
SQ_PMODE_MASK		equ	00000001b   ; sequence play mode(0-1)   mask

SQ_RESO_MIN		equ	24	; sequencer Resolution min
SQ_RESO_MAX		equ	960	;		      max
SQ_TVAL_MIN		equ	200000	; tempo 300: 200ms(200000usec)
SQ_TVAL_MAX		equ	1500000	; tempo 40: 1500ms(1500000usec)

SQ_TPMAX_VAL		equ	$ffffffff   ; tempo counter MAX value
SQ_TPCHG_BASE		equ	$1000	; tempo change BASE value

SQ_SQVOL_MAX		equ	$00	; sequence volume MAX value
SQ_SQVOL_MIN		equ	$7f	; sequence volume MIN value
SQ_SQVOL_MAX_W		equ	$0000	; sequence volume MAX value(word)
SQ_SQVOL_MIN_W		equ	$7f00	; sequence volume MIN value(word)
SQ_SQVOL_MASK		equ	$7f	; sequence volume mask
;-------------------------
;   note on cue control
;-------------------------
NC_CTL_BITPOS		equ	7	; Control Bit Position
NC_PORT_MASK		equ	00000001b   ; MIDI port#(0/1) mask

;------------------------------
;   sequence decoder control
;------------------------------
DEC_SONG_INIT		equ	1	; song initial
DEC_SONG_CONT		equ	0	; song continue
DEC_TEMPO_INIT		equ	2	; tempo initial
DEC_TEMPO_CONT		equ	3	; tempo continue

DEC_RET_NORMAL		equ	0	; decoder status NORMAL
DEC_RET_NODATA		equ	1	;		NO DATA
DEC_RET_LOOPBACK	equ	2	;		LOOP BACK

;-----------------------------
;   PCM stream play control
;-----------------------------
PCM_CTL_BITPOS		equ	7	; PCM play active bit position
PCM_MAX_NUM		equ     8	; PCM play MAX number
PCM_PLAY_MASK		equ	$07	; PCM play number mask(0-7)

;----------------------------
;   host interrupt request
;----------------------------
MCI_EN_BITPOS		equ     7	; MIPT enable bit position
MCI_MODE_NON		equ	$00	; MIPT mode 00: no interrupt source
MCI_MODE_PCM		equ	$01	; MIPT mode 01: PCM play address IPT

;--------------------
;   MIDI Command
;--------------------
MIDI_COM_MASK		equ	$F0	; MIDI command mask
MIDI_COM_CHMASK		equ	$0F	; MIDI channel mask
MIDI_COM_NOFF		equ	$80	; note off
MIDI_COM_NON		equ	$90	; note on
MIDI_COM_AFT		equ	$a0	; after touch
MIDI_COM_CCHG		equ	$b0	; control change
MIDI_COM_PCHG		equ	$c0	; program change
MIDI_COM_PRES		equ	$d0	; ch pressure
MIDI_COM_BEND		equ	$e0	; bender change
MIDI_COM_SYS		equ	$f0	; system message

M4_COM_MASK		equ	$07	; 4B MIDI command mask
M4_CH_MASK		equ	$1f	; 4B MIDI channel mask
M4_PORT_MASK		equ	$01	; 4B MIDI port# mask

;---------------------------
;   system error status
;---------------------------
RET_NORMAL	  equ     $00	 ; normal
RET_ERR_RESOVAL     equ     $80	 ; out of resolution value
RET_ERR_NOTEMPO     equ     $81	 ; tempo data not found
RET_ERR_NOEVENT     equ     $82	 ; tempo data not found
RET_ERR_TEMPOVAL    equ     $83	 ; out of tempo value
RET_ERR_NOCONTROL   equ     $84	 ; no control in sequence data

;---------------------------
;   system control block
;---------------------------
SY_LOG	      equ     0	   ; log on/off
SY_BUSY	     equ     1	   ; 2ms busy flag word
SY_TVOLCTL	  equ     2	   ; volume analize control word
SY_TVOLCNT	  equ     3	   ; volume analize     wait counter
SY_PCMCNT	   equ     4	   ; PCM address search wait counter
SY_MIXER_WK	 equ     32	  ; MIXER save work (18B)
SY_MIXER_CNT	equ     50	  ; MIXER enable counter (1B)
SY_MIXER_WAIT       equ     51	  ; MIXER control wait counter (1B)

;---------------------------
;   Note On Cue DATA
;---------------------------
NC_CTL	      equ     0	   ; Control Word
NC_CMD	      equ     1	   ; MIDI Command  Cue
NC_S1	       equ     2	   ; MIDI Status 1 Cue
NC_S2	       equ     3	   ; MIDI Status 2 Cue
NC_CNT	      equ     4	   ; Time Counter
NC_PTR	      equ     8	   ; Sequence Control Block Pointer

;---------------------------
;   Sequence Control Block
;---------------------------
CB_CTL	      equ     0	   ; control word
CB_SQ_NUM	   equ     1	   ; sequence number
CB_MODE	     equ     2	   ; mode
CB_STAT	     equ     3	   ; status
CB_PR_LEV	   equ     4	   ; priority level
CB_SQ_MODE	  equ     5	   ; sequence play mode
CB_SQ_RESO	  equ     6	   ; STD MIDI header resolution
CB_TP_VAL	   equ     8	   ; tempo beat value
CB_TP_CNT	   equ     12	  ; tempo count value
CB_SQ_TOP	   equ     16	  ; sequence data top address
CB_CT_TIME	  equ     20	  ; 1 count time
CB_SQ_TIMER	 equ     24	  ; sequence timer counter
CB_TP_TIMER	 equ     28	  ; tempo timer counter
CB_NT_CNT	   equ     32	  ; note on counter
CB_SQ_VOL	   equ     34	  ; sequence volume
CB_FD_VOL	   equ     36	  ; fade volume
CB_FD_RATE	  equ     38	  ; fade rate
CB_EV_GATE	  equ     40	  ; MIDI event gate time
CB_EV_PORT	  equ     44	  ; MIDI port A/B
CB_EV_COM	   equ     45	  ; MIDI event cue command
CB_EV_S1	    equ     46	  ; MIDI event cue status 1
CB_EV_S2	    equ     47	  ; MIDI event cue status 2
CB_CT_ORGTIME       equ     48	  ; 1 count original time
CB_PTR_CT	   equ     52	  ; sequence pointer wait counter
CB_FD_CT	    equ     53	  ; fade control wait counter
CB_PTR_ADRS	 equ     56	  ; sequence pointer
CB_STS_ADRS	 equ     60	  ; status pointer




;��������������������������������������������������
;��		  Dip_Switch			 ��
;��������������������������������������������������
DSW_SEQ		equ	7	; bit7 H = Sequence data decode mode
DSW_PRG_sel	equ	6	; bit6 H = D-RAM ��� 68k prg �� ���s
				;      L = S-RAM ��� 68k prg �� �����s
; low 2bits = timer �ݒ�l 	; bit1 , bit0
DSW_2msec	equ	0	;  L   ,  L
DSW_4msec	equ	1	;  L   ,  H
DSW_8msec	equ	2	;  H   ,  L
DSW_16msec	equ	3	;  H   ,  H
;��������������������������������������������������
;��		  LED_on_off_speed		 ��
;��������������������������������������������������
CPU_LED_speed	equ	$F00	;$800	; 
SEQ_LED_speed	equ	$c0	;$a0	; word size
MIDI_LED_speed	equ	10	; byte size
CTO_LED_speed	equ	$20	; byte size
SCSI_LED_speed	equ	$80	; byte size
NKON_LED_speed	equ	$40	; byte size
err_timer	equ	$4000		; �G���[(�ُ�)�� �_�ŊԊu����
;��������������������������������������������������
;��SCSP_Timer �^�C�}�[ �ݒ� ( 1,2,4,8 or 16msec )��
;��������������������������������������������������
TIMA_base	equ	0FFH-0B1H	; [TACTL]  timer-A 1 sample increment
					; [TIMA]   timer-A start count value
					; 2msec/22.6usec=58H
					; 4msec/22.6usec=B1H

_4msec		equ	4
_8msec		equ	8
;				:   1msec  2msec  4msec  8msec 16msec 
TM_DLY		equ	4	;     2      3      4      5      6   
TM_FRQ		equ	6	;     8      7      6      5      4   
TM_HT		equ	6	;     4      5      6      7      8   
TM_FD		equ	6	;     4      5      6      7      8   
TM_EGT		equ	7	;     5      6      7      8      -   
TM_EGR		equ	3	;     5      4      3      2      1   
TM_RATE		equ	4	;     6	     5      4      3      2
; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
;TIMB_VL	equ	2*100H+0E9H	; [TBCTL]  timer-B 4 sample increment
;					  4*1Fs    *(0FFH-0E9H)
;					= 4*44.1kHz*(0FFH-0E9H)
;					= 1.99msec
TIMB_VL		equ	1*100H+0D4H	; [TBCTL]  timer-B 2 sample increment
					; [TIMB]   timer-B start count value
;					  2*1Fs    *(0FFH-0D4H)
;					= 2*44.1kHz*43
;					= 1.95msec
;TIMB_VL	equ	0*100H+0D3H	; [TBCTL]  timer-B 1 sample increment
;					; [TIMB]   timer-B start count value
;					  1*1Fs    *(0FFH-0D3H)
;					= 1*44.1kHz*44
;					= 0.98msec
TIMC_VL		equ	0*100H+00H	; [TCCTL]  timer-C 1 sample increment
					; [TIMC]   timer-C start count value
;��������������������������������������������������
;��	  SCSP_Reg ( ���F�X���b�g Reg. )	 ��
;��������������������������������������������������
SCSP_KXKB	equ	$00
			; D15�`13     ------
			; D12	  WO  [KYONEX] key-on execution
			; D11	  R/W [KYONB]  key-on bit
			; D10,9   R/W [SBCTL]  source bit invert control
			; D8,7    R/W [SSCTL]  sound source select
			; D6,5    R/W [LPCTL]  loop form select
			; D4      R/W [PCM8B]  wave bit range 8/16 select
			; D3�`D0  R/W [SA(H)]  wave start addr.
SCSP_PCM_SA	equ	$02	;[SA]  PCM start address
SCSP_PCM_LSA	equ	$04	;[LSA] PCM loop start address
SCSP_PCM_LEA	equ	$06	;[LEA] PCM loop end address
SCSP_D2R1R	equ	$08	;[D2R],[D1R],[EHLD],[AR]
SCSP_EDLSKRS	equ	$0A	;[LSLK],[KRS],[DL],[RR]
SCSP_FH_RR	equ	$0B	;[DL(low)],[RR]
SCSP_SISD	equ	$0C	;[SI],[SD]
SCSP_TLVL	equ	$0D	;[TL]
SCSP_MDLSL	equ	$0E	;[MDLSL]
SCSP_OCTFNS	equ	$10	;[OCTFNS] don't bit set on D15,D10
SCSP_RELFO	equ	$12	;[RELFO]
SCSP_PLFOS	equ	$13	;[PLFOS]
SCSP_ISEL	equ	$14	;[ISEL]
SCSP_DISDLPN	equ	$16	;[DISDLPN]
SCSP_EFSDLPN	equ	$17	;[EFSDLPN]
; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
RG_M4D8		equ	$400	; [M4D8]
RG_MVOL		equ	$401	; [VERMVOL]
RG_RBP		equ	$402	; [RBL],[RBP]
RG_MSTS		equ	$404	; [SMIDIST]
RG_MIBUF	equ	$405	; [SMIDIRD]
RG_MOBUF	equ     $407	; [SMIDIWR]
RG_DEBUG	equ     $408	; [MSLC/CA/SGC/EG]
RG_TACTL	equ     $418	; [TACTL]
RG_TIMA		equ	$419	; [TIMA]
RG_TBCTL	equ	$41A	; [TBCTL]
RG_TIMB		equ	$41B	; [TIMB]
RG_TCCTL	equ	$41C	; [TCCTL]
RG_TIMC		equ	$41D	; [TIMC]
RG_SCIEB	equ	$41E	; [SCIEB]
RG_SCIPD	equ	$420	; [SCIPD]
RG_SCIRE	equ	$422	; [SCIRE]
RG_SCILV0	equ	$425	; [SCILV0]
RG_SCILV1	equ	$427	; [SCILV1]
RG_SCILV2	equ	$429	; [SCILV2]
RG_MCIEB	equ	$42A	; [MCIEB]
RG_MCIPD	equ	$42c	; SH2 interrupt request
RG_MCIRE	equ	$42e	; SH2 interrupt reset
DSP_COEF	equ	$700
DSP_MADRS	equ	$780
DSP_MPRO	equ	$800
DSP_TEMP	equ	$C00
DSP_EFREG	equ	$EC0
;----------------------------------
;   SCSP register direct address
;----------------------------------
SCSP_SLOT0	equ	IO_SCSP			; slot register(0-31) top address
SCSP_DBG_REG	equ	IO_SCSP+RG_DEBUG	; debug register address
SCSP_DSP_COEF   equ	IO_SCSP+DSP_COEF	; DSP coef register
SCSP_DSP_MADRS  equ	IO_SCSP+DSP_MADRS	; DSP memory address register
SCSP_DSP_MPRO   equ	IO_SCSP+DSP_MPRO	; DSP micro program
SCSP_EXTS_L	equ	IO_SCSP+$ee0     ; external input data stack Lch
SCSP_EXTS_R	equ	IO_SCSP+$ee2     ; external input data stack Rch
SCSP_EFREG0	equ	IO_SCSP+$ec0     ; effect register #0  output data
SCSP_EFREG1	equ	IO_SCSP+$ec2     ; effect register #1  output data
SCSP_EFREG2	equ	IO_SCSP+$ec4     ; effect register #2  output data
SCSP_EFREG3	equ	IO_SCSP+$ec6     ; effect register #3  output data
SCSP_EFREG4	equ	IO_SCSP+$ec8     ; effect register #4  output data
SCSP_EFREG5	equ	IO_SCSP+$eca     ; effect register #5  output data
SCSP_EFREG6	equ	IO_SCSP+$ecc     ; effect register #6  output data
SCSP_EFREG7	equ	IO_SCSP+$ece     ; effect register #7  output data
SCSP_EFREG8	equ	IO_SCSP+$ed0     ; effect register #8  output data
SCSP_EFREG9	equ	IO_SCSP+$ed2     ; effect register #9  output data
SCSP_EFREG10	equ	IO_SCSP+$ed4     ; effect register #10 output data
SCSP_EFREG11	equ	IO_SCSP+$ed6     ; effect register #11 output data
SCSP_EFREG12	equ	IO_SCSP+$ed8     ; effect register #12 output data
SCSP_EFREG13	equ	IO_SCSP+$eda     ; effect register #13 output data
SCSP_EFREG14	equ	IO_SCSP+$edc     ; effect register #14 output data
SCSP_EFREG15	equ	IO_SCSP+$ede     ; effect register #15 output data

;��������������������������������������������������
;�� 	  SCSP_INTERRUPT [SCILV0] �` [SCILV2] 	 ��
;��������������������������������������������������
INT_EN		equ	00010001000B	; [SCIEB] Interrupt Request EN/DI
		; bit0  Disable pin INT0 
		; bit1    //    pin INT1
		; bit2    //    pin INT2
		; bit3    //    SCSP MIDI Input INT
		; bit4    //    DMA INT
		; bit5    //    SCPU INT
		; bit6    //    Timer-A
		; bit7  Enablee Timer-B
		; bit8  Disable Timer-C
		; bit9    //    SCSP MIDI Out INT
		; bit10   //    1Fs (22.6usec) INT
INT_RD		equ	0		; [SCIPD] Interrupt Request status read
INT_RST		equ	00011000000B	; [SCIRE] Interrupt Reset
		; bit0  ------- pin INT0 
		; bit1  ------- pin INT1
		; bit2  ------- pin INT2
		; bit3  ------- SCSP MIDI Input INT
		; bit4  ------- DMA INT
		; bit5  ------- SCPU INT
		; bit6  reset   Timer-A
		; bit7  reset   Timer-B
		; bit8  ------- Timer-C
		; bit9  ------- SCSP MIDI Out INT
		; bit10 ------- 1Fs (22.6usec) INT
	if	sw_MODEL_M
SCSP_IPL0	equ	00000000B
SCSP_IPL1	equ	10000000B
SCSP_IPL2	equ	00000000B
		; IPL210 
		;    000  pin INT0 
		;    000  pin INT1
		;    000  pin INT2
		;    000  SCSP MIDI Input INT
		;    000  DMA INT
		;    000  SCPU INT
		;    000  Timer-A
		;    010  Timer-B,C,MIDIout,1Fs
	else
SCSP_IPL0	equ	00001000B
SCSP_IPL1	equ	10000000B
SCSP_IPL2	equ	00001000B
		; IPL210 
		;    000  pin INT0 
		;    000  pin INT1
		;    000  pin INT2
		;    101  SCSP MIDI Input INT
		;    000  DMA INT
		;    000  SCPU INT
		;    000  Timer-A
		;    010  Timer-B,C,MIDIout,1Fs

	endif
; ������������������������������������������������
; ��	  	YM3802_Reg def.			��
; ������������������������������������������������
	if	sw_MODEL_M
R00	equ	0*2	; MCS  R00
R01	equ	1*2	; MCS  R01
R02	equ	2*2	; MCS  R02
R03	equ	3*2	; MCS  R03
Rx4	equ	4*2	; MCS  R04,R14,R24,R34,R44,R54,R64,R74,R84,R94
Rx5	equ	5*2	; MCS  R05,R15,R25,R35,R45,R55,R65,R75,R85,R95
Rx6	equ	6*2	; MCS  R06,R16,R26,R36,    R56,R66,R76,R86,R96
Rx7	equ	7*2	; MCS      R17,R27,            R67,R77,R87    
;
;
init_R04	equ	00000000B	; R04 ( IRQ vector offset = 0 )
init_R06	equ	00100000B	; R06 ( IRQ enable select )
					; �c7=L : disable general timer
					; �c6=L : disable FIFO-Tx empty
					; �c5=H : enable  FIFO-Rx ready
					; �c4=L : disable off-line/break ���o
					; �c3=L : disable recording counter
					; �c2=L : disable play back counter
					; �c1=L : disable click/MIDI-clock
					; �c0=L : disable MIDI real-time mess
init_R94	equ	00000000B	; R94 ( all I/O input mode )
init_R55	equ	10000101B	; R55 ( FIFO-Tx ���� )
					; �c7=H : clear FIFO-Tx
					; �c3=L : send break disable
					; �c2=H : clear Tx idle flag
					; �c0=H : Transmitter enable
init_R35	equ	11001101B	; R35 ( FIFO-Rx ���� )
					; �c7=H : clear FIFO-Rx		
					; �c6=H : clear over-flow ���o flag
					; �c4=L : MIDI clock Filter disable
					; �c3=H : clear break ���o flag	
					; �c2=H : clear off-line ���o flag
					; �c1=L : address hunter disable
					; �c0=H : Receiver enable	
init_R44	equ	00001000B	; R44 ( ���Mrate�ݒ� )
					; �c6=L : select transmitter
					; �c5=L : select TxD 
					; �c4�`0=01000 : CLKM/32 
					; 	 	 (1MHz/32=31250bps)
init_R45	equ	00000000B	; R45 ( ���M���[�h�ݒ� )
					; �c5=L : �r�b�g�� = 8
					; �c4=L : Parity Disable
					; �c3=L : Parity bit length no care
					; �c2=L : Parity bit porarity no care
					; �c1=L : stop bit �� = 1
					; �c0=L : stop bit type no care	
init_R24	equ	00001000B	; R24 ( ��Mrate�ݒ� )
					; �c5=L : RxD select
					; �c4�`0=01000 : CLKM/32 
					;		 (1MHz/32=31250bps)
init_R25	equ	00000000B	; R25 ( ��M���[�h�ݒ� )
					; �c5=L : �r�b�g�� = 8
					; �c4=L : Parity Disable
					; �c3=L : Parity bit length no care
					; �c2=L : Parity bit porarity no care
					; �c1=L : stop bit �� = 1
					; �c0=L : stop bit type no care	
	endif
; ������������������������������������������������
; ��		  MIDI_data			��
; ������������������������������������������������
MIDI_EXCL	equ	$F0		; MIDI Exclusive
MIDI_EOX	equ	$F7		; MIDI End of Exclusive
MIDI_TCLK	equ	$F8		; MIDI timing clock
MIDI_ASNS	equ	$FE		; MIDI Active Sensing
YAMAHA_ID	equ	$43
YAMAHA_DIV	equ	$79
DVID		equ	$00
SATURN_ID	equ	$01

STREQ		equ	$00
STRCV		equ	$01
STACK		equ	$02
STNACK		equ	$03
STRST		equ	$04
STTRNS		equ	$41
; ������������������������������������������������
; ��		  TEST_MAP			��
; ������������������������������������������������

addr_seq_bank		equ	010000H
addr_DSP_load		equ	020000H
size_DSP_load		equ	 10000H
addr_DSP_RW		equ	030000H
size_DSP_RW		equ	10000H
addr_SCSPBIN		equ	040000H
size_SCSPBIN		equ	0C0000H

SCSI_top	equ	$F3F000

; S-RAM2 �̈�

;����������������������������������������
;�� 	    MACRO definition	       ��
;����������������������������������������

;====================================================================
;       System MACRO Define
;====================================================================
sr_push	macro
	move	sr,-(sp)
	endm
sr_pop	macro
	move	(sp)+,sr
	endm
int_di	macro
	move.w	#$2700,SR		; Disable Interupt
	endm
;--------------------------------------
;       carry flag set/reset
;--------------------------------------
stc	macro
	ori	#00000001B,ccr
	endm
clc	macro
	or	d0,d0
	endm
;--------------------------------------
;       set sequence volume(d1)
;--------------------------------------
setseqvol       macro
		andi.b    #$7f,d1
		move.b    #$7f,d7
		sub.b     d1,d7
		move.b    d7,d1
		endm


; A.Miyazawa	{

;=======================================
;	version 2.00 or later
;=======================================

host_interface_work	.equ		bs_HIFWK
decoder_work		.equ		bs_PWKTP+DEC_WORK_OFFSET
note_on_cue_table	.equ		bs_PWKTP+DEC_WORK_OFFSET+NC_TOP
management_work		.equ		bs_PWKTP+DEC_WORK_OFFSET+SQ_TOP
midi_receive_buffer	.equ		bs_PWKTP+_MIDI_RCV_BF
exclusive_receive_buf	.equ		bs_PWKTP+_EXCL_RCV_BF

up_down_flag		.equ		$40+$00	; �t�F�[�h�C��(1)�E�A�E�g(-1)�̔���
seq_volume_arrival	.equ		$40+$02	; �V�[�P���X�{�����[���ɂ�鉹�ʐ��ڂ̓��B�ڕW���ʁB
appointed_fade_rate	.equ		$40+$04	; �t�F�[�h���[�g�̋L���B
fade_count_variable	.equ		$40+$06	; �t�F�[�h�J�E���^�B
sequence_volume		.equ		$40+$08	; �V�[�P���X�{�����[���̋L���B
performance_flag	.equ		$40+$0a	; �O�ȊO�̂Ƃ����t���������B
pause_flag		.equ		$40+$0c	; �O�ȊO�̂Ƃ��|�[�Y���������B
;			.equ		$40+$0e

BANK_NOT_FOUND		.equ		$85	; 133 ���݂��Ȃ��o���N���w�肵���B
PROGRAM_NOT_FOUND	.equ		$86	; 134 ���݂��Ȃ��v���O�������w�肵���B
BANK_NOT_AVAIRABLE	.equ		$87	; 135 �o���N���ݒ肳��Ă��Ȃ���ԂŃv���O�����`�F���W���s�����B
OUT_OF_TOTAL_LEVEL	.equ		$88	; 136 Total level�ɑ΂���Volume bias�̒l���傫������B
ILLEGAL_MIXER_CHANGE	.equ		$89	; 137 ���݂��Ȃ��o���N�ɑ΂��ă~�L�T�[�`�F���W���s�����B
FEATURE_NOT_AVAIRABLE	.equ		$8a	; 138 �Ή����Ă��Ȃ��@�\�iMono mode�j���g�����Ƃ����B


start_command		.equ		0*5
stop_command		.equ		1*5
pause_command		.equ		2*5
continue_command	.equ		3*5


hi_speed		.equ		1


;=======================================================
;	ver-2.01 �ւ̗���
;=======================================================

;	�� DSPLFO���폜�B
;
;	�� �A�����N�G�X�g�ł��_���p�[���N���A�����悤�ɂ����B
;	��U���t���~�߂Ă��玟�̋Ȃ����N�G�X�g����΃N���A�����̂ŁA�����ăo�O�ł͂Ȃ��B
;
;	�� Pause��������Ɣ����Ǘ��ԍ��ɂ���Ă̓v���O�������\�����邱�Ƃ�����Ƃ����v���I�ȃo�O���C���B
;	���Ȃ݂ɔ����Ǘ��ԍ��O�̂Ƃ��ɂ͋N����Ȃ��B
;
;	�� ���m���[�h�ɂ����Ƃ��A�T�E���h�V�~�����[�^�ɑ΂��ăG���[��Ԃ��悤�ɂ���(138)�B
;
;	�� �^�C�~���O�t���O��off�A�������N�G�X�g�o�b�t�@�A�Ȃ����R�}���h�������̂Ƃ��ɂ��̃��N�G�X�g�������Ă����
;	�����I����ɂ��̃R�}���h�R�[�h�������Ă��܂��A���N�G�X�g���󗝂���Ȃ����Ƃ���ɂ��邱�Ƃ𔭌��B
;	SH2�����Ȃ荂���Ȃ��߂��̏Ǐ�����S�ɖh�����Ƃ͂ł��Ȃ����A������x���P�����B�G���[���Ԃ��悤�ɂ����B
;	�܂��A�z�X�g�C���^�[�t�F�[�X���[�N�͂W�p�ӂ���Ă���̂�initialyze,pause�Ȃǂ̏d�v�ȃR�}���h�ƃ��A���^�C�����ʉ�
;	�̃��N�G�X�g�͂��Ƃ��^�C�~���O�t���Oon�Ŏg�p���Ă��Ă������o�b�t�@���g��Ȃ��悤�w�����Ă������������B
;
;=======================================================
;	ver-2.02 �ւ̗���
;=======================================================
;
;	�� note on���[�`�����������B������u�Ȃ�������v�Ƃ��������Ƃ͂܂��N����Ȃ��ł��傤�B
;
;	�� �����Ǘ��ԍ��O�ȊO�Ńt�F�[�h�̂����������������Ƃ����o�O���C���B
;
;	�� �z�X�g�R�}���h����sequence pan�𑗂����Ƃ��A�X�g���[���Đ������Ƃ�����ɂ��ɉe�����Ă��܂��Ƃ����o�O���C���B
;
;=======================================================
;	ver-2.03 �ւ̗���
;=======================================================
;
;	�� note on����direct pan�𑗂��Ă��������Ȃ��Ƃ����o�O�iver-1.30�����肩��̂��́j���C���B




;		}
