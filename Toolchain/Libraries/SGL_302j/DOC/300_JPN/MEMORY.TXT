
�� �V�X�e���̎g�p���郁�����̃}�b�s���O�ɂ���

�V�X�e���̓X�v���C�g�A�X�N���[���̃R���g���[���p�� �v�n�q�j-�g�h�̈��
�Ox�S�O�O�O�O�o�C�g���g�p���Ă��܂��B�܂��A�e�N�X�`���Ɍ����̉e����^��
��ꍇ�ɃO�[���[�V�F�[�f�B���O��p���邽�߁A���̃f�[�^�Ƃ��Ău�c�o�P��
�u�q�`�l�̓��Q�U�S�o�C�g���g�p���Ă��܂��B�����̓������ƁA�f�t�H���g
�̐ݒ���ȉ��Ɏ����܂��B

�l�`�w_�o�n�k�x�f�n�m�r:	�P�V�W�U	�g�p�ł���|���S����
�l�`�w_�u�d�q�s�h�b�d�r:	�Q�T�O�O	�g�p�ł��钸�_��
�l�`�w_�s�q�`�m�r�e�d�q:	    �Q�O	�u�����L���O���̓]�����N�G�X�g��
�l�`�w_�m�d�r�s:		    �Q�O	�}�g���N�X�̃l�X�g��

slPutPolygon() �͎w�肳�ꂽ���f���Ŏg�p����|���S�����A�y�ђ��_������������
�ő吔���z����ꍇ���̃��f���͏������܂���B

�܂��AslPutSprite() , slDispSprite() , slSetSprite() �͎��s����邽�тɃ|���S����
���ЂƂ����Z���A�ő吔���z����ꍇ�ɂ��̃f�[�^�̏����𒆎~���܂��B
(�������A�w�肳�ꂽ�y�ʒu���\���͈͊O�̏ꍇ�ɂ͉��Z����܂���)


���[�N�q�`�l:
    �O�U�O�b�O�O�O�O:	(SortList)
        �X�v���C�g�R���g���[���f�[�^�̂c�l�`�]���p�e�[�u���o�b�t�@
        (�l�`�w�Q�o�n�k�x�f�n�m�r�{�U)���R���S�o�C�g = �Ox�T�S�O�O
    �O�U�O�b�T�S�O�O:	(CLOfstBuf)
        �����̉e���ɂ�锭�F�f�[�^�e�[�u��
        �R�Q���R�Q = �Ox�S�O�O
    �O�U�O�b�T�W�O�O:	(Zbuffer)
        �|���S���\�[�g�p�̂P���o�b�t�@(�E�B���h�E�O�p)
        �P�Q�W���S = �Ox�Q�O�O
    �O�U�O�b�T�`�O�O:	(Zbuffer2)
        �|���S���\�[�g�p�̂P���o�b�t�@�Q(�E�B���h�E�P�p)
        �P�Q�W���S = �Ox�Q�O�O
    �O�U�O�b�T�b�O�O:	(Zbuf_nest)
        �|���S���\�[�g�p�̂Q���o�b�t�@
        �Q�T�U���S = �Ox�S�O�O
    �O�U�O�b�U�O�O�O:	(Spritebuf)
        �X�v���C�g�R���g���[���f�[�^�o�b�t�@
        (�l�`�w_�o�n�k�x�f�n�m�r�{�T)���R�U = �Ox�e�a�c�b
    �O�U�O�c�T�a�c�b:	(Spritebuf2)
        �X�v���C�g�R���g���[���f�[�^�o�b�t�@�Q
        (�l�`�w_�o�n�k�x�f�n�m�r�{�T)���R�U = �Ox�e�a�c�b
    �O�U�O�d�T�V�a�W:	(Pbuffer)
        �|���S�����Z�p���_�ʒu�o�b�t�@
        �l�`�w_�u�d�q�s�h�b�d�r���P�U = �Ox�X�b�S�O
    �O�U�O�d�e�R�e�W:	(CommandBuf)
        �}�X�^�[����X���[�u�ւ̃R�}���h��n���o�b�t�@
        �l�`�w_�o�n�k�x�f�n�m�r���R�Q�|�Ox�P�a�R�W = �Ox�b�S�O�W
    �O�U�O�e�a�W�O�O:	(TransList)
        �u�����L���O���̓]�����N�G�X�g�p�̂c�l�`�R���g���[���e�[�u��
        �l�`�w_�s�q�`�m�r�e�d�q���R���S�o�C�g = �Ox�e�O
    �O�U�O�e�a�W�e�O:
        �X�^�b�N�̈�(�Ox�S�R�P�O)

    �O�U�O�e�e�b�O�O:
        �V�X�e���ϐ��̈�(�f�a�q���W�X�^�͏�ɂ������w���Ă���)
        �Ox�S�O�O�o�C�g
�V�X�e���ϐ��͈ȉ��Ɏ������̂ŁA�b�v���O����������������̂œǂݏo�����Ƃ��ł���

    �V�X�e���ϐ�
	�O�O�O:	(EventTop)	(EVENT *)	; �擪�ɓo�^����Ă���C�x���g
	�O�O�S:	(EventLast)	(EVENT *)	; �����ɓo�^����Ă���C�x���g
	�O�O�W:	(EventNow)	(EVENT *)	; ���s���̃C�x���g
	�O�O�b:	(EventCount)	(Uint16)	; �C�x���g�̎c��
	�O�O�d:	(WorkCount)	(Uint16)	; ���[�N�̎c��
	�O�P�O:	(MainMode)	(Uint8)		; ���C���V�[�P���X���[�h
	�O�P�P:	(SubMode)	(Uint8)		; �T�u�V�[�P���X���[�h
	�O�P�Q:	(SynchConst)	(Sint8)		; �r�f�I�����J�E���g
	�O�P�R:	(SynchCount)	(Sint8)		; �r�f�I�����J�E���g
	�O�P�S:	(UserFunction)	(void (*)())	; �u�����L���O���Ɏ��s���郆�[�U�[�֐�
	�O�P�W:	(TransCount)	(Uint16)	; �u�����L���O���̓]���G���g���[��
	�O�P�`:	(TransRequest)	(Uint8)		; �u�����L���O���̓]���̃��N�G�X�g
	�O�P�a: (PauseFlag)	(Uint8)		; �X�v���C�g�A�X�N���[���̃|�[�Y�p�t���O

 	�O�P�b:	(mtptr)		(MATRIX *)	; �J�����g�}�g���N�X�|�C���^
	�O�Q�O:	(MatrixCount)	(Uint8)		; �}�g���N�X�̃l�X�g�J�E���g
	�O�Q�P:	(PrintColor)	(Uint8)		; �e�L�X�g�\���p�J���[�p���b�g
	�O�Q�Q:	(IntCount)	(Uint16)	; ���荞�݃J�E���g
	�O�Q�S:	(MsPbufPtr)	(Uint32 *)	; ���_���W���Z�o�b�t�@�|�C���^(Master)
	�O�Q�W:	(SlPbufPtr)	(Uint32 *)	; ���_���W���Z�o�b�t�@�|�C���^(Slave)
	�O�Q�b:	(SpritePtr)	(Uint16 *)	; �X�v���C�g�f�[�^�]���|�C���^
	�O�R�O:	(MsSdataPtr)	(Uint16 *)	; �X�v���C�g�f�[�^�Z�b�g�|�C���^(Master)
	�O�R�S:	(SlSdataPtr)	(Uint16 *)	; �X�v���C�g�f�[�^�Z�b�g�|�C���^(Master)
	�O�R�W:	(ZbufPtr)	(void **)	; �y�o�b�t�@�|�C���^
	�O�R�b:	(FormTbl)	(TEXTURE *)	; �e�N�X�`���f�[�^�e�[�u��
	�O�S�O:	(SprbufBias)	(Uint32)	; �X�v���C�g�f�[�^�o�b�t�@�؂�ւ�
	�O�S�S:	(ComRdPtr)	(Uint32 *)	; �R�}���h���[�h�|�C���^
	�O�S�W:	(ComWrPtr)	(Uint32 *)	; �R�}���h�Z�b�g�|�C���^
	�O�S�b:	(MsLightVector)	(VECTOR)	; �����x�N�g��(Master)
	�O�T�W:	(SlLightVector)	(VECTOR)	; �����x�N�g��(Master)
	�O�U�S:	(ColorOffset)	(Uint8 *)	; �J���[�I�t�Z�b�g�e�[�u���|�C���^
	�O�U�W:	(MsScreenDist)	(FIXED)		; �X�N���[���ʒu(Master)
	�O�U�b:	(SlScreenDist)	(FIXED)		; �X�N���[���ʒu(Slave)
	�O�V�O:	(MsZlimit)	(Sint16)	; �\�����~�b�g�y�ʒu(Master)
	�O�V�Q:	(WindowNumber)	(Uint8)		; �E�B���h�E�g�p��
	�O�V�R:	(WinUseFlag)	(Uint8)		; �E�B���h�E�g�p�t���O
	�O�V�S:	(TotalPolygons)	(Uint16)	; ���Z�|���S����
	�O�V�U:	(TotalVertices)	(Uint16)	; ���Z���_��
	�O�V�W:	(MsScreenLeft)	(Sint16)	; �X�N���[�����ʒu
	�O�V�`:	(MsScreenTop)	(Sint16)	; �X�N���[����ʒu
	�O�V�b:	(MsScreenRight)	(Sint16)	; �X�N���[���E�ʒu
	�O�V�d:	(MsScreenBottom) (Sint16)	; �X�N���[�����ʒu
	�O�W�O:	(MsScreenSizeX)	(Uint16)	; �X�N���[�����T�C�Y(Master)
	�O�W�Q:	(MsScreenSizeY)	(Uint16)	; �X�N���[���c�T�C�Y(Master)
	�O�W�S:	(MsWindowSizeX)	(Uint16)	; �E�B���h�E�T�C�Y(Master)
	�O�W�U:	(MsWindowSizeY)	(Uint16)	; �E�B���h�E�T�C�Y(Master)
	�O�W�W:	(MXPolygons)	(Uint16)	; �ő�|���S����
	�O�W�`:	(MXVertices)	(Uint16)	; �ő咸�_��
	�O�W�b:	(FrameSizeX)	(Uint16)	; �t���[���o�b�t�@�T�C�Y
	�O�W�d:	(FrameSizeY)	(Uint16)	; �t���[���o�b�t�@�T�C�Y
	�O�X�O:	(MsWinXAdder)	(Sint16)	; �E�B���h�E�`�F�b�N�p���Z�f�[�^(Master)
	�O�X�Q:	(MsWinYAdder)	(Sint16)	; �E�B���h�E�`�F�b�N�p���Z�f�[�^(Master)
	�O�X�S:	(SlWinXAdder)	(Uint16)	; �E�B���h�E�`�F�b�N�p���Z�f�[�^(Slave)
	�O�X�U:	(SlWinYAdder)	(Uint16)	; �E�B���h�E�`�F�b�N�p���Z�f�[�^(Slave)
	�O�X�W:	(MsClipXAdder)	(Sint16)	; �N���b�s���O�p���Z�f�[�^(��)(Master)
	�O�X�`:	(MsClipYAdder)	(Sint16)	; �N���b�s���O�p���Z�f�[�^(�c)(Master)
	�O�X�b:	(SlClipXAdder)	(Sint16)	; �N���b�s���O�p���Z�f�[�^(��)(Slave)
	�O�X�d:	(SlClipYAdder)	(Sint16)	; �N���b�s���O�p���Z�f�[�^(�c)(Slave)
	�O�`�O:	(SlZlimit)	(Sint16)	; �\�����~�b�g�y�ʒu(Slave)
	�O�`�Q:	(WinPtr)	(Uint16)	; �E�B���h�E�f�[�^�Z�b�g�I�t�Z�b�g
	�O�`�S:	(DispPolygons)	(Uint16)	; �\���|���S����
	�O�`�U:	(DMAEndFlag)	(Uint8)		; �c�l�`�]���I���t���O(���g�p)
	�O�`�W:	(DMASetFlag)	(Uint8)		; �c�l�`�e�[�u���Z�b�g�t���O
	�O�`�`:	(PutCount)	(Uint16)	; slPutPolygon(),sl...Sprite()�Ăяo����
	�O�`�b:	(MsZdpsftcnt)	(Uint8)		; ��ʕ\�����~�b�g�V�t�g�J�E���^(Master)
	�O�`�c:	(SlZdpsftcnt)	(Uint8)		; ��ʕ\�����~�b�g�V�t�g�J�E���^(Slave)

	�O�a�O : (Resolution)	(Uint8)		; ��ʃ��[�h 
	�O�a�P : (NbPCMBf)	(Uint8)		; �o�b�l�o�b�t�@�̐�(�Q�O�O�O�g�P��)
	�O�a�Q : (PCMBufFlag)	(Sint16)	; �o�b�l�o�b�t�@�̋󂫏󋵃t���O
	�O�a�S : (SoundRdCount)	(Uint8)		; �T�E���h�o�b�t�@�ǂݏo���J�E���^
	�O�a�T : (SoundWrCount)	(Uint8)		; �T�E���h�o�b�t�@�G���g���[�J�E���^
	�O�a�U : (FRT_Count)	(Sint16)	; �e�q�s�J�E���^
	�O�a�V : (SCUMC_ID)	(Uint8)		; �r�b�t�������[�R�s�[�̃`�����l���i���o�[
	�O�a�W : (DMASt_CPU0)	(Uint8)		; �b�o�t �c.�l.�`.�̃X�e�[�^�X(�b�g�O)
	�O�a�` : (DMASt_CPU1)	(Uint8)		; �b�o�t �c.�l.�`.�̃X�e�[�^�X(�b�g�P)
	�O�a�a : (DMASt_SCU0)	(Uint8)		; �r�b�t �c.�l.�`.�̃X�e�[�^�X(�b�g�O)
	�O�a�b : (DMASt_SCU1)	(Uint8)		; �r�b�t �c.�l.�`.�̃X�e�[�^�X(�b�g�P)
	�O�a�c : (DMASt_SCU2)	(Uint8)		; �r�b�t �c.�l.�`.�̃X�e�[�^�X(�b�g�Q)
	�O�a�d : (--------)	(Uint16)	; �V�X�e���\��

	�O�b�O:	(VDP2_TVMD)	(Uint16)	; �s�u��ʃ��[�h
	�O�b�Q:	(VDP2_EXTEN)	(Uint16)	; �O���M���C�l�[�u��
	�O�b�S:	(VDP2_TVSTAT)	(Uint16)	; ��ʃX�e�[�^�X
	�O�b�U:	(VDP2_VRSIZE)	(Uint16)	; �u�q�`�l�T�C�Y
	�O�b�W:	(VDP2_HCNT)	(Uint16)	; �g�J�E���^�[
	�O�b�`:	(VDP2_VCNT)	(Uint16)	; �u�J�E���^�[
	�O�b�d:	(VDP2_RAMCTL)	(Uint16)	; �q�`�l�R���g���[��
	�O�c�O:	(VDP2_CYCA0L)	(Uint16)	; �u�q�`�l�T�C�N���p�^�[���i�o���N�`�O�A�s�O�[�R�j
	�O�c�Q:	(VDP2_CYCA0U)	(Uint16)	; �u�q�`�l�T�C�N���p�^�[���i�o���N�`�O�A�s�S�[�V�j
	�O�c�S:	(VDP2_CYCA1L)	(Uint16)	; �u�q�`�l�T�C�N���p�^�[���i�o���N�`�P�A�s�O�[�R�j
	�O�c�U:	(VDP2_CYCA1U)	(Uint16)	; �u�q�`�l�T�C�N���p�^�[���i�o���N�`�P�A�s�S�[�V�j
	�O�c�W:	(VDP2_CYCB0L)	(Uint16)	; �u�q�`�l�T�C�N���p�^�[���i�o���N�a�O�A�s�O�[�R�j
	�O�c�`:	(VDP2_CYCB0U)	(Uint16)	; �u�q�`�l�T�C�N���p�^�[���i�o���N�a�O�A�s�S�[�V�j
	�O�c�b:	(VDP2_CYCB1L)	(Uint16)	; �u�q�`�l�T�C�N���p�^�[���i�o���N�a�P�A�s�O�[�R�j
	�O�c�d:	(VDP2_CYCB1U)	(Uint16)	; �u�q�`�l�T�C�N���p�^�[���i�o���N�a�P�A�s�S�[�V�j
	�O�d�O:	(VDP2_BGON)	(Uint16)	; ��ʕ\���C�l�[�u��
	�O�d�Q:	(VDP2_MZCTL)	(Uint16)	; ���U�C�N�R���g���[��
	�O�d�S:	(VDP2_SFSEL)	(Uint16)	; ����@�\�R�[�h�Z���N�g
	�O�d�U:	(VDP2_SFCODE)	(Uint16)	; ����@�\�R�[�h
	�O�d�W:	(VDP2_CHCTLA)	(Uint16)	; �L�����N�^�R���g���[���i�m�a�f�O�A�m�a�f�P�j
	�O�d�`:	(VDP2_CHCTLB)	(Uint16)	; �L�����N�^�R���g���[���i�m�a�f�Q�A�m�a�f�R�A�q�a�f�O�j
	�O�d�b:	(VDP2_BMPNA)	(Uint16)	; �r�b�g�}�b�v�p���b�g�i���o�[(�m�a�f�O�A�P)
	�O�d�d:	(VDP2_BMPNB)	(Uint16)	; �r�b�g�}�b�v�p���b�g�i���o�[(�q�a�f�O)
	�O�e�O:	(VDP2_PNCN0)	(Uint16)	; �p�^�[���l�[���R���g���[���i�m�a�f�O�j
	�O�e�Q:	(VDP2_PNCN1)	(Uint16)	; �p�^�[���l�[���R���g���[���i�m�a�f�P�j
	�O�e�S:	(VDP2_PNCN2)	(Uint16)	; �p�^�[���l�[���R���g���[���i�m�a�f�Q�j
	�O�e�U:	(VDP2_PNCN3)	(Uint16)	; �p�^�[���l�[���R���g���[���i�m�a�f�R�j
	�O�e�W:	(VDP2_PNCR)	(Uint16)	; �p�^�[���l�[���R���g���[���i�q�a�f�O�j
	�O�e�`:	(VDP2_PLSZ)	(Uint16)	; �v���[���T�C�Y
	�O�e�b:	(VDP2_MPOFN)	(Uint16)	; �}�b�v�I�t�Z�b�g�i�m�a�f�O�[�R�j
	�O�e�d:	(VDP2_MPOFR)	(Uint16)	; �}�b�v�I�t�Z�b�g�i��]�p�����[�^�`�A�a�j
	�P�O�O:	(VDP2_MPABN0)	(Uint16)	; �}�b�v�i�m�a�f�O�v���[���`�A�a�j
	�P�O�Q:	(VDP2_MPCDN0)	(Uint16)	; �}�b�v�i�m�a�f�O�v���[���b�A�c�j
	�P�O�S:	(VDP2_MPABN1)	(Uint16)	; �}�b�v�i�m�a�f�P�v���[���`�A�a�j
	�P�O�U:	(VDP2_MPCDN1)	(Uint16)	; �}�b�v�i�m�a�f�P�v���[���b�A�c�j
	�P�O�W:	(VDP2_MPABN2)	(Uint16)	; �}�b�v�i�m�a�f�Q�v���[���`�A�a�j
	�P�O�`:	(VDP2_MPCDN2)	(Uint16)	; �}�b�v�i�m�a�f�Q�v���[���b�A�c�j
	�P�O�b:	(VDP2_MPABN3)	(Uint16)	; �}�b�v�i�m�a�f�R�v���[���`�A�a�j
	�P�O�d:	(VDP2_MPCDN3)	(Uint16)	; �}�b�v�i�m�a�f�R�v���[���b�A�c�j
	�P�P�O:	(VDP2_MPABRA)	(Uint16)	; �}�b�v�i��]�p�����[�^�`�v���[���`�A�a�j
	�P�P�Q:	(VDP2_MPCDRA)	(Uint16)	; �}�b�v�i��]�p�����[�^�`�v���[���b�A�c�j
	�P�P�S:	(VDP2_MPEFRA)	(Uint16)	; �}�b�v�i��]�p�����[�^�`�v���[���d�A�e�j
	�P�P�U:	(VDP2_MPGHRA)	(Uint16)	; �}�b�v�i��]�p�����[�^�`�v���[���f�A�g�j
	�P�P�W:	(VDP2_MPIJRA)	(Uint16)	; �}�b�v�i��]�p�����[�^�`�v���[���h�A�i�j
	�P�P�`:	(VDP2_MPKLRA)	(Uint16)	; �}�b�v�i��]�p�����[�^�`�v���[���j�A�k�j
	�P�P�b:	(VDP2_MPMNRA)	(Uint16)	; �}�b�v�i��]�p�����[�^�`�v���[���l�A�m�j
	�P�P�d:	(VDP2_MPOPRA)	(Uint16)	; �}�b�v�i��]�p�����[�^�`�v���[���n�A�o�j
	�P�Q�O:	(VDP2_MPABRB)	(Uint16)	; �}�b�v�i��]�p�����[�^�a�v���[���`�A�a�j
	�P�Q�Q:	(VDP2_MPCDRB)	(Uint16)	; �}�b�v�i��]�p�����[�^�a�v���[���b�A�c�j
	�P�Q�S:	(VDP2_MPEFRB)	(Uint16)	; �}�b�v�i��]�p�����[�^�a�v���[���d�A�e�j
	�P�Q�U:	(VDP2_MPGHRB)	(Uint16)	; �}�b�v�i��]�p�����[�^�a�v���[���f�A�g�j
	�P�Q�W:	(VDP2_MPIJRB)	(Uint16)	; �}�b�v�i��]�p�����[�^�a�v���[���h�A�i�j
	�P�Q�`:	(VDP2_MPKLRB)	(Uint16)	; �}�b�v�i��]�p�����[�^�a�v���[���j�A�k�j
	�P�Q�b:	(VDP2_MPMNRB)	(Uint16)	; �}�b�v�i��]�p�����[�^�a�v���[���l�A�m�j
	�P�Q�d:	(VDP2_MPOPRB)	(Uint16)	; �}�b�v�i��]�p�����[�^�a�v���[���n�A�o�j
	�P�R�O:	(VDP2_SCXN0)	(FIXED)		; ��ʃX�N���[���l�i�m�a�f�O�A���������Œ菬���j
	�P�R�O:	 (VDP2_SCXIN0)	(Sint16)	; ��ʃX�N���[���l�i�m�a�f�O�A���������������j
	�P�R�Q:	 (VDP2_SCXDN0)	(Uint16)	; ��ʃX�N���[���l�i�m�a�f�O�A���������������j
	�P�R�S:	(VDP2_SCYN0)	(FIXED)		; ��ʃX�N���[���l�i�m�a�f�O�A���������Œ菬���j
	�P�R�S:	 (VDP2_SCYIN0)	(Uint16)	; ��ʃX�N���[���l�i�m�a�f�O�A���������������j
	�P�R�U:	 (VDP2_SCYDN0)	(Uint16)	; ��ʃX�N���[���l�i�m�a�f�O�A���������������j
	�P�R�W:	(VDP2_ZMXN0)	(FIXED)		; ���W�����i�m�a�f�O�A���������Œ菬���j
	�P�R�W:	 (VDP2_ZMXIN0)	(Uint16)	; ���W�����i�m�a�f�O�A���������������j
	�P�R�`:	 (VDP2_ZMXDN0)	(Uint16)	; ���W�����i�m�a�f�O�A���������������j
	�P�R�b:	(VDP2_ZMYN0)	(FIXED)		; ���W�����i�m�a�f�O�A���������Œ菬���j
	�P�R�b:	 (VDP2_ZMYIN0)	(Uint16)	; ���W�����i�m�a�f�O�A���������������j
	�P�R�d:	 (VDP2_ZMYDN0)	(Uint16)	; ���W�����i�m�a�f�O�A���������������j
	�P�S�O:	(VDP2_SCXN1)	(FIXED)		; ��ʃX�N���[���l�i�m�a�f�P�A���������Œ菬���j
	�P�S�O:	 (VDP2_SCXIN1)	(Uint16)	; ��ʃX�N���[���l�i�m�a�f�P�A���������������j
	�P�S�Q:	 (VDP2_SCXDN1)	(Uint16)	; ��ʃX�N���[���l�i�m�a�f�P�A���������������j
	�P�S�S:	(VDP2_SCYN1)	(FIXED)		; ��ʃX�N���[���l�i�m�a�f�P�A���������Œ菬���j
	�P�S�S:	 (VDP2_SCYIN1)	(Uint16)	; ��ʃX�N���[���l�i�m�a�f�P�A���������������j
	�P�S�U:	 (VDP2_SCYDN1)	(Uint16)	; ��ʃX�N���[���l�i�m�a�f�P�A���������������j
	�P�S�W:	(VDP2_ZMXN1)	(FIXED)		; ���W�����i�m�a�f�P�A���������Œ菬���j
	�P�S�W:	 (VDP2_ZMXIN1)	(Uint16)	; ���W�����i�m�a�f�P�A���������������j
	�P�S�`:	 (VDP2_ZMXDN1)	(Uint16)	; ���W�����i�m�a�f�P�A���������������j
	�P�S�b:	(VDP2_ZMYN1)	(FIXED)		; ���W�����i�m�a�f�P�A���������Œ菬���j
	�P�S�b:	 (VDP2_ZMYIN1)	(Uint16)	; ���W�����i�m�a�f�P�A���������������j
	�P�S�d:	 (VDP2_ZMYDN1)	(Uint16)	; ���W�����i�m�a�f�P�A���������������j
	�P�T�O:	(VDP2_SCXN2)	(Uint16)	; ��ʃX�N���[���l�i�m�a�f�Q�A���������j
	�P�T�Q:	(VDP2_SCYN2)	(Uint16)	; ��ʃX�N���[���l�i�m�a�f�Q�A���������j
	�P�T�S:	(VDP2_SCXN3)	(Uint16)	; ��ʃX�N���[���l�i�m�a�f�R�A���������j
	�P�T�U:	(VDP2_SCYN3)	(Uint16)	; ��ʃX�N���[���l�i�m�a�f�R�A���������j
	�P�T�W:	(VDP2_ZMCTL)	(Uint16)	; �k���C�l�[�u��
	�P�T�`:	(VDP2_SCRCTL)	(Uint16)	; ���C�����c�Z���X�N���[���R���g���[��
	�P�T�b:	(VDP2_VCSTA)	(Uint16 *)	; �c�Z���X�N���[���e�[�u���A�h���X
	�P�U�O:	(VDP2_LSTA0)	(Sint16 *)	; �m�a�f�O�p���C���X�N���[���e�[�u���A�h���X
	�P�U�S:	(VDP2_LSTA1)	(Sint16 *)	; �m�a�f�P�p���C���X�N���[���e�[�u���A�h���X
	�P�U�W:	(VDP2_LCTA)	(Uint16 *)	; ���C���J���[��ʃe�[�u���A�h���X
	�P�U�b:	(VDP2_BKTA)	(Uint16 *)	; �o�b�N��ʃe�[�u���A�h���X
	�P�V�O:	(VDP2_RPMD)	(Uint16)	; ��]�p�����[�^���[�h
	�P�V�Q:	(VDP2_RPRCTL)	(Uint16)	; ��]�p�����[�^���[�h�R���g���[��
	�P�V�S:	(VDP2_KTCTL)	(Uint16)	; �W���e�[�u���R���g���[��
	�P�V�U:	(VDP2_KTAOF)	(Uint16)	; �W���e�[�u���A�h���X�I�t�Z�b�g
	�P�V�W:	(VDP2_OVPNRA)	(Uint16)	; ��ʃI�[�o�[�p�^�[���l�[��
	�P�V�`:	(VDP2_OVPNRB)	(Uint16)	; ��ʃI�[�o�[�p�^�[���l�[��
	�P�V�b:	(VDP2_RPTA)	(Sint32 *)	; ��]�p�����[�^�e�[�u���A�h���X
	�P�W�O:	(VDP2_WPSX0)	(Uint16)	; �E�B���h�E�|�W�V����(H start)
	�P�W�Q:	(VDP2_WPSY0)	(Uint16)	; �E�B���h�E�|�W�V����(V start)
	�P�W�S:	(VDP2_WPEX0)	(Uint16)	; �E�B���h�E�|�W�V����(H stop)
	�P�W�U:	(VDP2_WPEY0)	(Uint16)	; �E�B���h�E�|�W�V����(V stop)
	�P�W�W:	(VDP2_WPSX1)	(Uint16)	; �E�B���h�E�|�W�V����(H start)
	�P�W�`:	(VDP2_WPSY1)	(Uint16)	; �E�B���h�E�|�W�V����(V start)
	�P�W�b:	(VDP2_WPEX1)	(Uint16)	; �E�B���h�E�|�W�V����(H stop)
	�P�W�d:	(VDP2_WPEY1)	(Uint16)	; �E�B���h�E�|�W�V����(V stop)
	�P�X�O:	(VDP2_WCTLA)	(Uint16)	; �E�B���h�E�R���g���[��
	�P�X�Q:	(VDP2_WCTLB)	(Uint16)	; �E�B���h�E�R���g���[��
	�P�X�S:	(VDP2_WCTLC)	(Uint16)	; �E�B���h�E�R���g���[��
	�P�X�U:	(VDP2_WCTLD)	(Uint16)	; �E�B���h�E�R���g���[��
	�P�X�W:	(VDP2_LWTA0)	(Uint16 *)	; ���C���E�B���h�E�e�[�u���A�h���X
	�P�X�b:	(VDP2_LWTA1)	(Uint16 *)	; ���C���E�B���h�E�e�[�u���A�h���X
	�P�`�O:	(VDP2_SPCTL)	(Uint16)	; �X�v���C�g�R���g���[��
	�P�`�Q:	(VDP2_SDCTL)	(Uint16)	; �V���h�E�R���g���[��
	�P�`�S:	(VDP2_CRAOFA)	(Uint16)	; �J���[�q�`�l�A�h���X�I�t�Z�b�g�i�m�a�f�O�[�R�j
	�P�`�U:	(VDP2_CRAOFB)	(Uint16)	; �J���[�q�`�l�A�h���X�I�t�Z�b�g�i�q�a�f�O�A�X�v���C�g�j
	�P�`�W:	(VDP2_LNCLEN)	(Uint16)	; ���C���J���[��ʃC�l�[�u��
	�P�`�`:	(VDP2_SFPRMD)	(Uint16)	; ����v���C�I���e�B���[�h
	�P�`�b:	(VDP2_CCCTL)	(Uint16)	; �J���[���Z�R���g���[��
	�P�`�d:	(VDP2_SFCCMD)	(Uint16)	; ����J���[���Z���[�h
	�P�a�O:	(VDP2_PRISA)	(Uint16)	; �v���C�I���e�B�i���o�[
	�P�a�Q:	(VDP2_PRISB)	(Uint16)	; �v���C�I���e�B�i���o�[
	�P�a�S:	(VDP2_PRISC)	(Uint16)	; �v���C�I���e�B�i���o�[
	�P�a�U:	(VDP2_PRISD)	(Uint16)	; �v���C�I���e�B�i���o�[
	�P�a�W:	(VDP2_PRINA)	(Uint16)	; �v���C�I���e�B�i���o�[
	�P�a�`:	(VDP2_PRINB)	(Uint16)	; �v���C�I���e�B�i���o�[
	�P�a�b:	(VDP2_PRIR)	(Uint16)	; �v���C�I���e�B�i���o�[
	�P�a�d: (--------)	(Uint16)	; �V�X�e���\��
	�P�b�O:	(VDP2_CCRSA)	(Uint16)	; �J���[���Z����(�X�v���C�g�O�A�P)
	�P�b�Q:	(VDP2_CCRSB)	(Uint16)	; �J���[���Z����(�X�v���C�g�Q�A�R)
	�P�b�S:	(VDP2_CCRSC)	(Uint16)	; �J���[���Z����(�X�v���C�g�S�A�T)
	�P�b�U:	(VDP2_CCRSD)	(Uint16)	; �J���[���Z����(�X�v���C�g�U�A�V)
	�P�b�W:	(VDP2_CCRNA)	(Uint16)	; �J���[���Z����(�m�a�f�O�A�P)
	�P�b�`:	(VDP2_CCRNB)	(Uint16)	; �J���[���Z����(�m�a�f�Q�A�R)
	�P�b�b:	(VDP2_CCRR)	(Uint16)	; �J���[���Z����(�q�f�a�O)
	�P�b�d:	(VDP2_CCRLB)	(Uint16)	; �J���[���Z����(���C���J���[��ʁA�o�b�N���)
	�P�c�O:	(VDP2_CLOFEN)	(Uint16)	; �J���[�I�t�Z�b�g�C�l�[�u��
	�P�c�Q:	(VDP2_CLOFSL)	(Uint16)	; �J���[�I�t�Z�b�g�Z���N�g
	�P�c�S:	(VDP2_COAR)	(Uint16)	; �J���[�I�t�Z�b�g�`(�q����)
	�P�c�U:	(VDP2_COAG)	(Uint16)	; �J���[�I�t�Z�b�g�`(�f��������)
	�P�c�W:	(VDP2_COAB)	(Uint16)	; �J���[�I�t�Z�b�g�`(�a������)
	�P�c�`:	(VDP2_COBR)	(Uint16)	; �J���[�I�t�Z�b�g�a(�q����)
	�P�c�b:	(VDP2_COBG)	(Uint16)	; �J���[�I�t�Z�b�g�a(�f��������)
	�P�c�d:	(VDP2_COBB)	(Uint16)	; �J���[�I�t�Z�b�g�a(�a������)

	�P�d�O:	(ScrRotPtr)	(ROTSCROLL *)	; ���삷���]�p�����[�^�̃A�h���X
	�P�d�S:	(nbg0_char_adr)	(void *)	; �m�a�f�O�p�b�f�A�h���X
	�P�d�W:	(nbg1_char_adr)	(void *)	; �m�a�f�P�p�b�f�A�h���X
	�P�d�b:	(nbg2_char_adr)	(void *)	; �m�a�f�Q�p�b�f�A�h���X
	�P�e�O:	(nbg3_char_adr)	(void *)	; �m�a�f�R�p�b�f�A�h���X
	�P�e�S:	(ra_char_adr)	(void *)	; �q�a�f�O(�p�����[�^�`)�p�b�f�A�h���X
	�P�e�W:	(rb_char_adr)	(void *)	; �q�a�f�O(�p�����[�^�a)�p�b�f�A�h���X
	�P�e�b:	(nbg0_page_adr)	(void *)	; �m�a�f�O�p�p�^�[���l�[���A�h���X
	�Q�O�O:	(nbg1_page_adr)	(void *)	; �m�a�f�P�p�p�^�[���l�[���A�h���X
	�Q�O�S:	(nbg2_page_adr)	(void *)	; �m�a�f�Q�p�p�^�[���l�[���A�h���X
	�Q�O�W:	(nbg3_page_adr)	(void *)	; �m�a�f�R�p�p�^�[���l�[���A�h���X
	�Q�O�b:	(ra_page_adr)	(void *)	; �q�a�f�O(�p�����[�^�`)�p�p�^�[���l�[���A�h���X
	�Q�P�O:	(rb_page_adr)	(void *)	; �q�a�f�O(�p�����[�^�a)�p�p�^�[���l�[���A�h���X
	�Q�P�S:	(rpara_vram_adr)(void *)	; ��]�p�����[�^�Z�b�g�A�h���X
	�Q�P�W:	(k_table_adr)	(void *)	; �W���e�[�u���Z�b�g�A�h���X
	�Q�P�b:	(RotScrParA)	(ROTSCROLL)	; ��]�p�����[�^�`
	�Q�W�S:	(RotScrParB)	(ROTSCROLL)	; ��]�p�����[�^�a
	�Q�d�b: (Nbg2_PosX)	(FIXED)		; �m�a�f�Q �\���ʒu (�w)
	�Q�e�O: (Nbg2_PosY)	(FIXED)		; �m�a�f�Q �\���ʒu (�x)
	�Q�e�S: (Nbg3_PosX)	(FIXED)		; �m�a�f�R �\���ʒu (�w)
	�Q�e�W: (Nbg3_PosY)	(FIXED)		; �m�a�f�R �\���ʒu (�x)

	�Q�e�b:	(Window_data)	(Uint16[22])	; �E�B���h�E�R���g���[���f�[�^�o�b�t�@(�Q��)
	�R�Q�W:	(Center_data)	(Uint16[10])	; �E�B���h�E���S�R���g���[���f�[�^�o�b�t�@(�Q��)
	�R�R�b:	(RandWork)	(Uint32)	; ���������p���[�N
	�R�S�O: (CDReadExec)	(void*())	; �b�c�ǂݍ��݃T�[�o�[�֐�
	�R�S�S: (DMA_TRANS)	(Uint32[10])	; �b�o�t �c.�l.�`. �p�����[�^
	�R�U�b: (SOUND)		(void*[3])	; �T�E���h�o�b�t�@�|�C���^
	�R�V�W: (PERIPHERAL)	(Uint32[12])	; �y���t�F�����R���g���[���f�[�^


�� �u�c�o�P_�u�q�`�l
    �Ox�Q�T�b�O�O�O�O�O����n�܂�u�c�o�P�̂u�q�`�l�Ő擪�Ɩ����̗̈�̓V�X�e���ɂ����
  �g�p����Ă��邽�߁A���[�U�[�͎g�p�ł��Ȃ��B

  �Q�T�b�O�O�O�O�O: �X�v���C�g�R���g���[���R�}���h
	(�l�`�w_�o�n�k�x�f�n�m �{ �U) �� �R�Q = �Ox�d�P�b�O
  �Q�T�b�V�e�e�O�O: �O�[���[�V�F�[�f�B���O�e�[�u��
	�Q���S���R�R = �Ox�P�O�W(�Q�U�S)

�� �u�c�o�Q_�u�q�`�l
    �Ox�Q�T�d�O�O�O�O�O����n�܂�u�c�o�Q�̂u�q�`�l�̓V�X�e���������̍ہA�ȉ��̗l��
  �敪����Ă���B

  �Q�T�d�O�O�O�O�O: VDP2_VRAM_A0
	��]�X�N���[���p�b�f�f�[�^
  �Q�T�d�Q�O�O�O�O: VDP2_VRAM_A1
	��]�X�N���[���p�W���f�[�^�y�сA��]�p�����[�^
  �Q�T�d�S�O�O�O�O: VDP2_VRAM_B0
	��]�X�N���[���p�p�^�[���l�[���f�[�^
  �Q�T�d�U�O�O�O�O: VDP2_VRAM_B1
	�m�[�}���X�N���[���p�f�[�^
	���̗̈�͂b�f�ƃp�^�[���l�[�������L���Ă���B
    �Q�T�d�U�O�O�O�O�`�Q�T�d�U�V�e�e�e	(�m�a�f�O�y�тm�a�f�P�p�b�f�f�[�^)
    �Q�T�d�U�W�O�O�O�`�Q�T�d�V�T�e�e�e	(�m�a�f�P�p�b�f�f�[�^)
    �Q�T�d�V�U�O�O�O�`�Q�T�d�V�V�e�e�e	(�m�a�f�O�p�p�^�[���l�[���f�[�^�P�y�[�W)
    �Q�T�d�V�W�O�O�O�`�Q�T�d�V�e�e�e�e	(�m�a�f�P�p�p�^�[���l�[���f�[�^�S�y�[�W)

  �b�f�͂ǂ̃X�N���[�����Q�T�U�F���[�h�Ńp�^�[���l�[���͂P���[�h/�Z���ɂȂ��Ă���B
  �m�a�f�O�͊e�Z�����Ƃɔ��]�̃t���O�����P�O�r�b�g���[�h�ŁA���̖ʂ͔��]��ʂ��Ƃ�
  �g�p����P�Q�r�b�g���[�h�ƂȂ��Ă���B
  �J���[�q�`�l�͂P�U�r�b�g�Q�O�S�W�F���[�h�ŁA�I�t�Z�b�g�͎g�p���Ă��Ȃ��B
  �o�b�N�ʂ͒P�F�ŁA�Q�T�d�R�e�e�e�d�ɃJ���[�f�[�^(�O�O�O�O)�����Ă���B

 06000000 : +---------------------------+
	    | Boot ROM BIOS functions	|
 06000800 : +---------------------------+
	    | Slave CPU Stack Area	|
 06001000 : +---------------------------+
	    | Master CPU default Stack	|
 06002000 : +---------------------------+
	    | ???			|
 06004000 : +---------------------------+
	    |				|
	    | User Program & Data	|
	    |				|
 060C0000 : +---------------------------+
	    |				|
	    | SortList	(5400)		|
	    |				|
 060C5400 : +---------------------------+
	    | TransList	(F0)		|
 060C54F0 : +---------------------------+
	    | Zbuffer	(200)		|
 060C56F0 : +---------------------------+
	    | Zbuffer2	(200)		|
 060C58F0 : +---------------------------+
	    | Zbuf_nest	(400)		|
 060C5CF0 : +---------------------------+
	    |				|
	    | Spritebuf	(FBDC)		|
	    |				|
 060D58CC : +---------------------------+
	    |				|
	    | Spritebuf2(FBDC)		|
	    |				|
 060E54A8 : +---------------------------+
	    |				|
	    | Pbuffer	(9C40)		|
	    |				|
 060EF0E8 : +---------------------------+
	    | CLOfstBuf	(400)		|
 060EF4E8 : +---------------------------+
	    |				|
	    | CommandBuf(DF40)		|
	    |				|
 060FD428 : +---------------------------+
	    |				|
	    | Stack Area(27D8)		|
	    |				|
 060FFC00 : +---------------------------+
	    | SystemWork(400)		|
 06100000 : +---------------------------+


 25C00000 : +---------------------------+
	    |				|
	    | SpriteCommand(E1C0)	|
	    |				|
 25C0E1C0 : +---------------------------+
	    |				|
	    | Free (for User)		|
	    |				|
 25C7FEF8 : +---------------------------+
	    | Gouraud table(108)	|
 25C80000 : +---------------------------+


 25E00000 : +---------------------------+
	    |				|
	    | RBG0 CG (2048chars)	|
	    |				|
 25E20000 : +---------------------------+
	    |				|
	    | RBG0 K table		|
	    |				|
 25E40000 : +---------------------------+
	    |				|
	    | RBG0 Map (16pages)	|
	    |				|
 25E60000 : +---------------------------+
	    | NBG0 , NBG1 CG (512 chars)|
 25E68000 : +- - - - - - - - - - - - - -+
	    | NBG1 CG (+896chars)	|
 25E76000 : +---------------------------+
	    | NBG0 Map (1page)		|
 25E78000 : +---------------------------+
	    | NBG1 Map (4pages)		|
 25E80000 : +---------------------------+

;---------------------------------------------------------------------------

�� �V�X�e�����[�N�q�`�l�̈�̃J�X�^�}�C�Y�ɂ���

�O�U�O�e�e�b�O�O����n�܂�V�X�e���ϐ��̈�̓V�X�e���ŌŒ肳��Ă��܂����A
���[�N�q�`�l�Ƃ��Ďg�p�����̈�(�f�t�H���g�ł� �O�U�O�b�O�O�O�O�`)�ɂ���
�́A�ȉ��Ɏ����ϐ������[�U�[����`���邱�Ƃɂ��J�X�^�}�C�Y�\�ł��B
(�������A�ꕔ��ύX����ꍇ�ł��S�Ă̕ϐ���ݒ肷��悤�ɂ��ĉ�����)

    void*   MasterStack = (void*)0x60ffc00 ;	/* Master Stack area End */
    void*   SlaveStack  = (void*)0x6001e00 ;	/* Slave Stack area End */
    Uint16  MaxVertices = 2500 ;		/* Calculatable vertice numbers */
    Uint16  MaxPolygons = 1786 ;		/* Calculatable polygon numbers */
    Uint16  EventSize = 0x80 ;			/* sizeof(EVENT) */
    Uint16  WorkSize = 0x40 ;			/* sizeof(WORK) */
    Uint16  MaxEvents = 64 ;			/* Useful Event count */
    Uint16  MaxWorks = 256 ;			/* Useful Work count */
    void*   SortList = (void*)0x60c0000 ;	/* SCU D.M.A. Table */
    Uint32  SortListSize = 0x5400 ;		/* Sprite transfer request table size */
    void*   TransList = (void*)0x60fb800 ;	/* SCU D.M.A. Table */
    void*   Zbuffer = (void*)0x60c5800 ;	/* (128 + 128 + 256) * 4 Bytes fix */
    void*   SpriteBuf (void*)0x60c6000 ;	/* Sprite control data buffer */
    Uint32  SpriteBufSize = 0x1f7b8 ;		/* Sprite control data buffer size */
    void*   Pbuffer = (void*)0x60e57b8 ;	/* Point calculate buffer */
    void*   CLOfstBuf = (void*)0x60c5400 ;	/* 32 * 32 Bytes fix */
    void*   CommandBuf = (void*)0x60ef3f8 ;	/* Command for slave CPU buffer */
    void*   PCM_Work = (void*)0x25a78000 ;	/* PCM data buffer */
    Uint32  PCM_WkSize = 0x8000 ;		/* PCM data buffer size */

    EVENT  EventBuf[MAX_EVENTS] ;	/* buffer for Event use */
    WORK   WorkBuf[MAX_WORKS] ;		/* buffer for Work use */
    EVENT* RemainEvent[MAX_EVENTS] ;	/* Remain Event address buffer */
    WORK*  RemainWork[MAX_WORKS] ;	/* Remain Work address buffer */

���ꂼ��̗̈�̐ݒ�͈ȉ��̒��ӓ_��K�����悤�ɂ��ĉ������B

(�P) SortList �� TransList �� �r�b�t �c.�l.�`.���Ԑڃ��[�h�Ŏg�p���邽�߁A
     �e�[�u���̃T�C�Y���z����Q�ׂ̂��搔�ŗ̈撲������悤�ɂ��ĉ������B
     SortList �� �X�v���C�g(�|���S��)�f�[�^�y�сA�E�B���h�E���̃f�[�^��
     �]���ɂ��g�p���邽�߁A�\�������ő�X�v���C�g�� �{ �U���̃G���g���[
     ���m�ۂ��ĉ������B
     �ЂƂ̃G���g���[�ɂ��P�Q�o�C�g�̃e�[�u�����g�p���܂��B
     �Ⴆ�΁A�P�O�O�O�X�v���C�g�\������ꍇ�ɂ�
	(�P�O�O�O�{�U) �� �P�Q �� �P�Q�O�V�Q(�Q�e�Q�W�g) �ƂȂ�܂��̂ŁA
     �S�O�O�O�g�o�E���_���̃A�h���X�ɐݒ肷��B

     �܂��ATransList �̓u�����L���O���̓]�����N�G�X�g�Ɏg�p����Q�O�G���g
     ���[�܂łƂȂ��Ă��܂��̂ŁA
	�Q�O �� �P�Q �� �Q�S�O(�e�O�g) �o�C�g�K�v�ł��̂ŁA
     �P�O�O�g �o�E���_���̃A�h���X�ɐݒ肵�ĉ������B

(�Q) Zbuffer , CLOfstBuf �� �T�C�Y���Œ�� �S�o�C�g�o�E���_���̃A�h���X��
     �ݒ肵�ĉ������B

(�R) CommandBuf �� �\������֐�(slPutPolygon , slDispSprite��)�̎��s��
     �� �W�O�o�C�g �{ �P�O�O�g ���炢�̃T�C�Y���m�ۂ��ĉ������B
     ���s�֐�������ł���ꍇ�ɂ� ���̕\���Q�l�Ƀo�b�t�@�T�C�Y��ݒ肵��
     �������B

	slPutPolygon	�V�Q�o�C�g
	slDispPolygon	�P�U�o�C�g
	slPutSprite	�R�U�o�C�g
	slDispSprite	�R�U�o�C�g
	slSetSprite	�P�U�o�C�g
	slPerspective	  �W�o�C�g
	slWindow	�Q�O�o�C�g
	slLight		�P�U�o�C�g
	slZdspLevel	  �S�o�C�g

     ���̑��ɃV�X�e�����e�t���[�����ƂɃt�@���N�V�����𑗂��Ă��邽�߁A
     ���̕��̗]�T������悤�ɂ��ĉ������B

(�S) SpriteBuf �� �X�v���C�g�R���g���[���f�[�^���Z�b�g����o�b�t�@�ŁA
     �e�t���[���őO���ƌ㔼�Ƃ�ؑւ��Ȃ���g�p���܂��B
     ���������āA(���ۂɕ\�������X�v���C�g(�|���S��)�� �{ �T��) �� �R�U
     �o�C�g �� �Q�o���N ���̃o�b�t�@���K�v�ɂȂ�܂��B

(�T) Pbuffer �� �|���S�����f����\������ۂɍ��W�ϊ��A�����ϊ��̉��Z�p��
     �o�b�t�@�Ƃ��Ďg�p����̈�ŁAslPutPolygon , slDispPolygon ���g�p��
     �Ȃ��A�v���P�[�V�����ł͕K�v����܂���̂ŁA���̃o�b�t�@�Əd�����Ă�
     ���͂���܂���B

(�U) MaxPolygons , MaxVertices �� �\������֐������s����ۂɃo�b�t�@�I�[
     �o�[���`�F�b�N���邽�߂Ɏg�p���܂����A���ۂɕ\������鐔�ł͂Ȃ��A
     �G���g���[����Ă��鐔�ɑ΂��ă`�F�b�N���s�Ȃ��Ă��܂��̂ŁA
     MaxPolygons �Ɋւ��Ă� �K������ SortListSize , SpriteBufSize �ƍ�����
     ����K�v�͂���܂���B

(�V) PCM_Work �̓T�E���h�b�o�t�̗̈�ŁA�T�C�Y�� �Q�O�O�O�g�P�ʂƂȂ�܂�
     �̂ŁA�T�E���h�S���҂Ƒ��k�̏�ݒ肵�ĉ������B

�ȉ��� ���[�N�q�`�l�̐ݒ���s�Ȃ��T���v��(workarea.c)�������܂��B

/*						*/
/*  Workarea assignment customize file		*/
/*		for SGL ver. 1.30		*/

/*------------------------------------------------------------------------*/

#include  "sl_def.h"

/*------------------------------------------------------------------------*/

#define		SystemWork		0x060ffc00	/* �V�X�e���Œ� */

#define		_Byte_			sizeof(Uint8)
#define		_Word_			sizeof(Uint16)
#define		_LongWord_		sizeof(Uint32)
#define		_Sprite_		(sizeof(Uint16) * 18)

#define		AdjWork(pt,sz,ct)	(pt + (sz) * (ct))

/*------------------------------------------------------------------------*/

#define		MAX_VERTICES		 500
#define		MAX_POLYGONS		 100

#define		WORK_AREA		0x060f0000

    enum workarea{
	sort_list  = WORK_AREA ,
	zbuffer    = AdjWork(sort_list  , _LongWord_ * 3 , MAX_POLYGONS + 6) ,
	spritebuf  = AdjWork(zbuffer    , _LongWord_ , 512) ,
	pbuffer    = AdjWork(spritebuf  , _Sprite_ , (MAX_POLYGONS + 6) * 2) ,
	clofstbuf  = AdjWork(pbuffer    , _LongWord_ * 4 , MAX_VERTICES) ,
	commandbuf = AdjWork(clofstbuf  , _Byte_ * 32 , 32) ,
	NextEntry  = AdjWork(commandbuf , _LongWord_ * 8 , MAX_POLYGONS)
    } ;

#define		PCM_Buffer		SoundRAM+0x78000

/*------------------------------------------------------------------------*/

    const void*   MasterStack   = (void*)(WORK_AREA - 0x800) ;
    const void*   SlaveStack    = (void*)(WORK_AREA) ;
    const Uint16  MaxVertices   = MAX_VERTICES ;
    const Uint16  MaxPolygons   = MAX_POLYGONS ;
    const Uint16  EventSize     = sizeof(EVENT) ;
    const Uint16  WorkSize      = sizeof(WORK) ;
    const Uint16  MaxEvents     = MAX_EVENTS ;
    const Uint16  MaxWorks      = MAX_WORKS ;
    const void*   SortList      = (void*)(sort_list) ;
    const Uint32  SortListSize  = (MAX_POLYGONS + 6) * _LongWord_ * 3 ;
    const void*   Zbuffer       = (void*)(zbuffer) ;
    const void*   SpriteBuf     = (void*)(spritebuf) ;
    const Uint32  SpriteBufSize = _Sprite_ * (MAX_POLYGONS + 6) * 2 ;
    const void*   Pbuffer       = (void*)(pbuffer) ;
    const void*   CLOfstBuf     = (void*)(clofstbuf) ;
    const void*   CommandBuf    = (void*)(commandbuf) ;
    const void*   PCM_Work      = (void*)(PCM_Buffer) ;
    const Uint32  PCM_WkSize    = 0x8000 ;
    const void*   TransList     = (void*)(SystemWork - 0x0100) ;

    EVENT  EventBuf[MAX_EVENTS] ;
    WORK   WorkBuf[MAX_WORKS] ;
    EVENT* RemainEvent[MAX_EVENTS] ;
    WORK*  RemainWork[MAX_WORKS] ;

/*------------------------------------------------------------------------*/
