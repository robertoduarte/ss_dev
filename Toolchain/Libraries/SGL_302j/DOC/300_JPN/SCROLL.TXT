
�X�N���[��(�u�c�o�Q)�֌W�̊֐��ɂ���

void slTVOn(void)
  �@�\ : ���j�^�[�ւ̏o�͂��J�n���܂��B

void slTVOff(void)
  �@�\ : ���j�^�[�ւ̏o�͂𒆎~���܂��B
	���j�^�[�ɂ͉����\������Ȃ��Ȃ�܂��B
  ���� : �{�֐������s����ƁA�����ɂu�c�o�Q�̃��W�X�^�ɃZ�b�g����܂��B

Uint16 slGetHCount(void)
  �@�\ : �u�c�o�Q�̂g�J�E���^��ǂݏo���܂��B

Uint16 slGetVCount(void)
  �@�\ : �u�c�o�Q�̂u�J�E���^��ǂݏo���܂��B

void slExtSignal(Uint16 signal , Uint16 mask)
  �@�\ : �O���M���C�l�[�u�����W�X�^�𑀍삵�܂��B
	 signal �ɂ̓Z�b�g�������M�������Amask �ɂ͑��삵�����M�������w�肵�܂��B
	 �M�����͈ȉ��̂S�ł��B
	 EXLTEN : �g�u�J�E���^�̒l�����b�`����^�C�~���O���O���M���ɍ��킹��ꍇ�Ɏw�肵�܂��B
	 EXSYEN : �O�������M���ɍ��킹�Ăs�u��ʂ̕\�����s�Ȃ��ꍇ�Ɏw�肵�܂��B
	 DASEL  : �摜�\���G���A���K�i�̈悢���ς��Ɏg�p����ꍇ�Ɏw�肵�܂��B
	 EXBGEN : �O����ʃf�[�^����͂���ꍇ�Ɏw�肵�܂��B

void slColRAMMode(Uint16 mode)
  �@�\ : �J���[�q�`�l���[�h�����肵�܂��B
	�J���[�q�`�l�ւ̃J���[�f�[�^�̊i�[�́A�K���J���[�q�`�l���[�h�����肵�Ă���
	�s�Ȃ��ĉ������B
	mode : �J���[�q�`�l���[�h�ɑΉ��������̒l�������ĉ������B
		CRM16_1024 : �J���[�q�`�l���[�h�O�i�P�U�r�b�g�J���[�P�O�Q�S�F�~�Q�o���N�j
		CRM16_2048 : �J���[�q�`�l���[�h�P�i�P�U�r�b�g�J���[�Q�O�S�W�F�j
		CRM32_1024 : �J���[�q�`�l���[�h�Q�i�Q�S�r�b�g�J���[�P�O�Q�S�F�j

void slScrCycleSet(Uint32 a0 , Uint32 a1 , Uint32 b0 , Uint32 b1)
  �@�\ : �e�o���N�̃T�C�N���p�^�[����ݒ肵�܂��B�e�o���N����������Ă���ꍇ�ɂ�
	a0,a1,b0,b1 �ɃT�C�N���p�^�[����ݒ肷�邱�Ƃ��ł��܂��B�o���N�����������
	���Ȃ����ɂ́Aa0,b0 �ɃT�C�N���p�^�[����ݒ肷�邱�Ƃ��ł��܂��B
	a0 : �o���N a0 �̃T�C�N���p�^�[��
	a1 : �o���N a1 �̃T�C�N���p�^�[��
	b0 : �o���N b0 �̃T�C�N���p�^�[��
	b1 : �o���N b1 �̃T�C�N���p�^�[��
  ���� : �{�֐������s����ƁA�e�ݒ�l�͒����ɂu�c�o�Q�̃��W�X�^�ɃZ�b�g����܂��B

void slScrDisp(Uint32 mode)
  �@�\ : �p�����[�^�Ƃ��Ďw�肳�ꂽ�X�N���[���ʂ̕`��ݒ���s�Ȃ��܂��B
	mode :	NBG0ON | NBG0OFF
		NBG1ON | NBG1OFF
		NBG2ON | NBG2OFF
		NBG3ON | NBG3OFF
		RBG0ON | RBG0OFF
	    �����̃X�N���[���ʂ̕`��ݒ�𓯎��ɍs�Ȃ��ꍇ�́A�e�ʂ̃��[�h�� "|"
	    �łȂ��Ŏw�肵�ĉ������B
	    �w�肳��Ȃ������X�N���[���ʂ̐ݒ�͕ς��܂���B

Bool slScrAutoDisp(Uint32 ptr)
  �@�\ : �@�\�ݒ���I�������X�N���[���ʂ̃V�X�e���o�^���s�Ȃ��܂��B
	�֐��́A�p�����[�^�Ƃ��Ďw�肳�ꂽ�X�N���[����ʂ́A�u�q�`�l�ւ̃A�N�Z�X�w��
	�i�T�C�N���p�^�[�����W�X�^�j�������I�ɐݒ肵�A�����ɁA�o�^���ꂽ�X�N���[����
	�`��ݒ���I���ɂ��܂��B
	�T�C�N���p�^�[�����쐬�ł��Ȃ��ݒ�̏ꍇ�͂m�f���Ԃ�܂��B
	flag : NBG0ON , NBG1ON , NBG2ON , NBG3ON , RBG0ON
	    �����̃X�N���[���ʂ̕`��ݒ�𓯎��ɍs�Ȃ��ꍇ�́A�e�ʂ̃��[�h�� "|"
	    �łȂ��Ŏw�肵�ĉ������B

void slScrTransparent(Uint16 flag)
  �@�\ : �e�X�N���[���ʂ̓����F�̈������w�肵�܂��B
	flag : NBG0ON , NBG1ON , NBG2ON , NBG3ON , RBG0ON
	    �����̃X�N���[���ʂ̕`��ݒ�𓯎��ɍs�Ȃ��ꍇ�́A�e�ʂ̃��[�h�� "|"
	    �łȂ��Ŏw�肵�ĉ������B
	    �n�m�Ɏw�肳�ꂽ�X�N���[���ʂ̃X�y�[�X���p���b�g�O�̃J���[�ŕ\������܂��B

void slZrotR(ANGLE angz)
  �@�\ : ��]�X�N���[���̂y����]���s�Ȃ��܂��B��]�̐������͎��ɑ΂��ĉE����
	�i���v���j�ɂȂ�܂��B
	�֐� "slDispCenterR" �Ŏw�肵�����W���A��]���S�ɂȂ�܂��B
	angz : �y���ɑ΂����]�X�N���[���̉�]�p�l

void slScrMatSet(void)
  �@�\ : �J�����g�}�g���N�X�𗘗p���� RBG0 �̉�]�p�����[�^���Z�b�g���܂��B

void slBack1ColSet(void *colptr , Uint16 rgb)
  �@�\ : �o�b�N��ʂ̐ݒ���s�Ȃ��܂��B�o�b�N��ʂƂ́A���̉�ʂ��S���`�悳���
	���Ȃ������ɕ\�������A�Ŕw�ʂ̕`��ʂ̂��Ƃł��B
	colptr : �o�b�N�J���[���i�[����u�q�`�l�̐擪�A�h���X
	rgb    : �J���[�f�[�^���q�f�a�e�T�r�b�g�Ŏw��

void slLineColTable(void *adr)
  �@�\ : ���C���J���[�e�[�u���A�h���X�����W�X�^�ɃZ�b�g���܂��B
	adr : �u�q�`�l��̃��C���J���[�e�[�u���A�h���X

void slLine1ColSet(void *adr , Uint16 col)
  �@�\ : ���C���J���[��ʂ�P��F�ɂ��A���̐F��ݒ肵�܂��B
	adr : �u�q�`�l��̃��C���J���[�e�[�u���A�h���X
	col : �J���[�ԍ�

void slLineColDisp(Uint16 flag)
  �@�\ : �g�b�v�摜�ɂȂ������Ƀ��C���J���[�̉e�����󂯂��ʂ�ݒ肵�܂��B
	flag : NBG0ON , NBG1ON , NBG2ON , NBG3ON , RBG0ON �ALNCLON
	    �����̃X�N���[���ʂ̕`��ݒ�𓯎��ɍs�Ȃ��ꍇ�́A�e�ʂ̃��[�h�� "|"
	    �łȂ��Ŏw�肵�ĉ������B
	    �X�v���C�g��ݒ肵�����ꍇ�ɂ� LNCLON ���g�p���ĉ������B
	    (����͑��̃��W�X�^�ƃr�b�g�ʒu���قȂ��Ă��邽�߂ł�)

void slColorCalc(Uint16 flag)
  �@�\ : �J���[���Z�̂��߂̃p�����[�^��ݒ肵�܂��B
	flag :  CC_RATE | CC_ADD				: ���Z���@
		CC_TOP | CC_2ND					: ���Z�w����
		CC_EXT						: �g���J���[���Z
		NBG0 | NBG1 | NBG2 | NBG3 | RBG0 | LNCLON | SPRON	: �o�^��
	    �g�p����@�\�ɉ����ď�L�̒l�� "|" �łȂ��Ŏw�肵�ĉ������B

void slColorCalcOn(Uint16 flag)
  �@�\ : �J���[���Z�R���g���[���̉e�����󂯂��ʂ�ݒ肵�܂��B
	flag : NBG0ON , NBG1ON , NBG2ON , NBG3ON , RBG0ON , LNCLON , SPRON
	    �����̃X�N���[���ʂ̕`��ݒ�𓯎��ɍs�Ȃ��ꍇ�́A�e�ʂ̃��[�h�� "|"
	    �łȂ��Ŏw�肵�ĉ������B

void slColOffsetOn(Uint16 flag)
  �@�\ : �J���[�I�t�Z�b�g�l�̉e�����󂯂��ʂ�ݒ肵�܂��B
	flag : NBG0ON , NBG1ON , NBG2ON , NBG3ON , RBG0ON , LNCLON , SPRON
	    �����̃X�N���[���ʂ̕`��ݒ�𓯎��ɍs�Ȃ��ꍇ�́A�e�ʂ̃��[�h�� "|"
	    �łȂ��Ŏw�肵�ĉ������B

void slColOffsetOff(Uint16 flag)
  �@�\ : �J���[�I�t�Z�b�g�l�̉e�����󂯂Ȃ������ʂ�ݒ肵�܂��B
	flag : NBG0ON , NBG1ON , NBG2ON , NBG3ON , RBG0ON , LNCLON , SPRON
	    �����̃X�N���[���ʂ̕`��ݒ�𓯎��ɍs�Ȃ��ꍇ�́A�e�ʂ̃��[�h�� "|"
	    �łȂ��Ŏw�肵�ĉ������B
  ���� : �S�Ă̖ʂɂ��Ė����ɂ���ꍇ�ɂ� slColOffsetOn(OFF) �����s���ĉ������B

void slColOffsetAUse(Uint16 flag)
  �@�\ : �֐� "slColOffsetA" �ɂ���Đݒ肳�ꂽ�J���[�I�t�Z�b�g�l�̉e�����󂯂�
	��ʂ�ݒ肵�܂��B
	flag : NBG0ON , NBG1ON , NBG2ON , NBG3ON , RBG0ON , LNCLON , SPRON
	    �����̃X�N���[���ʂ̕`��ݒ�𓯎��ɍs�Ȃ��ꍇ�́A�e�ʂ̃��[�h�� "|"
	    �łȂ��Ŏw�肵�ĉ������B

void slColOffsetBUse(Uint16 flag)
  �@�\ : �֐� "slColOffsetB" �ɂ���Đݒ肳�ꂽ�J���[�I�t�Z�b�g�l�̉e�����󂯂�
	��ʂ�ݒ肵�܂��B
	flag : NBG0ON , NBG1ON , NBG2ON , NBG3ON , RBG0ON , LNCLON , SPRON
	    �����̃X�N���[���ʂ̕`��ݒ�𓯎��ɍs�Ȃ��ꍇ�́A�e�ʂ̃��[�h�� "|"
	    �łȂ��Ŏw�肵�ĉ������B

  ���� : slColOffsetAUse , slColOffsetBUse �֐������s����� slColOffsetOn �֐���
	�����Ɏ��s����܂��̂ŁAslColOffsetOn �֐��̓��[�U�[�����s����K�v�͂���
	�܂���B

void slColOffsetA(Sint16 r , Sint16 g , Sint16 b)
void slColOffsetB(Sint16 r , Sint16 g , Sint16 b)
  �@�\ : �J���[�I�t�Z�b�g�`�E�a�Ŏg�p�����I�t�Z�b�g�l��ݒ肵�܂��B
	r : red �̃I�t�Z�b�g�l
	g : green �̃I�t�Z�b�g�l
	b : blue �̃I�t�Z�b�g�l

void slCharNbg0(Uint16 type , Uint16 size)
void slCharNbg1(Uint16 type , Uint16 size)
void slCharNbg2(Uint16 type , Uint16 size)
void slCharNbg3(Uint16 type , Uint16 size)
void slCharRbg0(Uint16 type , Uint16 size)
  �@�\ : ���ꂼ��̃X�N���[���ʂ̃L�����N�^�T�C�Y�y�уX�N���[���Ɏg�p�����F����
	�ݒ���s�Ȃ��܂��B
	type : �L�����N�^�F��
		COL_TYPE_16	: �p���b�g�`�� �P�U�F
		COL_TYPE_256	: �p���b�g�`�� �Q�T�U�F
		COL_TYPE_2048	: �p���b�g�`�� �Q�O�S�W�F
		COL_TYPE_32768	: �q�f�a�`�� �R�Q�V�U�W�F
		COL_TYPE_1M	: �q�f�a�`�� �P�U�V�V���F
	size : �L�����N�^�T�C�Y
		CHAR_SIZE_1x1	: �P�~�P
		CHAR_SIZE_2x2	: �Q�~�Q

void slPageNbg0(void *celadr , void *coladr , type)
void slPageNbg1(void *celadr , void *coladr , type)
void slPageNbg2(void *celadr , void *coladr , type)
void slPageNbg3(void *celadr , void *coladr , type)
void slPageRbg0(void *celadr , void *coladr , type)
  �@�\ : ���ꂼ��̃X�N���[���ʂ̃y�[�W�ݒ���s�Ȃ��܂��B
	celadr : �Z���f�[�^�̂u�q�`�l��擪�A�h���X
	coladr : �J���[�f�[�^�̂u�q�`�l��擪�A�h���X
	type   : �p�^�[���l�[���f�[�^
		PNB_1WORD		: �P���[�h ���ʂP�O�r�b�g
		PNB_1WORD | CN_12BIT	: �P���[�h ���ʂP�Q�r�b�g
		PNB_2WORD		: �Q���[�h ���ʂP�U�r�b�g

void slPlaneNbg0(Uint16 type)
void slPlaneNbg1(Uint16 type)
void slPlaneNbg2(Uint16 type)
void slPlaneNbg3(Uint16 type)
void slPlaneRA(Uint16 type)
void slPlaneRB(Uint16 type)
  �@�\ : ���ꂼ��̃X�N���[���ʂ̃v���[���T�C�Y��ݒ肵�܂��B
	type : �v���[���T�C�Y
		PL_SIZE_1x1	: ���P�~�c�P
		PL_SIZE_2x1	: ���Q�~�c�P
		PL_SIZE_2x2	: ���Q�~�c�Q

void slOverRA(Uint16 mode)
void slOverRB(Uint16 mode)
  �@�\ : ���ꂼ��̉�]�X�N���[���ʂ̉�ʃI�[�o�[�������[�h��ݒ肵�܂��B
	mode : ��ʃI�[�o�[�������[�h
		0 : �G���A�O�́A�\���G���A�ɐݒ肳�ꂽ�摜���J��Ԃ��B
		1 : �G���A�O�́A�w�肵���L�����N�^�p�^�[�����J��Ԃ��B
		2 : �G���A�O�́A���ׂē����B
		3 : �c�T�P�Q�~���T�P�Q�̃G���A�O�͂��ׂē����B

void slMapNbg0(void *a , void *b , void *c , void *d)
void slMapNbg1(void *a , void *b , void *c , void *d)
void slMapNbg2(void *a , void *b , void *c , void *d)
void slMapNbg3(void *a , void *b , void *c , void *d)
  �@�\ : ���ꂼ��̃m�[�}���X�N���[���ʂ̃}�b�v�ݒ���s�Ȃ��܂��B
	a : �v���[���`�̃p�^�[���l�[���f�[�^�e�[�u���̂u�q�`�l��擪�A�h���X
	b : �v���[���a�̃p�^�[���l�[���f�[�^�e�[�u���̂u�q�`�l��擪�A�h���X
	c : �v���[���b�̃p�^�[���l�[���f�[�^�e�[�u���̂u�q�`�l��擪�A�h���X
	d : �v���[���c�̃p�^�[���l�[���f�[�^�e�[�u���̂u�q�`�l��擪�A�h���X

	      (0,0)
		����������
		���`���a��
		����������
		���b���c��
		����������

void sl1MapRA(void *adr)
void sl1MapRB(void *adr)
  �@�\ : ���ꂼ��̉�]�p�����[�^���g�p�����]�X�N���[���̃}�b�v��ݒ肵�܂��B
	adr : ��]�p�����[�^�̃p�^�[���l�[���f�[�^�e�[�u���̂u�q�`�l��擪�A�h���X

void slRparaInitSet(ROTSCROLL *ptr)
  �@�\ : ��]�X�N���[���Ɏg�p�����]�p�����[�^�e�[�u���i�T�C�Y�F�U�O�g�j���u�q�`�l
	�̈撆�Ɋi�[���܂��B�p�����[�^�a�́A�p�����[�^�`�{�Q�O�g�̈ʒu����i�[�����
	�̂ŁA�p�����[�^�`�E�a�ŁA���킹�Ăd�O�g�K�v�ƂȂ�܂��B
	�{�֐����g�p���Ȃ��ꍇ�̃f�t�H���g�̊i�[�A�h���X�� 25E3FF00H �ƂȂ��Ă��܂��B
	ptr : ��]�p�����[�^�e�[�u�����i�[����u�q�`�l�擪�A�h���X

void slCurRpara(Uint16 flag)
  �@�\ : ��]�p�����[�^�`�E�a�̂����A���삷��p�����[�^���w�肵�܂��B
	flag : ��]�p�����[�^
		RA : ��]�p�����[�^�`
		RB : ��]�p�����[�^�a

void slRparaMode(Uint16 mode)
  �@�\ : ��]�p�����[�^�`�E�a�̎g�p���[�h���w�肵�܂��B
	mode : ��]�p�����[�^���[�h
		RA	 : ��]�p�����[�^�`�̂ݎg�p
		RB	 : ��]�p�����[�^�a�̂ݎg�p
		K_CHANGE : ��]�p�����[�^�`�̌W���f�[�^�ɂ���ĉ摜�ؑւ�
		W_CHANGE : ��]�p�����[�^�E�B���h�E�ŉ摜�ؑւ�

void slMakeKtable(void *adr)
  �@�\ : �R������]�Ŏg�p����W���̃e�[�u�����쐬���܂��B
	�Q�v�n�q�c�T�C�Y�̃f�[�^���P�o���N���쐬���܂��B�{�֐����g�p����ꍇ�ɂ́A
	�֐� "slKtableRA�EB(K_2WORD | K_ON | K_DOT | K_FIX)" �𕹗p���ĉ������B
	adr : �W���e�[�u���̂u�q�`�l��A�h���X

void slKtableRA(void *adr , Uint16 mode)
void slKtableRB(void *adr , Uint16 mode)
  �@�\ : �W���e�[�u���̃A�h���X�����W�X�^�ɐݒ肵�A�����ɁA�W���e�[�u���̎g�p�@�A
	�\�����w�肵�܂��B
	adr  : �W���e�[�u���̂u�q�`�l��A�h���X
	mode : �W���e�[�u���R���g���[�����[�h
		K_OFF | K_ON				: �e�[�u���g�p
		K_2WORD | K_1WORD			: �W���f�[�^�T�C�Y
		K_MODE0 | K_MODE1 | K_MODE2 | K_MODE3	: �W�����[�h
		K_LINECOL				: ���C���J���[
		K_DOT | K_LINE				: �ό`�P��
		K_FIX					: �W���Œ�
	    �g�p����@�\�ɉ����ď�L�̒l�� "|" �łȂ��Ŏw�肵�ĉ������B

void slScrPosNbg0(FIXED x , FIXED y)
void slScrPosNbg1(FIXED x , FIXED y)
void slScrPosNbg2(FIXED x , FIXED y)
void slScrPosNbg3(FIXED x , FIXED y)
  �@�\ : ���ꂼ��̃m�[�}���X�N���[���ʂ̔z�u���W��ݒ肵�܂��B
	x : �m�[�}���X�N���[���z�u���W�̂w�����i�X�N���[�����W�n�j
	y : �m�[�}���X�N���[���z�u���W�̂x�����i�X�N���[�����W�n�j

void slLookR(FIXED x , FIXED y)
  �@�\ : ��]�X�N���[���ʂ̔z�u���W��ݒ肵�܂��B
	x : ��]�X�N���[���z�u���W�̂w�����i�X�N���[�����W�n�j
	y : ��]�X�N���[���z�u���W�̂x�����i�X�N���[�����W�n�j

void slDispCenterR(FIXED x , FIXED y)
  �@�\ : ��]�X�N���[���ʂ̉�]���S���W��ݒ肵�܂��B
	x : ��]�X�N���[����]���S���W�̂w�����i��ʍ��W�n�j
	y : ��]�X�N���[����]���S���W�̂x�����i��ʍ��W�n�j

void slZoomNbg0(FIXED x , FIXED y)
void slZoomNbg1(FIXED x , FIXED y)
  �@�\ : �m�[�}���X�N���[���ʂ̂����A�g�k�\�� "NBG0,1" �̊g�k�����w�肵�܂��B
	x : �m�[�}���X�N���[���̂w�������ɑ΂���g�k���̋t���i�Q�{�Ȃ�P�^�Q�j
	y : �m�[�}���X�N���[���̂x�������ɑ΂���g�k���̋t���i�Q�{�Ȃ�P�^�Q�j

void slZoomR(FIXED x , FIXED y)
  �@�\ : ��]�X�N���[���ʂ̊g�k����ݒ肵�A�J�����g��]�p�����[�^�Ɍ��݂̏�Ԃ�ۑ�
	���܂��B
	x : ��]�X�N���[���̂w�������ɑ΂���g�k���̋t���i�Q�{�Ȃ�P�^�Q�j
	y : ��]�X�N���[���̂x�������ɑ΂���g�k���̋t���i�Q�{�Ȃ�P�^�Q�j

void slScrScaleNbg0(FIXED x , FIXED y)
void slScrScaleNbg1(FIXED x , FIXED y)
  �@�\ : �m�[�}���X�N���[���ʂ̂����A�g�k�\�� "NBG0,1" �̊g�k�����w�肵�܂��B
	x : �m�[�}���X�N���[���̂w�������ɑ΂���g�k���i�Q�{�Ȃ�Q�j
	y : �m�[�}���X�N���[���̂x�������ɑ΂���g�k���i�Q�{�Ȃ�Q�j

void slScrScaleR(FIXED x , FIXED y)
  �@�\ : ��]�X�N���[���ʂ̊g�k����ݒ肵�A�J�����g��]�p�����[�^�Ɍ��݂̏�Ԃ�ۑ�
	���܂��B
	x : ��]�X�N���[���̂w�������ɑ΂���g�k���i�Q�{�Ȃ�Q�j
	y : ��]�X�N���[���̂x�������ɑ΂���g�k���i�Q�{�Ȃ�Q�j

void slScrAscSet(void *adr)
  �@�\ : �f�t�H���g�̃A�X�L�[�����i�Q�T�U�F���[�h�p�E�P�Q�W�Z���j���w�肳�ꂽ�A�h���X
	�ɃZ�b�g���܂��B
	adr : �A�X�L�[���Z�b�g����u�q�`�l��A�h���X

void slScrMatConv(void)
  �@�\ : �J�����g�}�g���N�X���X�N���[���`���̃}�g���N�X�ɕϊ����܂��B
	�{�֐����g�p����ƃJ�����g�}�g���N�X�������������܂��B
	���̂��ƁAslScrMatSet() �֐������s���邱�Ƃɂ���]�X�N���[���̃p�����[�^��
	���f����܂��B

void slSpriteWinMode(Uint16 flag)
  �@�\ : �X�v���C�g�E�B���h�E�̗L���E�������w�肵�܂��B
	flag :  ON  : �X�v���C�g�E�B���h�E�L��
		OFF : �X�v���C�g�E�B���h�E����

void slSpriteCCalcCond((Uint16)Condition)
  �@�\ : �X�v���C�g�J���[���Z�����̎w������܂��B
    Condition �� CC_pr_CN , CC_PR_CN , CC_PR_cn , CC_MSB �̂����ꂩ���w�肵�܂��B
	CC_pr_CN : �v���C�I���e�B���J���[���Z�����i���o�[�Ɠ������������ꍇ��
		   �J���[���Z�����܂��B (Priority <= ConditionNumber)
	CC_PR_CN : �v���C�I���e�B���J���[���Z�����i���o�[�Ɠ����ꍇ�ɃJ���[��
		   �Z�����܂��B (Priority == ConditionNumber)
	CC_PR_cn : �v���C�I���e�B���J���[���Z�����i���o�[�Ɠ������傫���ꍇ��
		   �J���[���Z�����܂��B (Priority >= ConditionNumber)
	CC_MSB :   �J���[�f�[�^�̍ŏ�ʃr�b�g���P�̏ꍇ�ɃJ���[���Z�����܂��B

void slSpriteCCalcNum((Uint16)num)
  �@�\ : �X�v���C�g�J���[���Z�����i���o�[�̎w������܂��B
    num �� �O����V�͈̔͂Ŏw�肵�܂��B

void slSpriteColMode((Uint16)mode)
  �@�\ : �X�v���C�g�̃J���[���[�h�̎w������܂��B
    mode �� SPR_PAL , SPR_PAL_RGB �̂����ꂩ���w�肵�܂��B
	SPR_PAL : �X�v���C�g�̃f�[�^���p���b�g�f�[�^�`���݂̂̏ꍇ�Ɏw�肵�܂��B
	SPR_PAL_RGB : �X�v���C�g�̃f�[�^���p���b�g�`���Ƃq�f�a�`�������݂���ꍇ
		�Ɏw�肵�܂��B

void slSpriteType((Uint16)type)
  �@�\ : �X�v���C�g�f�[�^�̃^�C�v���w�肵�܂��B
    type �� �O����P�T�Ŏw�肵�܂��B
    �O����V�͒�𑜓x(�R�Q�O�܂��͂R�T�Q)�A�W����P�T�͍��𑜓x�p(�U�S�O�܂���
    �V�O�S)�ɂȂ�܂��B

void slScrMosaicOn((Uint16)screen)
  �@�\ : ���U�C�N�����̑ΏۂƂȂ�X�N���[���ʂ��w�肵�܂��B
    �w��� slScrDisp �Ɠ��l�ł��B

void slScrMosSize((Uint16)Hsize , (Uint16)Vsize)
  �@�\ : ���U�C�N����������ꍇ�̃T�C�Y���w�肵�܂��B
    �w��ł���傫���͐����A���������Ƃ��P����P�U�h�b�g�ł��B

void slScrWindow0((Uint16)Left , (Uint16)Top , (Uint16)Right , (Uint16)Bottom)
  �@�\ : �X�N���[���p��`�E�B���h�E�O�̗̈��ݒ肵�܂��B
	 ���C���E�B���h�E���w�肳��Ă���ꍇ�A���C���E�B���h�E�͖����ɂȂ�܂��B

void slScrWindow1((Uint16)Left , (Uint16)Top , (Uint16)Right , (Uint16)Bottom)
  �@�\ : �X�N���[���p��`�E�B���h�E�P�̗̈��ݒ肵�܂��B
	 ���C���E�B���h�E���w�肳��Ă���ꍇ�A���C���E�B���h�E�͖����ɂȂ�܂��B

void slScrLineWindow0((void *)addr)
  �@�\ : ���C���E�B���h�E�f�[�^�e�[�u���O�̃A�h���X���w�肵�܂��B
    ���C���E�B���h�E���g�p����ꍇ�͍ŏ�ʃr�b�g���P�ɂ��ĉ������B
    �g�p���Ȃ��ꍇ�ɂ͂m�t�k�k(�O)���w�肵�܂��B
	��)���C���E�B���h�E���g�p���鎞
	    �A�h���X���O���Q�T�d�R�e�O�O�O
		slScrLineWindow0((void *)(0x25E3F000 | 0x80000000)) ;
	    �A�h���X���|�C���^�ϐ��Ŏ����Ă���ꍇ
		Sint16 *lnptr ;
		lnptr = (Sint16 *)0x25e3f000 ;
		slScrLineWindow((void *)(lnptr + 0x40000000)) ;
			(���Z����l�� �Q�{<sizeof(Sint16)>����邽��)
	   ���C���E�B���h�E���g�p���Ȃ��Ȃ�����
		slScrLineWindow0((void *)NULL) ;
  ���� : ���C���E�B���h�E��ݒ肵���ꍇ�ł��A��`�E�B���h�E�̃f�[�^�͗L���̂܂�
	 �ɂȂ��Ă��܂�(�n�[�h�E�G�A�d�l)�̂ŁA�����̗̈悪�E�B���h�E�O�͈̔͂�
	 �Ȃ�܂��B
	 ��`�E�B���h�E�̃f�[�^�𖳌��ɂ������ꍇ�ɂ́A�E�B���h�E�̏㉺�y�сA��
	 �E�̈ʒu�֌W�ɖ����̂���悤�ȃf�[�^���Z�b�g���Ă��������B
	 ��)
		slScrWindow0(10,0,0,10) ; /* ���E�̈ʒu�֌W���������� */
			      | | |  |__ Bottom
			      | | |_____ Right
			      | |_______ Top
			      |_________ Left
		slScrWindow0(10,10,0,0) ; /* �㉺�A���E�̈ʒu�֌W���������� */

void slScrLineWindow1((void *)addr)
  �@�\ : ���C���E�B���h�E�f�[�^�e�[�u���P�̃A�h���X���w�肵�܂��B

void slScrWindowMode((Uint16)screen , (Uint16)mode)
  �@�\ : �e�X�N���[���ʂ̃E�B���h�E�̎g�p���[�h��ݒ肵�܂��B
	screen : scnNBG0 , scnNBG1 , scnNBG2 , scnNBG3 , scnRBG0 ,
		 scnSPR , scnROT , scnCCAL �̂����ꂩ���w�肵�܂��B
	mode : �ȉ��̗v�f����I�����Ďw�肵�܂��B
		[win_OR  | win_AND]	�����̃E�B���h�E�ɑ΂������
		[win0_IN | win0_OUT]
		[win1_IN | win1_OUT]	..._IN �� �E�B���h�E�̓�����\������
		[spw_IN  | spw_OUT]	..._OUT �� �E�B���h�E�̊O����\������

  ��)
    �m�a�f�O���E�B���h�E�O�̓����̂݁A
    �m�a�f�P���E�B���h�E�P�̊O���̂݁A
    �m�a�f�Q���E�B���h�E�O�ƃE�B���h�E�P�̓����A
    �m�a�f�R���E�B���h�E�O�ƃE�B���h�E�P�̏d�Ȃ��������̓����݂̂Ƃ����ꍇ
	slScrWindowMode(scnNBG0 , win0_IN) ;
	slScrWindowMode(scnNBG1 , win1_OUT) ;
	slScrWindowMode(scnNBG2 , win_OR | win0_IN | win1_IN) ;
	slScrWindowMode(scnNBG3 , win_AND | win0_IN | win1_IN) ;

void slBackColTable(void *tbl)
  �@�\ : �o�b�N��ʂ̃J���[�e�[�u�����Z�b�g���A���X�^�[�P�ʂŃJ���[��؂�ւ�
	 �郂�[�h�ɐݒ肵�܂��B

void slColRate(Uint16 scrn , Uint16 rate)
  �@�\ : �e��ʂ̃J���[���Z�������w�肵�܂��B
	scrn : scnNBG0 , scnNBG1 , scnNBG2 , scnNBG3 , scnRBG0 , scnLNCL , scnBACK
	�̂����ꂩ���w�肵�܂��B
	rate : CLRate31_1 ~ CLRate0_32 �Ŏw�肵�܂��B
		rate		 Top Screen : Second Screen
		 CLRate31_1		�R�P:�P
		 CLRate30_2		�R�O:�Q
			    �E�E�E
		 CLRate1_31		  �P:�R�P
		 CLRate0_32		  �O:�R�Q

void slColorCalcMode(Uint16 mode)
  �@�\ : slColorCalc �֐��̃��[�h�ݒ蕔���݂̂��s���֐��AslColorCalcOn �֐��ƕ��p����

void slPriority(Sint16 scrn , Uint16 num)
  �@�\ : �e��ʂ̃v���C�I���e�B�i���o�[��ݒ肵�܂��B
	scrn : scnNBG0 , scbNBG1 , scnNBG2 , scnNBG3 , scnRBG0 , scnSPR0 , scnSPR1 ,
	scnSPR2 , scnSPR3 , scbSPR4 , scnSPR5 , scnSPR6 , scnSPR7
	num : �O�`�V�̒l���w�肵�܂�(�������A�O���w�肷��ƕ\������܂���)�B

void slZoomMode(Uint16 scrn , Uint16 mode)
  �@�\ : �m�a�f�O�C�m�a�f�P���ǂ��܂ŏk�����邩���w�肵�܂��B
	scrn : scnNBG0 , scnNBG1 �̂����ꂩ���w�肵�܂��B
	mode : ZOOM_1 , ZOOM_HALF , ZOOM_QUARTER �̂����ꂩ���w�肵�܂��B

void slShadowOn(Uint16 scrn)
  �@�\ : �V���h�E�@�\���ǂ̃X�N���[���ʂɑ΂��ċ@�\���邩���w�肵�܂��B
	scrn : NBG0ON , NBG1ON , NBG2ON , NBG3ON , RBG0ON , BACKON

void slTpShadowMode(Uint16 mode)
  �@�\ : �����V���h�E�̃X�v���C�g��L���ɂ��邩�ǂ������w�肵�܂��B
	mode : ON , OFF ���w�肵�܂��B

void slOverPatRA(Uint16 pname)
void slOverPatRB(Uint16 pname)
  �@�\ : ��]�X�N���[���̃}�b�v�O�L�����N�^�̃p�^�[���l�[�����Z�b�g���܂��B

void sl16MapRA(Uint8 map[16])
void sl16MapRB(Uint8 map[16])
  �@�\ : ��]�X�N���[���̃}�b�v�P�U�y�[�W�����Z�b�g���܂��B
	 �����Ƃ��ēn���z��ɂP�U�y�[�W���̃}�b�v�i���o�[���Z�b�g���Ă����܂��B
	 (�y�[�W�i���o�[�ɂ͂u�q�`�l�̐擪���� �O���W�O�O �P�ʂŐ��������̂��
	  ��Ă�������)

	 �`�a�b�c
	 �d�e�f�g
	 �h�i�j�k
	 �l�m�n�o

	 ��L�̂S���S�y�[�W�����`�a�b ... �m�n�o�̏��ɔz��ɃZ�b�g���Ă����܂��B

void slGradationOn(Uint16 scrn)
  �@�\ : �{�J�V�@�\��L���ɂ��A��p�����ʂ��w�肵�܂��B
	scrn : grdNBG0 , grdNBG1 , grdNBG2 , grdNBG3 , grdRBG0 , grdSPR ��
	�����ꂩ�̂ݎw��B
�y���Ӂz�{�J�V�@�\�́A�J���[�q�`�l���[�h���O�̏ꍇ�ɂ����g���܂���B
	�܂��A�{�J�V�@�\�̓J���[���Z�ƕ��p���Ȃ��Ƌ@�\���܂���̂Œ��ӂ��Ă��������B

void slGradationOff(void)
  �@�\ : �{�J�V�@�\�𖳌��ɂ��܂��B

void slColRAMOffsetNbg0(Uint16 offset)
  �@�\ : �e��ʂŎg�p����J���[�q�`�l�̐擪�A�h���X���Q�T�U�F�P�ʂŃI�t�Z�b�g��
	�|���܂��B
	�I�t�Z�b�g�͂O����V(�������A�J���[�q�`�l���[�h���O�܂��͂Q�̏ꍇ�ɂ͂R
	�܂�)�Ŏw�肵�܂��B

void slColRAMOffsetNbg1(Uint16 offset)
void slColRAMOffsetNbg2(Uint16 offset)
void slColRAMOffsetNbg3(Uint16 offset)
void slColRAMOffsetRbg0(Uint16 offset)
void slColRAMOffsetSpr(Uint16 offset)
	����

void slBitMapNbg0(Uint16 col_type , Uint16 bmsize , void *bmadr)
  �@�\ : �m�a�f�O��ʂ��r�b�g�}�b�v���[�h�ɂ��A�r�b�g�}�b�v�̃T�C�Y��ݒ肵�܂��B
	col_type : COL_TYPE_16 , COL_TYPE_256 , COL_TYPE_2048 , COL_TYPE_32768
		 COL_TYPE_1M �̂����ꂩ
	bmsize : BM_512x256 , BM_512x512 , BM_1024x256 , BM_1024x512 �̂����ꂩ
	bmadr  : �r�b�g�}�b�v�f�[�^���Z�b�g����u-�q�`�l�A�h���X���Z�b�g���܂��B
		 ����͂O���Q�O�O�O�O�o�E���_���̃A�h���X�łȂ���΂Ȃ�܂���B

void slBitMapNbg1(Uint16 col_type , Uint16 bmsize , void *bmadr)
	col_type : COL_TYPE_16 , COL_TYPE_256 , COL_TYPE_2048 , COL_TYPE_32768
		 �̂����ꂩ
	bmsize : BM_512x256 , BM_512x512 , BM_1024x256 , BM_1024x512 �̂����ꂩ
	bmadr  : �r�b�g�}�b�v�f�[�^���Z�b�g����u-�q�`�l�A�h���X���Z�b�g���܂��B
		 ����͂O���Q�O�O�O�O�o�E���_���̃A�h���X�łȂ���΂Ȃ�܂���B

void slBitMapRbg0(Uint16 col_type , Uint16 bmsize , void *bmadr)
  �@�\ : �q�a�f�O��ʂ��r�b�g�}�b�v���[�h�ɂ��A�r�b�g�}�b�v�̃T�C�Y��ݒ肵�܂��B
	col_type : COL_TYPE_16 , COL_TYPE_256 , COL_TYPE_2048 , COL_TYPE_32768
		 COL_TYPE_1M �̂����ꂩ
	bmsize : BM_512x256 , BM_512x512 �̂����ꂩ���w�肵�܂��B
	bmadr  : �r�b�g�}�b�v�f�[�^���Z�b�g����u-�q�`�l�A�h���X���Z�b�g���܂��B
		 ����͂O���Q�O�O�O�O�o�E���_���̃A�h���X�łȂ���΂Ȃ�܂���B

void slBMPaletteNbg0(Uint16 pal)
void slBMPaletteNbg1(Uint16 pal)
void slBMPaletteRbg0(Uint16 pal)
  �@�\ : �r�b�g�}�b�v��ʂ�\������ꍇ�̃p���b�g�i���o�[���Z�b�g���܂��B
	Manual VDP2 P.112 �Q��

void slSpecialPrioModeNbg0(Uint16 mode)
void slSpecialPrioModeNbg1(Uint16 mode)
void slSpecialPrioModeNbg2(Uint16 mode)
void slSpecialPrioModeNbg3(Uint16 mode)
void slSpecialPrioModeRbg0(Uint16 mode)
  �@�\ : ����v���C�I���e�B���g�p����ꍇ�̃v���C�I���e�B���胂�[�h��ݒ肵�܂��B
	mode : spPRI_Scrn , spPRI_Char , spPRI_Dot �̂����ꂩ���w�肵�܂��B

void slSpecialCCalcModeNbg0(Uint16 mode)
void slSpecialCCalcModeNbg1(Uint16 mode)
void slSpecialCCalcModeNbg2(Uint16 mode)
void slSpecialCCalcModeNbg3(Uint16 mode)
void slSpecialCCalcModeRbg0(Uint16 mode)
  �@�\ : ����J���[���Z���g�p����ꍇ�̉��Z��L���ɂ��邽�߂̃��[�h��ݒ肵�܂��B
	mode : spCCAL_Scrn , spCCAL_Char , spCCAL_Dot , spCCAL_MSB �̂����ꂩ��
	�w�肵�܂��B

void slSpecialFuncCodeA(Uint16 flag)
void slSpecialFuncCodeB(Uint16 flag)
  �@�\ : ����@�\��L���ɂ���J���[�R�[�h(���ʂS�r�b�g)���w�肵�܂��B
	code : sfCOL_01 , sfCOL_23 , sfCOL_45 , sfCOL_67 , sfCOL_89 , sfCOL_ab ,
	    sfCOL_cd , sfCOL_ef �� '|' �łȂ��Ŏw�肵�܂��B

void slSpecialFuncSelectB(Uint16 scrn)
  �@�\ : ����@�\�R�[�h�a���g�p����X�N���[����ʂ��w�肵�܂��B
	scrn : NBGON , NBG1ON , NBG2ON , NBG3ON , RBG0ON

void slRparaReadCtrlRA(Uint16 flag)
void slRparaReadCtrlRB(Uint16 flag)
  �@�\ : ��]�p�����[�^�̓� �w�����A�x�����A�j�`�������e���C�����Ƃɓǂݒ�����
	 �ǂ������w�肵�܂��B
	flag : LnRd_Xst , LnRd_Yst , LnRd_KAst �� '|' �łȂ��Ŏw�肵�܂��B

void slSpecialPrioBitN01(Uint16 scrn , Uint16 flag)
  �@�\ : �ʂ��ƂɎw�肷�����v���C�I���e�B�r�b�g���Z�b�g���܂��B
	 �Z�����[�h�A�r�b�g�}�b�v���[�h�p�̗����̃��W�X�^���Z�b�g���܂��B
	scrn : scrnNBG0 , scrnNBG1 �̂����ꂩ
	flag : �O �܂��� �P

void slSpecialPrioBitScr(Uint16 scrn , Uint16 flag)
  �@�\ : �ʂ��ƂɎw�肷�����v���C�I���e�B�r�b�g���Z�b�g���܂��B
	scrn : scrnNBG2 , scrnNBG3 �̂����ꂩ
	flag : �O �܂��� �P

void slSpecialPrioBitRbg0(Uint16 flag)
  �@�\ : �ʂ��ƂɎw�肷�����v���C�I���e�B�r�b�g���Z�b�g���܂��B
	 �Z�����[�h�A�r�b�g�}�b�v���[�h�p�̗����̃��W�X�^���Z�b�g���܂��B
	flag : �O �܂��� �P

void slSpecialCCalcBitN01(Uint16 scrn , Uint16 flag)
  �@�\ : �ʂ��ƂɎw�肷�����J���[���Z�r�b�g���Z�b�g���܂��B
	 �Z�����[�h�A�r�b�g�}�b�v���[�h�p�̗����̃��W�X�^���Z�b�g���܂��B
	scrn : scrnNBG0 , scrnNBG1 �̂����ꂩ
	flag : �O �܂��� �P

void slSpecialCCalcBitScr(Uint16 scrn , Uint16 flag)
  �@�\ : �ʂ��ƂɎw�肷�����J���[���Z�r�b�g���Z�b�g���܂��B
	scrn : scrnNBG2 , scrnNBG3 �̂����ꂩ
	flag : �O �܂��� �P

void slSpecialCCalcBitRbg0(Uint16 flag)
  �@�\ : �ʂ��ƂɎw�肷�����J���[���Z�r�b�g���Z�b�g���܂��B
	 �Z�����[�h�A�r�b�g�}�b�v���[�h�p�̗����̃��W�X�^���Z�b�g���܂��B
	flag : �O �܂��� �P

void slLineScrollMode(Uint16 scrn , Uint16 mode)
  �@�\ : �X�N���[���ʂ̃��C���X�N���[�����[�h��ݒ肵�܂��B
	scrn : scrnNBG0 , scrnNBG1 �̂����ꂩ
	mode :
	    lineSZ1 | lineSZ2 | lineSZ4 | lineSZ8	: ���C���̕�
	    lineZoom					: ���������̃X�P�[�����O
	    lineVScroll					: ���������̃X�N���[��
	    lineHScroll					: ���������̃X�N���[��
	    VCellScroll					: �c�Z���X�N���[��
	�� �g�p���������[�h�� '|' �łȂ��Ŏw��B

void slLineScrollTable0(void *addr)
  �@�\ : ���C���X�N���[���f�[�^�̃e�[�u�����w�肵�܂��B
	addr : ���C���X�N���[���f�[�^���Z�b�g�����u�q�`�l�̃A�h���X

void slLineScrollTable1(void *addr)
  �@�\ : ����

void slVCellTable(void *addr)
  �@�\ : �c�Z���X�N���[���f�[�^�̃e�[�u�����w�肵�܂��B
	addr : �c�Z���X�N���[���f�[�^���Z�b�g�����u�q�`�l�̃A�h���X
	�c�Z���X�N���[�����g�p����ꍇ�A�u�q�`�l�A�N�Z�X�T�C�N���̐ݒ肪�K�v�ƂȂ�܂��B
	�֐� "slScrCycleSet","slScrAutoDisp" �ɂ���ăZ�b�g���ĉ������B
	�c�Z���X�N���[���̓n�C���]�����[�V�������[�h�ł͎g�p�ł��܂���B
	�܂��A��]�X�N���[���Ŏg�p����f�[�^(�W���A�b�f��)�Ɠ����o���N�ɂ��邱�Ƃ�
	������܂���B

void slVRAMMode(Uint16 mode)
  �@�\ : �u-�q�`�l�̕������@��ݒ肵�܂��B
	mode : Div_A , Div_B �𕪊�������̂����w�肵�܂��B
	��������߂����ꍇ�ɂ͂m�t�k�k���w�肵�܂��B

void slColOffsetScrn(Uint16 Ascrn , Uint16 Bscrn)
  �@�\ : �J���[�I�t�Z�b�g�̉e������X�N���[�����p�����[�^�`�ɑ΂���ʂƁA�p�����[�^
	 �a�ɑ΂���ʂƂ�ʁX�Ɏw�肵�܂��B
	 (���̊֐��� slColOffsetOn() �� slColOffsetBUse() �Ƃ����킹�����̂ł�)
	Ascrn , Bscrn : slScrDisp �Ɠ��l�Ɏw�肵�܂��B

void slScrMoveNbg0(FIXED mvx , FIXED mvy)
  �@�\ : �X�N���[���̕\���ʒu��O�̈ʒu����̈ړ��ʂŎw�肵�܂��B
	 (���̊֐��� slScrPosNbg0() �Ŏw�肳�ꂽ�\���ʒu�ɉ��Z���Ă����܂�)
	 ���݂̕\���ʒu�̓V�X�e���ϐ� Nbg0_PosX , Nbg0_PosY ���Q�Ƃ��Ă��������B
	 slScrMoveNbg1 , slScrMoveNbg2 , slScrMoveNbg3 �����l�ɗp�ӂ���Ă��܂��B

void setASC_1to8(Uint8 *src, void *dst , Uint32 cell , Uint8 pal)
void setASC_4to8(Uint8 *src, void *dst , Uint32 cell , uint8 pal)
  �@�\ : �P�s�N�Z�����P(�S)�r�b�g�Ɉ��k���ꂽ�`�r�b�h�h�L�����N�^�̃f�[�^���X�N���[
	 ���̂Q�T�U�F���[�h�p�̃L�����N�^�f�[�^�ɓW�J���܂��B
	 �e�s�N�Z���� �p���b�g�ԍ����O�܂��͂P�ɂȂ�܂��B
	 cell �ɂ� �W�J����L�����N�^�����w�肵�܂��B
	 pal �ɂ� �W�J����L�����N�^�̃x�[�X�p���b�g�i���o�[���w�肵�܂��B

void setASC_1to4(Uint8 *src, void *dst , Uint32 cell , Uint8 pal , Sint32 skip)
  �@�\ : �P�s�N�Z�����P�r�b�g�Ɉ��k���ꂽ�`�r�b�h�h�L�����N�^�̃f�[�^���X�N���[
	 ���̂P�U�F���[�h�p�̃L�����N�^�f�[�^�ɓW�J���܂��B
	 �e�s�N�Z���� �p���b�g�ԍ����O�܂��͂P�ɂȂ�܂��B
	 cell �ɂ� �W�J����L�����N�^�����w�肵�܂��B
	 pal �ɂ� �W�J����L�����N�^�̃x�[�X�p���b�g�i���o�[���w�肵�܂��B
	 skip �ɂ� �P�Z�����̓W�J�̌�A���o�C�g���X�L�b�v���邩���w�肵�܂��B
	 (slPrint ���̂Q�T�U�F���[�h��p�̊֐����P�U�F���[�h�Ŏg�p����ꍇ�ɂ�
	  CG_Size/2 ���w�肵�܂�)

Uint8 SGL_ASCII_CG[]
  �r�f�k ���f�t�H���g�̃L�����N�^�f�[�^�Ƃ��Ď����Ă��� �`�r�b�h�h�L�����N�^��
  �f�[�^�ŁA��L�� setASC_1to8() �֐��ɂ��W�J���Ă��܂��B
  �L�����N�^���͂P�Q�W�ł��B

