******************************************************************************System Initialization Functions************************************************************************************************************************************************************void slInitSystem(Uint16 TVMode, TEXTURE *txtbl, Sint8 Count)******************************************************************************Function:Initializes the entire system, sets texture definition tables, and sets the frame change count.Note:Since the system clock speed is changed depending on screen resolution (TV mode), there are cases when VRAM or other memory contents may be corrupted. This function must be executed only once immediately after system startup.Note 2:When a negative value is specified for the frame change count, VDP1 is checked to see if it has completed its writes to the frame buffer after the change count has elapsed (for Ð2, 2 V-blanks).  The switch is performed after the writes are completed. Note that when the interlace mode is specified, this setting is ignored.* The following parameters are set when slInitSystem() is executed:- Window size and vanishing point position for sprites and polygons:    Left:      0    Top:       0    Right:     ScreenXSize - 1    Bottom:    ScreenYSize - 1    Zlimit:    0x7fff    CenterX:   ScreenXSize / 2    CenterY:   ScreenYSize / 2    PersAngle: 90 ¡    ZdspLevel: 1    ClipSizeX: 320    ClipSizeY: 512Scroll-related    Displayed scroll screens:    NBG0, NBG1, RBG0    Scroll priority:             NBG0 NBG1 NBG2 NBG3 RBG0                                 7    3    2    1    4    Sprite 0 (polygon) priority: 6    Other sprites:               5    Scroll screen color depth:   256-color mode for each screen.    Color RAM mode:              1 (2048 colors out of 32768 colors)    VRAM partitioning:           Split into banks A and B    Character data:              NBG0, NBG1 25E60000Ð                                 RBG0 25E00000Ð    Character size:              8 x 8 pixels for each screen    Pattern name data:           NBG0 25E76000Ð                                 NBG1 25E78000Ð                                 RBG0 PA 25E40000Ð                                 RBG0 PB 25E50000Ð    Pattern name size:           NBG0 1 word                                 10 bit name with reversed image per cell                                 NBG1 and RBG0 1 word                                 12 bit pattern name with no reversed image    Plane size:                  64 x 64 cells for each screen    Background screen color:     Sets black at 25E3FFFE (R = 0, G = 0, B = 0)    Rotation parameters:         From 25E3FF00    Sprite data:                 Combination of palette and RGB format    Do not use special effect functions such as mosaic or color offset.******************************************************************************Bool slSetTVMode(Uint16 TVMode)******************************************************************************Function:Sets the system to the specified video mode.Returns FALSE when the system clock is switched. There are two system clock settings that are used depending on the horizontal resolution required.    320, 640 pixels <--> 352, 704 pixels    (26.84 MHz)          (28.64 MHz)      <NTSC>    (26.66 MHz)          (28.44 MHz)      <PAL>Although it is possible to switch from the 320 pixel mode to the 640 pixel mode, an error will occur if an attempt is made to switch to the 352 pixel mode. In addition, the interlace mode is used when the vertical resolution is set at 448 or 480 lines. Because of this, 2 V-blanks are equivalent to 1 frame. Accordingly, the frame switch count is adjusted to multiples of 2. To run your code within 1 interrupt under the interlace mode, set (Sint8)SynchConst to 1, and execute the slInitSynch() function after executing slSetTVMode.Sprite window initialization (entire screen), perspective changes (90¡ screen angle), and sprite data type changes are performed based on the resolution specified with this function.Only bit 3 is changed out of the 4 sprite data type bits.Note:The following settings are not made with this function. Set the following as required after executing this function.    * VDP2 cycle mode    * Scroll screen window    * Sprite display forward boundary value (ZdspLevel)In addition, garbage may appear on screen, so execute the slTVOff() function as necessary.******************************************************************************Bool slSetScrTVMode(Uint16 TVMode)******************************************************************************Function:Sets the video mode for scroll control (VDP2).As with slSetTVMode, FALSE is returned when the system clock is switched.Note:When sprites are displayed in interlace mode, make sure the scroll screens are also displayed in interlace mode.This is because EvenFrame and OddFrame are obtained from the VDP2 status.******************************************************************************Bool slSetSprTVMode(Uint16 TVMode)******************************************************************************Function:Sets the video mode sprite control (VDP1).As with slSetTVMode, FALSE is returned when the system clock is switched.In addition, the frame change counter is adjusted to display 1 frame with 2 interrupts when the interlace mode is used. Sprite window initialization, perspective setting (90¡ screen angle), and sprite data type changes are performed.Only bit 3 is changed out of the 4 sprite data type bits.******************************************************************************Bool slDynamicFrame(Uint16 flag)******************************************************************************Function:Switches between the fixed frame change and VDP1 draw end wait (dynamic) frame change.  Specify ON or OFF to the flag.  FALSE is returned in interlace mode.