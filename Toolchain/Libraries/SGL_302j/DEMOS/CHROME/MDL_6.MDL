/**********************************************
 *	Copyright(C)SEGA 1995-1996/SYSTEM R&D DEPT
 *	test.mdl
 *	OBJECTS  = 1
 *	VERTICES = 38
 *	POLYGONS = 42
 *	GOUR_REAL= 42
 **********************************************/

#define	GRreal(n)	(0x1c38+(n))
GOURAUDTBL	grreal_test[] = {
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
	{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
};

/*
 *	XPDATA : test
 *	VERTICES = 38
 *	POLYGONS = 42
 */

POINT	point_test[] = {
	POStoFIXED(  0.0000, 13.5000,  0.0000),
	POStoFIXED(  0.0000,-13.5000,  0.0000),
	POStoFIXED(  3.5000, 13.5000,  0.0000),
	POStoFIXED(  7.0000, 13.5000,  0.0000),
	POStoFIXED(  7.0000,  4.5000,  0.0000),
	POStoFIXED(  7.0000, -4.5000,  0.0000),
	POStoFIXED(  7.0000,-13.5000,  0.0000),
	POStoFIXED(  3.5000,-13.5000,  0.0000),
	POStoFIXED(  1.7500, 13.5000,  3.0311),
	POStoFIXED(  3.5000, 13.5000,  6.0622),
	POStoFIXED(  3.5000,  4.5000,  6.0622),
	POStoFIXED(  3.5000, -4.5000,  6.0622),
	POStoFIXED(  3.5000,-13.5000,  6.0622),
	POStoFIXED(  1.7500,-13.5000,  3.0311),
	POStoFIXED( -1.7500, 13.5000,  3.0311),
	POStoFIXED( -3.5000, 13.5000,  6.0622),
	POStoFIXED( -3.5000,  4.5000,  6.0622),
	POStoFIXED( -3.5000, -4.5000,  6.0622),
	POStoFIXED( -3.5000,-13.5000,  6.0622),
	POStoFIXED( -1.7500,-13.5000,  3.0311),
	POStoFIXED( -3.5000, 13.5000, -0.0000),
	POStoFIXED( -7.0000, 13.5000, -0.0000),
	POStoFIXED( -7.0000,  4.5000, -0.0000),
	POStoFIXED( -7.0000, -4.5000, -0.0000),
	POStoFIXED( -7.0000,-13.5000, -0.0000),
	POStoFIXED( -3.5000,-13.5000, -0.0000),
	POStoFIXED( -1.7500, 13.5000, -3.0311),
	POStoFIXED( -3.5000, 13.5000, -6.0622),
	POStoFIXED( -3.5000,  4.5000, -6.0622),
	POStoFIXED( -3.5000, -4.5000, -6.0622),
	POStoFIXED( -3.5000,-13.5000, -6.0622),
	POStoFIXED( -1.7500,-13.5000, -3.0311),
	POStoFIXED(  1.7500, 13.5000, -3.0311),
	POStoFIXED(  3.5000, 13.5000, -6.0622),
	POStoFIXED(  3.5000,  4.5000, -6.0622),
	POStoFIXED(  3.5000, -4.5000, -6.0622),
	POStoFIXED(  3.5000,-13.5000, -6.0622),
	POStoFIXED(  1.7500,-13.5000, -3.0311),
};

POLYGON	polygon_test[] = {
	NORMAL(  0.0000,  1.0000,  0.0000), VERTICES( 2, 8, 0, 0),
	NORMAL(  0.0000,  1.0000,  0.0000), VERTICES( 8, 2, 3, 9),
	NORMAL(  0.8660,  0.0000,  0.5000), VERTICES( 9, 3, 4,10),
	NORMAL(  0.8660,  0.0000,  0.5000), VERTICES(10, 4, 5,11),
	NORMAL(  0.8660,  0.0000,  0.5000), VERTICES(11, 5, 6,12),
	NORMAL(  0.0000, -1.0000,  0.0000), VERTICES(12, 6, 7,13),
	NORMAL(  0.0000, -1.0000,  0.0000), VERTICES(13, 7, 1, 1),
	NORMAL(  0.0000,  1.0000,  0.0000), VERTICES( 8,14, 0, 0),
	NORMAL(  0.0000,  1.0000,  0.0000), VERTICES(14, 8, 9,15),
	NORMAL( -0.0000,  0.0000,  1.0000), VERTICES(15, 9,10,16),
	NORMAL( -0.0000,  0.0000,  1.0000), VERTICES(16,10,11,17),
	NORMAL( -0.0000,  0.0000,  1.0000), VERTICES(17,11,12,18),
	NORMAL(  0.0000, -1.0000,  0.0000), VERTICES(18,12,13,19),
	NORMAL(  0.0000, -1.0000,  0.0000), VERTICES(19,13, 1, 1),
	NORMAL(  0.0000,  1.0000,  0.0000), VERTICES(14,20, 0, 0),
	NORMAL(  0.0000,  1.0000,  0.0000), VERTICES(20,14,15,21),
	NORMAL( -0.8660,  0.0000,  0.5000), VERTICES(21,15,16,22),
	NORMAL( -0.8660,  0.0000,  0.5000), VERTICES(22,16,17,23),
	NORMAL( -0.8660,  0.0000,  0.5000), VERTICES(23,17,18,24),
	NORMAL(  0.0000, -1.0000,  0.0000), VERTICES(24,18,19,25),
	NORMAL(  0.0000, -1.0000,  0.0000), VERTICES(25,19, 1, 1),
	NORMAL(  0.0000,  1.0000,  0.0000), VERTICES(20,26, 0, 0),
	NORMAL(  0.0000,  1.0000,  0.0000), VERTICES(26,20,21,27),
	NORMAL( -0.8660,  0.0000, -0.5000), VERTICES(27,21,22,28),
	NORMAL( -0.8660,  0.0000, -0.5000), VERTICES(28,22,23,29),
	NORMAL( -0.8660,  0.0000, -0.5000), VERTICES(29,23,24,30),
	NORMAL(  0.0000, -1.0000,  0.0000), VERTICES(30,24,25,31),
	NORMAL(  0.0000, -1.0000,  0.0000), VERTICES(31,25, 1, 1),
	NORMAL(  0.0000,  1.0000,  0.0000), VERTICES(26,32, 0, 0),
	NORMAL(  0.0000,  1.0000,  0.0000), VERTICES(32,26,27,33),
	NORMAL(  0.0000,  0.0000, -1.0000), VERTICES(33,27,28,34),
	NORMAL(  0.0000,  0.0000, -1.0000), VERTICES(34,28,29,35),
	NORMAL(  0.0000,  0.0000, -1.0000), VERTICES(35,29,30,36),
	NORMAL(  0.0000, -1.0000,  0.0000), VERTICES(36,30,31,37),
	NORMAL(  0.0000, -1.0000,  0.0000), VERTICES(37,31, 1, 1),
	NORMAL(  0.0000,  1.0000,  0.0000), VERTICES(32, 2, 0, 0),
	NORMAL(  0.0000,  1.0000,  0.0000), VERTICES( 2,32,33, 3),
	NORMAL(  0.8660,  0.0000, -0.5000), VERTICES( 3,33,34, 4),
	NORMAL(  0.8660,  0.0000, -0.5000), VERTICES( 4,34,35, 5),
	NORMAL(  0.8660,  0.0000, -0.5000), VERTICES( 5,35,36, 6),
	NORMAL(  0.0000, -1.0000,  0.0000), VERTICES( 6,36,37, 7),
	NORMAL(  0.0000, -1.0000,  0.0000), VERTICES( 7,37, 1, 1),
};

ATTR	attribute_test[] = {
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(0), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(1), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(2), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(3), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(4), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(5), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(6), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(7), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(8), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(9), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(10), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(11), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(12), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(13), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(14), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(15), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(16), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(17), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(18), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(19), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(20), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(21), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(22), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(23), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(24), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(25), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(26), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(27), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(28), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(29), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(30), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(31), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(32), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(33), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(34), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(35), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(36), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(37), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(38), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(39), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(40), Chrome_ATR, Chrome_POLY, Chrome_OPT),
	ATTRIBUTE(Single_Plane, SORT_CEN, Chrome_TEX, Chrome_COL, GRreal(41), Chrome_ATR, Chrome_POLY, Chrome_OPT),
};

VECTOR	normal_test[] = {
	POStoFIXED(  0.0000,  1.0000,  0.0000),
	POStoFIXED(  0.0000, -1.0000,  0.0000),
	POStoFIXED(  0.0000,  1.0000,  0.0000),
	POStoFIXED(  0.6547,  0.7559,  0.0000),
	POStoFIXED(  1.0000,  0.0000,  0.0000),
	POStoFIXED(  1.0000,  0.0000,  0.0000),
	POStoFIXED(  0.6547, -0.7559,  0.0000),
	POStoFIXED(  0.0000, -1.0000,  0.0000),
	POStoFIXED(  0.0000,  1.0000,  0.0000),
	POStoFIXED(  0.3273,  0.7559,  0.5669),
	POStoFIXED(  0.5000,  0.0000,  0.8660),
	POStoFIXED(  0.5000,  0.0000,  0.8660),
	POStoFIXED(  0.3273, -0.7559,  0.5669),
	POStoFIXED(  0.0000, -1.0000,  0.0000),
	POStoFIXED(  0.0000,  1.0000,  0.0000),
	POStoFIXED( -0.3273,  0.7559,  0.5669),
	POStoFIXED( -0.5000,  0.0000,  0.8660),
	POStoFIXED( -0.5000,  0.0000,  0.8660),
	POStoFIXED( -0.3273, -0.7559,  0.5669),
	POStoFIXED(  0.0000, -1.0000,  0.0000),
	POStoFIXED(  0.0000,  1.0000,  0.0000),
	POStoFIXED( -0.6547,  0.7559, -0.0000),
	POStoFIXED( -1.0000,  0.0000, -0.0000),
	POStoFIXED( -1.0000,  0.0000, -0.0000),
	POStoFIXED( -0.6547, -0.7559, -0.0000),
	POStoFIXED(  0.0000, -1.0000,  0.0000),
	POStoFIXED(  0.0000,  1.0000,  0.0000),
	POStoFIXED( -0.3273,  0.7559, -0.5669),
	POStoFIXED( -0.5000,  0.0000, -0.8660),
	POStoFIXED( -0.5000,  0.0000, -0.8660),
	POStoFIXED( -0.3273, -0.7559, -0.5669),
	POStoFIXED(  0.0000, -1.0000,  0.0000),
	POStoFIXED(  0.0000,  1.0000,  0.0000),
	POStoFIXED(  0.3273,  0.7559, -0.5669),
	POStoFIXED(  0.5000,  0.0000, -0.8660),
	POStoFIXED(  0.5000,  0.0000, -0.8660),
	POStoFIXED(  0.3273, -0.7559, -0.5669),
	POStoFIXED(  0.0000, -1.0000,  0.0000),
};

XPDATA	xpdata_test[] = {
	point_test, sizeof(point_test)/sizeof(POINT),
	polygon_test, sizeof(polygon_test)/sizeof(POLYGON),
	attribute_test,
	normal_test,
};

/*
 *	OBJECTS = 1
 */

OBJECT	object_test[] = {
	(PDATA*)xpdata_test,
	TRANSLATION(  0.0000,  0.0000,  0.0000),
	ROTATION(  0.0000,  0.0000,  0.0000),
	SCALING(  1.0000,  1.0000,  1.0000),
	NULL,
	NULL,
};

