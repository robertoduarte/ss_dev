========================================================================
	manperlb.txt					1995-10-03
========================================================================
���V�����T���v���̐���
  smpclib
    �������h�^�e���C�u�����̂���f�B���N�g��
    �ڂ����́Asmpclib.doc, smpclib.ref �����Ă��������B
  smpper7
    �������h�^�e���C�u�����̎g�����̃T���v��
  smpper8
    �}�E�X�̈ړ����g���K���ɕϊ���������̃T���v��
  smpper12
    �o�[�`���K���̃f�[�^�̓ǂ݂����̃T���v��

���K�C�_���X

���K�C�_���X�ڎ�
  �E��{�R���Z�v�g
  �E�r�a�k�̃y���t�F�������C�u�����ɑ΂��鍂�����h�^�e���C�u����
  �E�t�@�C���ꗗ
  �E�g�p���@
  �E����őΉ����Ă�����̓y���t�F�����f�o�C�X
  
  ���ӁF���̍������h�^�e���C�u�����́A�����̃y���t�F�������C�u���������ʃ�
  �W���[���Ƃ��Ďg�p���Ă��܂��B���������āA�����̃y���t�F�������C�u������
  �g�p�����ł̒��ӓ_��񑩂��ƂȂǂ́A���̍������h�^�e���C�u�����ɂ��K�p
  ����܂��B



����{�R���Z�v�g
  �r�a�k�̃y���t�F�������C�u�������Ԃ��f�[�^�\�������Ɏ����F
    struct port_t {
        struct peripheral_t {
            Uint8   type;
            Uint8   size;
            Uint8   data[m];
        } peripheral[n];
    } port[2];
    ������ m �́APER_LInit() �Ŏw�肳�ꂽ�f�[�^�T�C�Y�B
           n �́APER_LInit() �Ŏw�肳�ꂽ�F���\�ȃy���t�F�����̍ő吔���Q�B
           �i�������Am,n �͏�� 1 �ȏ�j
  
  ���C�u�����ł́A��L�� m,n �̒l���R���p�C�����ɂ͌���ł��Ȃ����߂ɁA�\
  ���̂��g�킸�A�P�Ȃ�o�C�g�̔z��Ƃ��Ď������Ă���B��L�̍\���̂��g����
  ���C�u�����̕Ԃ��f�[�^�ɃA�N�Z�X�������Ƃ��ɂ́A���̂悤�ɂ���Ƃ悢�F
    PER_LInit( PER_KD_PER, 2*n, m, port, 0 );
  
  �������h�^�e���C�u�����̊�{�́A�v����ɁA�����������Ƃł���F
    �u���C�u�����̕Ԃ��f�[�^�ɍ\���̂ŃA�N�Z�X�������B�v



���r�a�k�̃y���t�F�������C�u�����ɑ΂��鍂�����h�^�e���C�u����
  ���݂̃y���t�F�������C�u�����́A�r�l�o�b����f�[�^�𓾂āA������o�b�t�@
  �ɓ���Ă���邾���ŁA���������̂��Ƃ͂��ׂĎ����ł��Ȃ���΂Ȃ�܂�
  ��B�Ⴆ�΁A���L�̂悤�Ȃ��Ƃ́u�g���K���𓾂�v�����Ƃ���{�I�ȏ�����
  �����A���݂̃��C�u�����̋@�\�����ł́A��������ׂĎ����Łi�A�v���P�[�V��
  �����Łj���Ȃ���΂Ȃ�܂���B
    
  �u�g���K���𓾂鏈��
    ����ʒu�ɑ}����Ă���f�o�C�X����y���t�F�����f�[�^�𓾂܂��B
    �h�c���`�F�b�N���āA���ڑ���s���ȃf�o�C�X�ł͂Ȃ����Ƃ��m�F���܂��B
    �u��������
      �h�c���`�F�b�N���āA�f�o�C�X�̎�ނ𔻒f���܂��B
      �f�o�C�X�̎�ނɉ����āA�y���t�F�����f�[�^����g���K���𓾂܂��B
      �i���̍ہA�u�y���t�F�����f�[�^�̉��o�C�g�ڂ̂ǂ̃r�b�g�������Ӗ�����
      ���邩�v�ȂǂƂ��������Ƃɂ��Ă��A�������i�A�v���P�[�V���������j�m��
      �Ă��Ȃ���΂Ȃ�܂���B�j
      �L�[�A�T�C�����ύX����Ă�����A�g���K�������H���܂��B
    �v
  �v
  
  �����ŉ����ɋC�t���܂��񂩁H
  ��L�̏����́A�g���K���𓾂鏈�����ƌ����܂����B�����āA���ꂪ��ʓI��
  �����ł���Ƃ������܂����B�܂�A��L�̏������g���K���𓾂�Ƃ����֐�
  �ɂ��Ă��܂��΂悢�̂ł͂Ȃ����A�Ƃ������Ƃł��B���R���̂Ƃ���ł��B����
  �ŁA���̃��C�u�����̓o��ł��B
  
  ���̃��C�u�����́A�����ł̓y���t�F�����f�[�^�̎��W�ȂǂƂ����������I�ȏ�
  ���͈�؂��܂���B�������������ʂ͊����̃y���t�F�������C�u�����ɂ܂���
  �āA�������瓾��ꂽ�f�[�^�ɑ΂���_���I�ȏ������������܂��B���̂��߁A
  ���݂̃y���t�F�������C�u�����͊��S�Ɏg�����Ƃ��ł��܂��B���̃��C�u�����́A
  �V�����y���t�F�������C�u�����ł͂Ȃ��̂ł�����A�����̃y���t�F�������C�u
  �����ƍ����ւ��邱�Ƃ͂��܂���B���̃��C�u�����̋@�\���g�������v���W�F�N
  �g�ł́A�����̃y���t�F�������C�u�����Ƌ��ɁA���̃��C�u�����������N���Ă�
  �������B���̃��C�u�����̋@�\���K�v�Ȃ��Ƃ����v���W�F�N�g�ł́A�����ς���
  �K�v�͂���܂���B�]���̃y���t�F�������C�u�����̓���͊��S�ɕۏ؂���܂��B
  
  ���̃��C�u�����Œ�`����Ă���֐���A�I�u�W�F�N�g�Ȃǂ̏ڍׂɂ��ẮA
  �t���̃��t�@�����X�}�j���A����\�[�X�R�[�h���Q�Ƃ��Ă��������B



���t�@�C���ꗗ
  per_1.c      ������ I/F ���C�u�����̃\�[�X
  per_2.c      �R�̒萔�Ɉˑ�����֐��Q
  per_3.src    PER_DisguiseTrigger() �����������邽�߂ɃA�Z���u���ɂ��Ă���B
  
  per_x.h      ������ I/F �@�\�Ɋւ����`
  per_trg.h    �g���K���Ɋւ����`
  per_dev.h    ��ʓI�ȃf�o�C�X�Ɋւ����`
  per_dgt.h    �f�W�^���f�o�C�X�Ɋւ����`
  per_anlg.h   �A�i���O�f�o�C�X�Ɋւ����`
  per_poin.h   �|�C���e�B���O�f�o�C�X�Ɋւ����`
  per_kbrd.h   �L�[�{�[�h�f�o�C�X�Ɋւ����`
  per_md.h     ���K�h���C�u�p�f�o�C�X�Ɋւ����`



���g�p���@
  smpclib.h �ɒ�`����Ă���R�̒萔�̒l��K�X�ύX���āA�ăR���p�C�����A
  �����̃y���t�F�������C�u�����Ƌ��Ƀ����N���Ďg�p���Ă��������B
  �����̒l����A�����̃y���t�F�������C�u�������g�p���郏�[�N�G���A�̃T�C
  �Y�����肵�܂��B
  �ȉ��Ƀf�t�H���g�̐ݒ�l�������Ă����܂��B���̃f�t�H���g�l�ō\��Ȃ��ꍇ
  �ɂ́A�ăR���p�C���̕K�v�͂���܂���̂ŁA���̂܂܃����N���Ďg�p���Ē���
  �܂��B
  
  _MAX_PORT
    �f�t�H���g�ł́A2 �ɐݒ肵�Ă���܂��B
    �r�`�s�t�q�m�{�̂ɂ��Ă���[�q�̐�
    �i�ʏ�́A2 �ɐݒ肵�Ă����܂��j
  _MAX_PERIPHERAL
    �f�t�H���g�ł́A6 �ɐݒ肵�Ă���܂��B
    �P�̒[�q�ɐڑ��\�ȃy���t�F�����̐�
    �i�ʏ�́A�}���`�^�[�~�i���ɑΉ����邽�߂� 6 �ȏ�ɐݒ肵�Ă����܂��j
  SZ_PERIPHERAL
    �f�t�H���g�ł́A5 �ɐݒ肵�Ă���܂��B
    �P�̃y���t�F�����̃f�[�^�T�C�Y�̍ő�
    ���Ƃ��΁A�}�E�X�i�f�[�^�T�C�Y==3�j�ƃf�W�^���p�b�h�i�f�[�^�T�C�Y==2�j
    �̗������T�|�[�g����Ȃ�A���ʂ̑����}�E�X�ɂ��킹�Đݒ肵�܂��B
    ���݂̂Ƃ���A�f�[�^�T�C�Y�̍ő�̓A�i���O�f�o�C�X�� 5 �ł��B
  
  �������菇
  �P�D�y���t�F�����h�^�e�̊������������܂��B
      PER_OpenPort() ���R�[�����܂��B
  �Q�DV BLANK OUT ���荞�݃n���h����o�^���܂��B
      ���� PER_GetPort() ���R�[������ V BLANK OUT ���荞�݃n���h����p�ӂ��A
      ������x�N�^�ɓo�^���܂��B
  �R�D�w�肵�����̓y���t�F�����f�o�C�X�̏��𓾂܂��B
      PER_GetDevice?() ���R�[�����܂��B
  �S�D�R�œ�����񂩂�A�K�v�ȏ��i�g���K�f�[�^�Ȃǁj�����o���܂��B



������ł̑Ή��^���Ή��ȓ��̓y���t�F�����f�o�C�X
  ���Ή����Ă�����̓y���t�F�����f�o�C�X
    �R���g���[���p�b�h      �g�r�r�|�O�P�O�P
    �V���g���}�E�X          �g�r�r�|�O�P�O�Q
    �}���`�^�[�~�i���U      �g�r�r�|�O�P�O�R
    �o�[�`���X�e�B�b�N      �g�r�r�|�O�P�O�S
    ���[�V���O�R���g���[��  �g�r�r�[�O�P�P�T
    
    ��L�y���t�F�����A��L�y���t�F�����ɏ�������̓y���t�F�����A���邢�́A
    ��L�y���t�F�����݊��̓��̓y���t�F�����ɑΉ����Ă��܂��B
    
    �Ή����Ă���y���t�F�����^�C�v���ȉ��ɋL���Ă����܂��B
    �f�W�^���f�o�C�X�i�y���t�F�����^�C�v���O�j
      �R���g���[���p�b�h�A�o�[�`���X�e�B�b�N�Ȃ�
    �A�i���O�f�o�C�X�i�y���t�F�����^�C�v���P�j
      ���[�V���O�R���g���[���Ȃ�
    �|�C���e�B���O�f�o�C�X�i�y���t�F�����^�C�v���Q�j
      �V���g���}�E�X�Ȃ�
    �L�[�{�[�h�f�o�C�X�i�y���t�F�����^�C�v���R�j
      ���݂̂Ƃ���Ή����鐻�i�͂���܂���B
    ���K�h���C�u�p�f�o�C�X�i�y���t�F�����^�C�v���d�j
      ���݂̂Ƃ���Ή����鐻�i�͂���܂���B
    
    ���ӁF�V���g���}�E�X�͎��ۂɂ͂r�l�o�b�ɑ΂��Ăh�c�� H'E3 �ƕԂ��܂��B
    �������A�y���t�F�������C�u�����ɂ���Ăh�c�����H����Ă��܂��̂ŁA�f�[
    �^���瓾����h�c�� H'23 �ɂȂ�܂��B
  
  �����̑��̃y���t�F����
    ����Ŕ����Ă�����̂ł́A�u�o�[�`���K���v�u�~�b�V�����X�e�B�b�N�v�̈�
    ���ɂ͒��ӂ��K�v�ł��B
    
    �o�[�`���K��
      �����̃y���t�F�������C�u�����ł́A�|�[�g�X�e�[�^�X�𒲂ׂ邱�Ƃɂ��
      �āA���ꂪ�ڑ�����Ă��邱�Ƃ͊m�F�ł��܂����A�ق��̃y���t�F�����̂�
      ���ɁA�f�[�^�̓o�b�t�@�Ɋi�[����܂���B���������āA�A�v���P�[�V����
      ���́A�r�l�o�b���_�C���N�g���[�h�ɂ��ăg���K���𓾂Ă��������B�܂��A
      �g�u�J�E���^�̒l�������Œ��ڂu�c�o�Q���瓾�Ă��������B
    �~�b�V�����X�e�B�b�N
      �}���`�^�[�~�i���U�ɑΉ����Ă��Ȃ��̂ŁA�|�[�g�ɒ��ڐڑ����Ďg�p����
      �悤�ɂ��Ă��������B����ȊO�̏ꍇ�i�}���`�^�[�~�i���U�ɐڑ������ꍇ�j
      �ɂ́A���̃y���t�F���������łȂ��A�ق��̃y���t�F�����̃f�[�^���ǂ߂�
      ���Ȃ�\��������܂��B

�����t�@�����X

���ڎ��i�֐��j
  PER_GetTrigger()
    �w�肳�ꂽ�^�C�~���O�ł̃g���K���𓾂܂��B
  PER_GetEdge()
    �w�肳�ꂽ�Q�̃^�C�~���O�̊Ԃŕω������g���K���𓾂܂��B
  PER_GetPressEdge()
    �w�肳�ꂽ�Q�̃^�C�~���O�̊Ԃŉ����ꂽ�g���K���𓾂܂��B
  PER_GetReleaseEdge()
    �w�肳�ꂽ�Q�̃^�C�~���O�̊Ԃŕ����ꂽ�g���K���𓾂܂��B
  PER_SetTriggerHandler()
    �w�肳�ꂽ�h�c�����y���t�F�����p�̃g���K�n���h����o�^���܂��B
  PER_GetTriggerHandler()
    �w�肳�ꂽ�h�c�����y���t�F�����p�̃g���K�n���h���𓾂܂��B
  PER_DisguiseTrigger()
    �g���K�����A�T�C���e�[�u���ɂ��������ĕϊ����܂��B
  PER_GetID()
    �T�^�[���y���t�F�����h�c�𓾂܂��B
  PER_GetType()
    �y���t�F�����^�C�v�𓾂܂��B
  PER_GetSize()
    �y���t�F�����f�[�^�̃T�C�Y�𓾂܂��B
  PER_GetAnalogXYZ()
    �W���A�i���O�f�o�C�X�̂`�^�c�R���o�[�^�̏o�͒l�𓾂܂��B
  PER_GetPointerXY()
    �W���|�C���e�B���O�f�o�C�X�̈ړ��ʂ𓾂܂��B
  PER_GetKeyboardType()
    �W���L�[�{�[�h�f�o�C�X�̃^�C�v�𓾂܂��B



���ڎ��i�I�u�W�F�N�g�j
  SysDevice
    �T�^�[���W���y���t�F�����̊�{�^
  SysDevDigital
    �T�^�[���W���f�W�^���f�o�C�X
  SysDevAnalog
    �T�^�[���W���A�i���O�f�o�C�X
  SysDevPointer
    �T�^�[���W���|�C���e�B���O�f�o�C�X
  SysDevKeyboard
    �T�^�[���W���L�[�{�[�h�f�o�C�X
  trigger_t
    �g���K���
  assigment_t
    �g���K���ϊ��e�[�u���i�A�T�C���e�[�u���j
  trigger_handler_t
    �g���K�n���h���i�f�o�C�X����g���K�������o�����߂̃n���h���j



���֐�
  ��PER_GetID()
    ��synopsis
      #include  "per_x.h"
      
      id = PER_GetID( device );
      
      �T�^�[���y���t�F�����h�c�𓾂܂��B
    
    
    ��parameters
      const SysDevice   *device;
      
      �f�o�C�X���
    
    
    ��return value
      int   id;
      
      �T�^�[���y���t�F�����h�c��Ԃ��܂��B
    
    
    ��influence/reference objects
      �Ȃ�
  
  
  ��PER_GetType()
    ��synopsis
      #include  "per_x.h"
      
      type = PER_GetType( device );
      
      �y���t�F�����^�C�v�𓾂܂��B
    
    
    ��parameters
      const SysDevice   *device;
      
      �f�o�C�X���
    
    
    ��return value
      int   type;
      
      �y���t�F�����^�C�v��Ԃ��܂��B
    
    
    ��influence/reference objects
      �Ȃ�
  
  
  ��PER_GetSize()
    ��synopsis
      #include  "per_x.h"
      
      size = PER_GetSize( device );
      
      �f�o�C�X�f�[�^�̃T�C�Y�i�o�C�g���j�𓾂܂��B
    
    
    ��parameters
      const SysDevice   *device;
      
      �f�o�C�X���
    
    
    ��return value
      int   size;
      
      �f�o�C�X�f�[�^�̃T�C�Y��Ԃ��܂��B
    
    
    ��influence/reference objects
      �Ȃ�
  
  
  ��PER_SetTriggerHandler()
    ��synopsis
      #include  "per_x.h"
      
      PER_SetTriggerHandler( id, handler );
      
      �w��̂h�c�����y���t�F�����p�̃g���K�n���h����ݒ肵�܂��B
      
                �E�E�E�E�E
      �����ł́u�w��̂h�c�����f�o�C�X�p�̃n���h����ݒ肵�Ă���v�Ƃ���
      ���Ƃɒ��ڂ��Ă��������B�u�w��̃^�C�v�v�ł͂���܂���̂ŁA���ӂ���
      ���������B
      
      �����Őݒ肵���֐��i�n���h���j�́APER_GetTrigger() �Ɏw��̂h�c����
      �f�o�C�X��񂪓n���ꂽ�Ƃ��ɁA�R�[������܂��B
      ��Ƃ��Ă� saturn/segasmp/per/smpclib/per_x1.c �̒��� GetTrigerDigital()
      �Ȃǂ����Ă��������B
    
    
    ��parameters
      int     id;
      trigger_handler_t  handler;
      
      <id> �́A�T�^�[���y���t�F�����h�c
      <handler> �́A�g���K�n���h��
    
    
    ��return value
      �Ȃ�
    
    
    ��influence/reference objects
      �Ȃ�
  
  
  ��PER_GetTriggerHandler()
    ��synopsis
      #include  "per_x.h"
      
      handler = PER_GetTriggerHandler( id );
      
      �w��̂h�c�����y���t�F�����p�̃g���K�n���h���𓾂܂��B
    
    
    ��parameters
      int    id;
      
      �T�^�[���y���t�F�����h�c
    
    
    ��return value
      trigger_handler_t  handler;
      
      �g���K�n���h����Ԃ��܂��B
    
    
    ��influence/reference objects
      �Ȃ�
  
  
  ��PER_GetTrigger()
    ��synopsis
      #include  "per_x.h"
      
      trigger = PER_GetTrigger( device );
      
      �f�o�C�X�̎�ނɉ����ăg���K���𓾂܂��B
      
      PER_SetTriggerHandler() �ɂ���ēo�^����Ă���h�c�����f�o�C�X����
      �g���K�������o���ɂ́A������ PER_SetTriggerHandler() �ɂ���ēo
      �^����Ă���֐��i�n���h���j��p���܂��B�������������̂��Ȃ��ꍇ�ɂ́A
      �f�t�H���g�ŗp�ӂ���Ă���֐��i�n���h���j��p���܂��B���̏ꍇ�A�\��
      �Ή����Ă�����̓y���t�F�����͉��L�̂��̂����ł��̂ŁA����ȊO�̓���
      �y���t�F��������g���K���𓾂����ꍇ�ɂ́APER_SetTriggerHandler()
      ���g�p���Ă��������B
      
      �f�t�H���g�őΉ����Ă�����̓y���t�F����
        �f�W�^���f�o�C�X
          �T�^�[���y���t�F�����h�c�Ƃ��� 0x02 - 0x0f ��Ԃ�����
        �A�i���O�f�o�C�X
          �T�^�[���y���t�F�����h�c�Ƃ��� 0x12 - 0x1f ��Ԃ�����
        �|�C���e�B���O�f�o�C�X
          �T�^�[���y���t�F�����h�c�Ƃ��� 0x22 - 0x2f ��Ԃ�����
        �L�[�{�[�h�f�o�C�X
          �T�^�[���y���t�F�����h�c�Ƃ��� 0x33 - 0x3f ��Ԃ�����
        ���K�h���C�u�p�R�a�p�b�h
          �T�^�[���y���t�F�����h�c�Ƃ��� 0xe1 ��Ԃ�����
        ���K�h���C�u�p�U�a�p�b�h
          �T�^�[���y���t�F�����h�c�Ƃ��� 0xe2 ��Ԃ�����
        ���K�h���C�u�p�}�E�X
          �T�^�[���y���t�F�����h�c�Ƃ��� 0xe3 ��Ԃ�����
    
    
    ��parameters
      const SysDevice *device;
      
      �f�o�C�X���
    
    
    ��return value
      trigger_t  trigger;
      
      �g���K����Ԃ��܂��B
    
    
    ��influence/reference objects
      �Ȃ�
  
  
  ��PER_GetEdge()
    ��synopsis
      #include  "per_x.h"
      
      edge = PER_GetEdge( t1, t2 );
      
      �g���K�̃G�b�W���𓾂܂��B
      
      �G�b�W���Ƃ� <t1> �� <t2> �̂Q�̃^�C�~���O�̂������ŕω������g��
      �K�̏��̂��Ƃ������܂��B
    
    
    ��parameters
      trigger_t  t1;
      trigger_t  t2;
      
      <t1> �� <t2> �̓g���K���B
      <t1> �� <t2> �̎��ԓI�ȏ����͖₢�܂���B
    
    
    ��return value
      trigger_t  edge;
      
      �g���K�̃G�b�W����Ԃ��܂��B
    
    
    ��influence/reference objects
      �Ȃ�
  
  
  ��PER_GetPressEdge()
    ��synopsis
      #include  "per_x.h"
      
      edge = PER_GetPressEdge( prev, current );
      
      �g���K�̃v���X�G�b�W�i�����G�b�W�j���𓾂܂��B
      
      �v���X�G�b�W���Ƃ� <prev> �� <current> �̂Q�̃^�C�~���O�̂�����
      �Ƀ����[�X��Ԃ���v���X��Ԃɕω������g���K�̏��̂��Ƃ������܂��B
    
    
    ��parameters
      trigger_t  prev;
      trigger_t  current;
      
      <prev> �� <current> �͋��Ƀg���K���B
      ���ԓI�Ɂi <prev> �� <current> �j�Ƃ����֌W�����҂��Ă��܂��B
    
    
    ��return value
      trigger_t  edge;
      
      �g���K�̃v���X�G�b�W����Ԃ��܂��B
    
    
    ��influence/reference objects
      �Ȃ�
  
  
  ��PER_GetReleaseEdge()
    ��synopsis
      #include  "per_x.h"
      
      edge = PER_GetReleaseEdge( prev, current );
      
      �g���K�̃����[�X�G�b�W�i����G�b�W�j���𓾂܂��B
      
      �����[�X�G�b�W���Ƃ� <prev> �� <current> �̂Q�̃^�C�~���O�̂���
      ���Ƀv���X��Ԃ��烊���[�X��Ԃɕω������g���K�̏��̂��Ƃ������܂��B
    
    
    ��parameters
      trigger_t  prev;
      trigger_t  current;
      
      <prev> �� <current> �͋��Ƀg���K���B
      ���ԓI�Ɂi <prev> �� <current> �j�Ƃ����֌W�����҂��Ă��܂��B
    
    
    ��return value
      trigger_t  edge;
      
      �g���K�̃����[�X�G�b�W����Ԃ��܂��B
    
    
    ��influence/reference objects
      �Ȃ�
  
  
  ��PER_DisguiseTrigger()
    ��synopsis
      #include  "per_x.h"
      
      trigger = PER_DisguiseTrigger( assignment, trigger );
      
      �g���K���<trigger> ���A�T�C���e�[�u��<assignment> �ɏ]���ĕϊ�����
      ���B<assignment> �� NULL ���w�肷��ƁA�Ȃ�̕ϊ��������� <trigger>
      �����̂܂ܕԂ��܂��B
      
      �A�T�C���e�[�u���Ƃ̓g���K���̔z��ŁA�z��̃C���f�b�N�X���g���K��
      ��̃r�b�g�ԍ��ɑΉ�����e�[�u���̂��Ƃł��B
      �Ⴆ�� <trigger> �� 0 �r�b�g�ڂ� 4 �r�b�g�ڂ� TRUE �������ꍇ�̖߂�
      �l�� ( assignment[0] | assignment[4] ) �ɂȂ�܂��B
      
      ���ʂ� assignment[] �̊e�����o�ɂ́A�����P�̃g���K��Ή������܂��B
      �P�̃����o�ɕ����̃g���K��Ή��������ꍇ�ɂ́A�P�̃g���K��������
      �������ŁA�����̃g���K�������ꂽ���̂悤�ɐU�镑���̂Œ��ӂ��K�v�ł��B
    
    
    ��parameters
      const assignment_t *assignment;
      trigger_t    trigger;
      
      <assignment> �́A�g���K���̃A�T�C���e�[�u��
      <trigger> �́A�g���K���
      
      <assignment> �� NULL ��n���Ɖ��̕ϊ��������� <trigger> �����̂܂ܕ�
      ���܂��B
    
    
    ��return value
      trigger_t  trigger;
      
      �g���K����Ԃ��܂��B
    
    
    ��influence/reference objects
      �Ȃ�
  
  
  ��PER_GetAnalogXYZ()
    ��synopsis
      #include  "per_x.h"
      
      PER_GetAnalogXYZ( analog, &x, &y, &z );
      
      �A�i���O�f�o�C�X����w�x�y�����̂`�^�c�R���o�[�^�̏o�͒l�𓾂܂��B
    
    
    ��parameters
      const SysDevAnalog *analog;
      int     *x;
      int     *y;
      int     *z;
      
      <analog> �̓A�i���O�f�o�C�X���B
      <x> <y> <z> �͂��ꂼ��w�x�y�����̂`�^�c�R���o�[�^�̏o�͒l�B
      
      <x> <y> <z> �� NULL ��n���Ƃ����ɂ͉����Ԃ���܂���B
      
      <x> �ɂ́i�E�j-127 �` +127�i���j���Ԃ���܂��B
      <y> �ɂ́i��j-127 �` +127�i���j���Ԃ���܂��B
      <z> �ɂ́i���j-127 �` +127�i��j���Ԃ���܂��B
    
    
    ��return value
      �Ȃ�
    
    
    ��influence/reference objects
      �Ȃ�
  
  
  ��PER_GetKeyboardType()
    ��synopsis
      #include  "per_x.h"
      
      type = PER_GetKeyboardType( keyboard );
      
      �L�[�{�[�h�^�C�v�𓾂܂��B
    
    
    ��parameters
      const SysDevKeyboard *keyboard;
      
      �L�[�{�[�h�f�o�C�X���
    
    
    ��return value
      int    type;
      
      �L�[�{�[�h�^�C�v��Ԃ��܂��B
    
    
    ��influence/reference objects
      �Ȃ�
  
  
  ��PER_GetPointerXY()
    ��synopsis
      #include  "per_x.h"
      
      PER_GetPointerXY( pointer, &dx, &dy );
      
      �|�C���e�B���O�f�o�C�X����w�x�����̈ړ��ʂ𓾂܂��B
      
      �w�͉E�ւ̈ړ��������A���ւ̈ړ��������ŕ\�킳��܂��B
      �x�͏�ւ̈ړ��������A���ւ̈ړ��������ŕ\�킳��܂��B
    
    
    ��parameters
      const SysDevPointer *pointer;
      int     *dx;
      int     *dy;
      
      <pointer> �̓|�C���e�B���O�f�o�C�X���B
      <dx> <dy> �͂��ꂼ��w�x�����̈ړ��ʁB
      
      <dx> <dy> �� NULL ��n���Ƃ����ɂ͉����Ԃ���܂���B
      
      <dx> �ɂ́i�E�j-255 �` 255�i���j���Ԃ���܂��B
      <dy> �ɂ́i��j-255 �` 255�i���j���Ԃ���܂��B
    
    
    ��return value
      �Ȃ�
    
    
    ��influence/reference objects
      �Ȃ�



���I�u�W�F�N�g
  ��SysDevice
    �T�^�[���W���y���t�F������\�킷�I�u�W�F�N�g�ł��B
    ���ׂĂ̕W���y���t�F�����́A���̃I�u�W�F�N�g����h�����܂��B
    ���̃I�u�W�F�N�g�́A�y���t�F�������C�u�����̕Ԃ��f�[�^���̂��̂ł��B
    .type
      �T�^�[���y���t�F�����^�C�v
    .size
      �y���t�F�����f�[�^�T�C�Y
    .data[]
      �f�[�^
  
  ��SysDevDigital
    �T�^�[���W���f�W�^���f�o�C�X��\�킷�I�u�W�F�N�g�ł��B
    ���̃I�u�W�F�N�g�́A�I�u�W�F�N�g SysDevice ���p�����Ă��܂��B
    ���ׂĂ̕W���f�W�^���f�o�C�X�́A���̃I�u�W�F�N�g����h�����܂��B
    .type
      �T�^�[���y���t�F�����^�C�v�i==TYPE_DIGITAL�j
    .size
      �y���t�F�����f�[�^�T�C�Y
    .data[]
      �g���K���
    .expended[]
      �g���f�[�^
  
  ��SysDevAnalog
    �T�^�[���W���A�i���O�f�o�C�X��\�킷�I�u�W�F�N�g�ł��B
    ���̃I�u�W�F�N�g�́A�I�u�W�F�N�g SysDevice ���p�����Ă��܂��B
    ���ׂĂ̕W���A�i���O�f�o�C�X�́A���̃I�u�W�F�N�g����h�����܂��B
    .type
      �T�^�[���y���t�F�����^�C�v�i==TYPE_ANALOG�j
    .size
      �y���t�F�����f�[�^�T�C�Y
    .data[]
      �g���K���
    .ax
      �w�����̂`�^�c�R���o�[�^�̏o�͒l�i��0�`�E255�j
    .ay
      �x�����̂`�^�c�R���o�[�^�̏o�͒l�i��0�`��255�j
    .az
      �y�����̂`�^�c�R���o�[�^�̏o�͒l�i��0�`��255�j
    .expended[]
      �g���f�[�^
  
  ��SysDevPointer
    �T�^�[���W���|�C���e�B���O�f�o�C�X��\�킷�I�u�W�F�N�g�ł��B
    ���̃I�u�W�F�N�g�́A�I�u�W�F�N�g SysDevice ���p�����Ă��܂��B
    ���ׂĂ̕W���|�C���e�B���O�f�o�C�X�́A���̃I�u�W�F�N�g����h�����܂��B
    .type
      �T�^�[���y���t�F�����^�C�v�i==TYPE_POINTER�j
    .size
      �y���t�F�����f�[�^�T�C�Y
    .status
      �g���K���A�ړ��ʂ̕����A�ړ��ʂ̃I�[�o�[�t���[�B
    .dx
    .dy
      �w�x�����̈ړ��ʂ̐�Βl�i0�`255�j
    .expended[]
      �g���f�[�^
  
  ��SysDevKeyboard
    �T�^�[���W���L�[�{�[�h�f�o�C�X��\�킷�I�u�W�F�N�g�ł��B
    ���̃I�u�W�F�N�g�́A�I�u�W�F�N�g SysDevice ���p�����Ă��܂��B
    ���ׂĂ̕W���L�[�{�[�h�f�o�C�X�́A���̃I�u�W�F�N�g����h�����܂��B
    .type
      �T�^�[���y���t�F�����^�C�v�i==TYPE_KEYBOARD�j
    .size
      �g���f�[�^
    .data[]
      �g���K���A�L�[�{�[�h�^�C�v�B
    .shift
      �V�t�g�L�[���iK_CAPS,K_NUM,K_SCROLL,K_BREAK,K_MAKE�j
    .c
      �����i���o�[
    .expended[]
      �g���f�[�^
  
  ��DevMD3B
    ���K�h���C�u�R�{�^���p�b�h��\�킷�I�u�W�F�N�g�ł��B
    ���̃I�u�W�F�N�g�́A�I�u�W�F�N�g SysDevice ���p�����Ă��܂��B
    .type
      �T�^�[���y���t�F�����^�C�v�i==TYPE_MD�j
    .size
      �y���t�F�����f�[�^�T�C�Y�i==1�j
    .data[]
      �g���K���
  
  ��DevMD6B
    ���K�h���C�u�U�{�^���p�b�h��\�킷�I�u�W�F�N�g�ł��B
    ���̃I�u�W�F�N�g�́A�I�u�W�F�N�g SysDevDigital ���p�����Ă��܂��B
    .type
      �T�^�[���y���t�F�����^�C�v�i==TYPE_MD�j
    .size
      �y���t�F�����f�[�^�T�C�Y�i==2�j
    .data[]
      �g���K���
  
  ��DevMDMouse
    ���K�h���C�u�}�E�X��\�킷�I�u�W�F�N�g�ł��B
    ���̃I�u�W�F�N�g�́A�I�u�W�F�N�g SysDevPointer ���p�����Ă��܂��B
    .type
      �T�^�[���y���t�F�����^�C�v�i==TYPE_MD�j
    .size
      �y���t�F�����f�[�^�T�C�Y�i==3�j
    .status
      �g���K���A�ړ��ʂ̕����A�ړ��ʂ̃I�[�o�[�t���[�B
    .dx
    .dy
      �w�x�����̈ړ��ʂ̐�Βl�i0�`255�j
  
  ��trigger_t
    TRG_A       �`�{�^��
    TRG_B       �a�{�^��
    TRG_C       �b�{�^��
    TRG_X       �w�{�^��
    TRG_Y       �x�{�^��
    TRG_Z       �y�{�^��
    TRG_L       �k�{�^��
    TRG_R       �q�{�^��
    TRG_UP      ��
    TRG_DOWN    ��
    TRG_LEFT    ��
    TRG_RIGHT   ��
    TRG_START   �X�^�[�g�{�^��
    
    �W���|�C���e�B���O�f�o�C�X��  �E  �̃{�^���� TRG_A
    �W���|�C���e�B���O�f�o�C�X�̐^�񒆂̃{�^���� TRG_C
    �W���|�C���e�B���O�f�o�C�X��  ��  �̃{�^���� TRG_B
    �W���|�C���e�B���O�f�o�C�X�ɂ� TRG_START,A,B,C �����Ȃ��B
    ���K�h���C�u�U�a�p�b�h�̃��[�h�{�^���� TRG_R
    ���K�h���C�u�U�a�p�b�h�ɂ� TRG_L �͂Ȃ��B
    ���K�h���C�u�R�a�p�b�h�ɂ� TRG_X,Y,Z,L,R �͂Ȃ��B
    ���[�V���O�R���g���[���[�ɂ� Y,Z �����̃A�i���O�o�͂͂Ȃ��B
    ���[�V���O�R���g���[���[�ɂ� TRG_LEFT,RIGHT,L,R �͂Ȃ��B
    
    TRG_MODE  ���K�h���C�u�U�{�^���p�b�h�̃��[�h�{�^��
    TRG_RESET  �\�t�g�t�F�A���Z�b�g
  
  ��assignment_t
    �����o�̏��Ԃ�ύX���Ă͂����Ȃ��B�����o�̏��Ԃ� trigger_t �p�̒萔
    'TRG_???' �̃r�b�g���тƑΉ����Ă��܂��B
  
  ��trigger_handler_t
    �f�o�C�X��񂩂�g���K�������o���֐��̂��ƁBPER_SetTriggerHandler()
    �Őݒ肳�ꂽ�n���h���́APER_GetTrigger() �Ɏw�肵���h�c�̃f�o�C�X���
    ���n���ꂽ�Ƃ��ɃR�[������܂��B
    ��Ƃ��Ă� saturn/segasmp/per/smpclib/per_x1.c �̒��� GetTrigerDigital()
    �Ȃǂ����Ă��������B

======= End of file ====================================================
