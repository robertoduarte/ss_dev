#
#������ makefile �̗��p�����
# 1. ���̃t�@�C�����T���v���̃f�B���N�g���ɃR�s�[���Ă��������B
# 2. �f�B���N�g���̐ݒ�𒲐����Ă��������B
#    �}�N�� GCC, SEGALIB, SEGASMP ���`���Ă��������B
# 3. �R���t�B�M�����[�V�����t�@�C�� sample.cfg ���쐬���Ă��������B
#    �}�N�� TARGET �� OBJS ���`���Ă��������B
# 4. make �����s���ăT���v���v���O�������쐬���Ă��������B
#

#
#�����̃t�@�C���Ŏg���Ă���}�N���̐���
#  CC           �b�R���p�C�����w�肵�܂��B�i���s�\�Ȍ`�ŋL�q���Ă��������j
#  CFLAGS       �b�R���p�C���̃I�v�V�������w�肵�܂��B
#  AS           �A�Z���u�����w�肵�܂��B�i���s�\�Ȍ`�ŋL�q���Ă��������j
#  ASFLAGS      �A�Z���u���̃I�v�V�������w�肵�܂��B
#  LDFLAGS      �����J�̃I�v�V�������w�肵�܂��B
#  GCC          �f�m�t�̂���f�B���N�g�����w�肵�܂��B
#  SEGASMP      �r�a�k�̃T���v���̂���f�B���N�g�����w�肵�܂��B
#  SEGALIB      �r�a�k�̃��C�u�����̂���f�B���N�g�����w�肵�܂��B
#  LOCATE_FILE  �������̃��P�[�V�������L�q�����t�@�C���ł��B
#  ENTRY_POINT  �T���v���v���O�����̎��s�J�n�A�h���X���w�肵�܂��B
#  LIBS         �����N���郉�C�u�������w�肵�܂��B
#  
#  �i�R���t�B�M�����[�V�����t�@�C�� sample.cfg �̒��Œ�`���܂��j
#  TARGET       �T���v���v���O�����̖��O���w�肵�܂��B
#               �i�t�@�C���̃v���C�}���l�[���ɂȂ�܂��j
#  OBJS         �����N����I�u�W�F�N�g�t�@�C�����w�肵�܂��B
#

CC = gcc
AS = gasm
RM = - rm -rf

CFLAGS  = -g -O0 -Wall -DMODEL_S -I$(GCC)/include -I$(SEGALIB)/include
ASFLAGS =
LDFLAGS = -T $(LOCATE_FILE) -nostartfiles

GCC     = ../../gccsh
SEGASMP = ..
SEGALIB = ../../segalib

LOCATE_FILE = smpsys.lnk
CONFIG_FILE = smpsys.cfg

LIBS=	$(SEGALIB)/lib/sega_sat.a

include	$(CONFIG_FILE)

.SUFFIXES:
.SUFFIXES: .bin .sre .o .src .c

all:	ip_gnu.bin

ip_gnu.bin:	$(TARGET).cof
	objcopy -I coff-sh -O binary $? $@
#ip_gnu.bin:	$(TARGET).sre
#	sretobin $? $@
#	del $?

#$(TARGET).sre:	$(OBJS)
#	$(CC) $(LDFLAGS) $(_LDFLAGS) -o $(TARGET).sre -Xlinker -Map -Xlinker ip_gnu.map $(OBJS) $(LIBS)
$(TARGET).cof:	$(OBJS)
	$(CC) $(LDFLAGS) $(_LDFLAGS) -o $(TARGET).cof -Xlinker -Map -Xlinker ip_gnu.map $(OBJS) $(LIBS)

%.o: %.c
	$(CC) -c $(CFLAGS) $(_CFLAGS) -o $@ $<

%.o: %.src
	$(AS) $< $(ASFLAGS) $(_ASFLAGS) -o $@
