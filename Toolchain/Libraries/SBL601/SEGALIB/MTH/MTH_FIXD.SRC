;-----------------------------------------------------------------------------
;   mth_fixd.src -- MTH ���C�u���� FIXD ���W���[��
;   Copyright(c) 1994 SEGA
;   Written by T.S on 1994-01-24 Ver.0.80
;   Updated by H.E on 1994-02-15 Ver.0.80
;
;   ���̃��C�u�����͂r�g�ɂ�����R�Q�r�b�g�Œ菬���_�̉��Z�ƁA�b����̊���Z
;   ���[�`���̍����ł��܂ށB
;
;   _MTH_Mul               -  �Œ菬���_�̏�Z
;   _MTH_Div               -  �Œ菬���_�̏��Z
;   _MTH_IntToFixed        -  �������Œ菬���_�ɕϊ�
;   _MTH_FixedToInt        -  �Œ菬���_�𐮐��ɕϊ�
;   _MTH_Product           -  �R���Ϙa���Z
;
;   ���̃��C�u�������g�p����ɂ͎��̃C���N���[�h�t�@�C�����`����K�v������B
;
;   #include "sega_xpt.h"
;   #include "sega_spr.h"
;
;-----------------------------------------------------------------------------
;
	.EXPORT _MTH_Mul
	.EXPORT _MTH_Div
	.EXPORT	_MTH_IntToFixed
	.EXPORT	_MTH_FixedToInt
	.EXPORT	_MTH_Product
;	.EXPORT	__divls
	.SECTION SEGA_P,CODE,ALIGN=4
;
;---------------------------------------------------------------------
;  SH2 fixed point multiplication routine                   '94.01.24
;---------------------------------------------------------------------
;	C Langage Interface:
;
;	Fixed32 MTH_Mul( Fixed32 a, Fixed32 b );
;
;	  Fixed point multiplication:
;	  H16.L16 x H16.L16 -> e16 H16.L16 o16
;	                           ~~~~~~~
;	    R4    x   R5    ->       R0
;
;       REGs USED:
;	       R0, R3..R5
;
	.ALIGN	4
_MTH_Mul:
 	STS	MACH,R1
 	STS	MACL,R2
	DMULS.L R4,R5
 	STS	MACH,R3
 	STS	MACL,R0
 	LDS	R1,MACH
 	LDS	R2,MACL
	RTS		; return
 	XTRCT	R3,R0	; xtract for Fixed32
;
;---------------------------------------------------------------------
;  SH2 fixed point division routine                         '94.01.24
;---------------------------------------------------------------------
;	C Langage Interface:
;
;	Fixed32 MTH_Div( Fixed32 a, Fixed32 b );
;
;	   Fixed point division:
;	   e16 H16.L16 o16/ H16.L16 -> H16.L16
;	       ~~~~~~~
;	          R4      /   R5    ->   R0
;
;       REGs USED:
;	       R0, R4, R5
;
	.ALIGN	4
_MTH_Div:
	MOV.L	A_DIV,R0
	SWAP.W	R4,R2	; make R2:R4 64bit pair
	MOV.L	R5,@R0
	EXTS.W	R2,R2	;  0  R4H   R4L  0
	MOV.L	R2,@(H'10,R0)
	SHLL16	R4
	MOV.L	R4,@(H'14,R0)
	RTS
 	MOV.L	@(H'14,R0),R0
;
;---------------------------------------------------------------------
;  SH2 int to fixed point convert routine                   '94.01.24
;---------------------------------------------------------------------
;	C Langage Interface:
;
;	Fixed32 MTH_IntToFixed( int a );
;
;	R4  << 16    ->   R0
;
;       REGs USED:
;	       nothing
;
	.ALIGN	4
_MTH_IntToFixed:
	MOV  	R4,R0
	RTS
	SHLL16	R0
;
;---------------------------------------------------------------------
;  SH2 fixed to int point convert routine                   '94.01.24
;---------------------------------------------------------------------
;	C Langage Interface:
;
;	Fixed32 MTH_FixedToInt( Fixed32 a );
;
;	R4  >> 16    ->   R0
;
;       REGs USED:
;	       nothing
;
	.ALIGN	4
_MTH_FixedToInt:
	MOV  	R4,R0
	SHLR16	R0
	RTS
	EXTS.W	R0,R0
;
;---------------------------------------------------------------------
;  SH2   3 item multiple and add process                     '94.01.24
;---------------------------------------------------------------------
;	C Langage Interface:
;
;	Fixed32 MTH_Product( Fixed32 a[3], Fixed32 b[3] );
;
;	a[0]*b[0] + a[1]*b[1] + a[2]*b[2] -> R0
;
;       REGs USED:
;	       R0-R7
;
	.ALIGN	4
_MTH_Product:                    ; function: MTH_Product
 	STS	MACH,R1
 	STS	MACL,R2
	MOV	#0,R0
	LDS	R0,MACH
	LDS	R0,MACL
	MAC.L   @R4+,@R5+
	MAC.L   @R4+,@R5+
	MAC.L   @R4+,@R5+
 	STS	MACH,R3
 	STS	MACL,R0
 	LDS	R1,MACH
 	LDS	R2,MACL
	RTS		; return
 	XTRCT	R3,R0	; xtract for Fixed32
;
	.ALIGN	4
__divls:
	MOV.L	R3,@-R15
	MOV	#H'F0,R3
	STC.L	SR,@-R15
	EXTU.B	R3,R3
	LDC	R3,SR
	MOV.L	A_DIV,R3
	MOV.L	R0,@R3		; SH2 DIV Unit
	NOP
	MOV.L	R1,@(H'4,R3)
	NOP
 	MOV.L	@(H'14,R3),R0	; get DIV result
	NOP
	LDC.L	@R15+,SR
	MOV.L	@R15+,R3
	RTS
	MOV	R0,R1
	.ALIGN	4
A_DIV	.DATA.L	H'FFFFFF00
;
;---------------------------------------------------------------------
	.END
;---------------------------------------------------------------------
;   end of file
