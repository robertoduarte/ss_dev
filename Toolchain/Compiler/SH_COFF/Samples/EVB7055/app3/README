Program Name: 
ISR


Purpose:
Demonstrate the use ISR using GNU tool chain to build an application. 
Basic program to blink LED's at specified intervals. NMI and IRQ0 will change the blink rate.
The LED-flashing rate would increase with NMI use and rate would fall down if IRQ0 were used.


Target Board and setting:
7055 Evaluation board. 
Green LED on PA.0 and Red LED on PA.1


File List:
readme.txt	- This file. Contains project description.
hwinit.c	- Implementation of function hw_initialise. Enables IRQ0 via set_interrupt_mask()
vects.c		- Vector table entry.
ioaddrs.h	- I/O register description and address definition.
		  Various CPU/PORT Register definitions.
isr.c		- Main program. Contains ISR for IRQ0 and NMI.
start.s		- startup file. Calls hw_init and then main.
isr.lnk		- Linker Script. Contains information about memory regions.
isr.ram.lnk	- Linker Script for RAM target. Contains information about memory regions.
makefile	- Makefile for the project.
inlines.h	- Contains Inline function set_interrupt_mask(). 

Summary:
Bare minimum program to demonstrate the usage of Interrupt Service Routine.


Special Notes/instructions:
Program must be flashed into FLASH ROM. Alternatively if you have HDI monitor 
or GDB stub, you can build RAM image and download it.
Always use -O2 option. Use of -O2 will guarantee that set_interrupt_mask() is inlined.

